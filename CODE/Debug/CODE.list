
CODE.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000198  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00005708  080001a0  080001a0  000011a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000000e4  080058a8  080058a8  000068a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800598c  0800598c  0000725c  2**0
                  CONTENTS, READONLY
  4 .ARM          00000008  0800598c  0800598c  0000698c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08005994  08005994  0000725c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08005994  08005994  00006994  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08005998  08005998  00006998  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         0000025c  20000000  0800599c  00007000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000370  2000025c  08005bf8  0000725c  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  200005cc  08005bf8  000075cc  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  0000725c  2**0
                  CONTENTS, READONLY
 12 .debug_info   00010e13  00000000  00000000  0000728c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00002782  00000000  00000000  0001809f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000f90  00000000  00000000  0001a828  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 00000c0c  00000000  00000000  0001b7b8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00019149  00000000  00000000  0001c3c4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00014210  00000000  00000000  0003550d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0009a9d2  00000000  00000000  0004971d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  000e40ef  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00004574  00000000  00000000  000e4134  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000064  00000000  00000000  000e86a8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a0 <__do_global_dtors_aux>:
 80001a0:	b510      	push	{r4, lr}
 80001a2:	4c05      	ldr	r4, [pc, #20]	@ (80001b8 <__do_global_dtors_aux+0x18>)
 80001a4:	7823      	ldrb	r3, [r4, #0]
 80001a6:	b933      	cbnz	r3, 80001b6 <__do_global_dtors_aux+0x16>
 80001a8:	4b04      	ldr	r3, [pc, #16]	@ (80001bc <__do_global_dtors_aux+0x1c>)
 80001aa:	b113      	cbz	r3, 80001b2 <__do_global_dtors_aux+0x12>
 80001ac:	4804      	ldr	r0, [pc, #16]	@ (80001c0 <__do_global_dtors_aux+0x20>)
 80001ae:	f3af 8000 	nop.w
 80001b2:	2301      	movs	r3, #1
 80001b4:	7023      	strb	r3, [r4, #0]
 80001b6:	bd10      	pop	{r4, pc}
 80001b8:	2000025c 	.word	0x2000025c
 80001bc:	00000000 	.word	0x00000000
 80001c0:	08005890 	.word	0x08005890

080001c4 <frame_dummy>:
 80001c4:	b508      	push	{r3, lr}
 80001c6:	4b03      	ldr	r3, [pc, #12]	@ (80001d4 <frame_dummy+0x10>)
 80001c8:	b11b      	cbz	r3, 80001d2 <frame_dummy+0xe>
 80001ca:	4903      	ldr	r1, [pc, #12]	@ (80001d8 <frame_dummy+0x14>)
 80001cc:	4803      	ldr	r0, [pc, #12]	@ (80001dc <frame_dummy+0x18>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	bd08      	pop	{r3, pc}
 80001d4:	00000000 	.word	0x00000000
 80001d8:	20000260 	.word	0x20000260
 80001dc:	08005890 	.word	0x08005890

080001e0 <memchr>:
 80001e0:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 80001e4:	2a10      	cmp	r2, #16
 80001e6:	db2b      	blt.n	8000240 <memchr+0x60>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	d008      	beq.n	8000200 <memchr+0x20>
 80001ee:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001f2:	3a01      	subs	r2, #1
 80001f4:	428b      	cmp	r3, r1
 80001f6:	d02d      	beq.n	8000254 <memchr+0x74>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	b342      	cbz	r2, 8000250 <memchr+0x70>
 80001fe:	d1f6      	bne.n	80001ee <memchr+0xe>
 8000200:	b4f0      	push	{r4, r5, r6, r7}
 8000202:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000206:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800020a:	f022 0407 	bic.w	r4, r2, #7
 800020e:	f07f 0700 	mvns.w	r7, #0
 8000212:	2300      	movs	r3, #0
 8000214:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000218:	3c08      	subs	r4, #8
 800021a:	ea85 0501 	eor.w	r5, r5, r1
 800021e:	ea86 0601 	eor.w	r6, r6, r1
 8000222:	fa85 f547 	uadd8	r5, r5, r7
 8000226:	faa3 f587 	sel	r5, r3, r7
 800022a:	fa86 f647 	uadd8	r6, r6, r7
 800022e:	faa5 f687 	sel	r6, r5, r7
 8000232:	b98e      	cbnz	r6, 8000258 <memchr+0x78>
 8000234:	d1ee      	bne.n	8000214 <memchr+0x34>
 8000236:	bcf0      	pop	{r4, r5, r6, r7}
 8000238:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800023c:	f002 0207 	and.w	r2, r2, #7
 8000240:	b132      	cbz	r2, 8000250 <memchr+0x70>
 8000242:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000246:	3a01      	subs	r2, #1
 8000248:	ea83 0301 	eor.w	r3, r3, r1
 800024c:	b113      	cbz	r3, 8000254 <memchr+0x74>
 800024e:	d1f8      	bne.n	8000242 <memchr+0x62>
 8000250:	2000      	movs	r0, #0
 8000252:	4770      	bx	lr
 8000254:	3801      	subs	r0, #1
 8000256:	4770      	bx	lr
 8000258:	2d00      	cmp	r5, #0
 800025a:	bf06      	itte	eq
 800025c:	4635      	moveq	r5, r6
 800025e:	3803      	subeq	r0, #3
 8000260:	3807      	subne	r0, #7
 8000262:	f015 0f01 	tst.w	r5, #1
 8000266:	d107      	bne.n	8000278 <memchr+0x98>
 8000268:	3001      	adds	r0, #1
 800026a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800026e:	bf02      	ittt	eq
 8000270:	3001      	addeq	r0, #1
 8000272:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 8000276:	3001      	addeq	r0, #1
 8000278:	bcf0      	pop	{r4, r5, r6, r7}
 800027a:	3801      	subs	r0, #1
 800027c:	4770      	bx	lr
 800027e:	bf00      	nop

08000280 <__aeabi_uldivmod>:
 8000280:	b953      	cbnz	r3, 8000298 <__aeabi_uldivmod+0x18>
 8000282:	b94a      	cbnz	r2, 8000298 <__aeabi_uldivmod+0x18>
 8000284:	2900      	cmp	r1, #0
 8000286:	bf08      	it	eq
 8000288:	2800      	cmpeq	r0, #0
 800028a:	bf1c      	itt	ne
 800028c:	f04f 31ff 	movne.w	r1, #4294967295
 8000290:	f04f 30ff 	movne.w	r0, #4294967295
 8000294:	f000 b988 	b.w	80005a8 <__aeabi_idiv0>
 8000298:	f1ad 0c08 	sub.w	ip, sp, #8
 800029c:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80002a0:	f000 f806 	bl	80002b0 <__udivmoddi4>
 80002a4:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002a8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002ac:	b004      	add	sp, #16
 80002ae:	4770      	bx	lr

080002b0 <__udivmoddi4>:
 80002b0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80002b4:	9d08      	ldr	r5, [sp, #32]
 80002b6:	468e      	mov	lr, r1
 80002b8:	4604      	mov	r4, r0
 80002ba:	4688      	mov	r8, r1
 80002bc:	2b00      	cmp	r3, #0
 80002be:	d14a      	bne.n	8000356 <__udivmoddi4+0xa6>
 80002c0:	428a      	cmp	r2, r1
 80002c2:	4617      	mov	r7, r2
 80002c4:	d962      	bls.n	800038c <__udivmoddi4+0xdc>
 80002c6:	fab2 f682 	clz	r6, r2
 80002ca:	b14e      	cbz	r6, 80002e0 <__udivmoddi4+0x30>
 80002cc:	f1c6 0320 	rsb	r3, r6, #32
 80002d0:	fa01 f806 	lsl.w	r8, r1, r6
 80002d4:	fa20 f303 	lsr.w	r3, r0, r3
 80002d8:	40b7      	lsls	r7, r6
 80002da:	ea43 0808 	orr.w	r8, r3, r8
 80002de:	40b4      	lsls	r4, r6
 80002e0:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 80002e4:	fa1f fc87 	uxth.w	ip, r7
 80002e8:	fbb8 f1fe 	udiv	r1, r8, lr
 80002ec:	0c23      	lsrs	r3, r4, #16
 80002ee:	fb0e 8811 	mls	r8, lr, r1, r8
 80002f2:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 80002f6:	fb01 f20c 	mul.w	r2, r1, ip
 80002fa:	429a      	cmp	r2, r3
 80002fc:	d909      	bls.n	8000312 <__udivmoddi4+0x62>
 80002fe:	18fb      	adds	r3, r7, r3
 8000300:	f101 30ff 	add.w	r0, r1, #4294967295
 8000304:	f080 80ea 	bcs.w	80004dc <__udivmoddi4+0x22c>
 8000308:	429a      	cmp	r2, r3
 800030a:	f240 80e7 	bls.w	80004dc <__udivmoddi4+0x22c>
 800030e:	3902      	subs	r1, #2
 8000310:	443b      	add	r3, r7
 8000312:	1a9a      	subs	r2, r3, r2
 8000314:	b2a3      	uxth	r3, r4
 8000316:	fbb2 f0fe 	udiv	r0, r2, lr
 800031a:	fb0e 2210 	mls	r2, lr, r0, r2
 800031e:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8000322:	fb00 fc0c 	mul.w	ip, r0, ip
 8000326:	459c      	cmp	ip, r3
 8000328:	d909      	bls.n	800033e <__udivmoddi4+0x8e>
 800032a:	18fb      	adds	r3, r7, r3
 800032c:	f100 32ff 	add.w	r2, r0, #4294967295
 8000330:	f080 80d6 	bcs.w	80004e0 <__udivmoddi4+0x230>
 8000334:	459c      	cmp	ip, r3
 8000336:	f240 80d3 	bls.w	80004e0 <__udivmoddi4+0x230>
 800033a:	443b      	add	r3, r7
 800033c:	3802      	subs	r0, #2
 800033e:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 8000342:	eba3 030c 	sub.w	r3, r3, ip
 8000346:	2100      	movs	r1, #0
 8000348:	b11d      	cbz	r5, 8000352 <__udivmoddi4+0xa2>
 800034a:	40f3      	lsrs	r3, r6
 800034c:	2200      	movs	r2, #0
 800034e:	e9c5 3200 	strd	r3, r2, [r5]
 8000352:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000356:	428b      	cmp	r3, r1
 8000358:	d905      	bls.n	8000366 <__udivmoddi4+0xb6>
 800035a:	b10d      	cbz	r5, 8000360 <__udivmoddi4+0xb0>
 800035c:	e9c5 0100 	strd	r0, r1, [r5]
 8000360:	2100      	movs	r1, #0
 8000362:	4608      	mov	r0, r1
 8000364:	e7f5      	b.n	8000352 <__udivmoddi4+0xa2>
 8000366:	fab3 f183 	clz	r1, r3
 800036a:	2900      	cmp	r1, #0
 800036c:	d146      	bne.n	80003fc <__udivmoddi4+0x14c>
 800036e:	4573      	cmp	r3, lr
 8000370:	d302      	bcc.n	8000378 <__udivmoddi4+0xc8>
 8000372:	4282      	cmp	r2, r0
 8000374:	f200 8105 	bhi.w	8000582 <__udivmoddi4+0x2d2>
 8000378:	1a84      	subs	r4, r0, r2
 800037a:	eb6e 0203 	sbc.w	r2, lr, r3
 800037e:	2001      	movs	r0, #1
 8000380:	4690      	mov	r8, r2
 8000382:	2d00      	cmp	r5, #0
 8000384:	d0e5      	beq.n	8000352 <__udivmoddi4+0xa2>
 8000386:	e9c5 4800 	strd	r4, r8, [r5]
 800038a:	e7e2      	b.n	8000352 <__udivmoddi4+0xa2>
 800038c:	2a00      	cmp	r2, #0
 800038e:	f000 8090 	beq.w	80004b2 <__udivmoddi4+0x202>
 8000392:	fab2 f682 	clz	r6, r2
 8000396:	2e00      	cmp	r6, #0
 8000398:	f040 80a4 	bne.w	80004e4 <__udivmoddi4+0x234>
 800039c:	1a8a      	subs	r2, r1, r2
 800039e:	0c03      	lsrs	r3, r0, #16
 80003a0:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 80003a4:	b280      	uxth	r0, r0
 80003a6:	b2bc      	uxth	r4, r7
 80003a8:	2101      	movs	r1, #1
 80003aa:	fbb2 fcfe 	udiv	ip, r2, lr
 80003ae:	fb0e 221c 	mls	r2, lr, ip, r2
 80003b2:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80003b6:	fb04 f20c 	mul.w	r2, r4, ip
 80003ba:	429a      	cmp	r2, r3
 80003bc:	d907      	bls.n	80003ce <__udivmoddi4+0x11e>
 80003be:	18fb      	adds	r3, r7, r3
 80003c0:	f10c 38ff 	add.w	r8, ip, #4294967295
 80003c4:	d202      	bcs.n	80003cc <__udivmoddi4+0x11c>
 80003c6:	429a      	cmp	r2, r3
 80003c8:	f200 80e0 	bhi.w	800058c <__udivmoddi4+0x2dc>
 80003cc:	46c4      	mov	ip, r8
 80003ce:	1a9b      	subs	r3, r3, r2
 80003d0:	fbb3 f2fe 	udiv	r2, r3, lr
 80003d4:	fb0e 3312 	mls	r3, lr, r2, r3
 80003d8:	ea40 4303 	orr.w	r3, r0, r3, lsl #16
 80003dc:	fb02 f404 	mul.w	r4, r2, r4
 80003e0:	429c      	cmp	r4, r3
 80003e2:	d907      	bls.n	80003f4 <__udivmoddi4+0x144>
 80003e4:	18fb      	adds	r3, r7, r3
 80003e6:	f102 30ff 	add.w	r0, r2, #4294967295
 80003ea:	d202      	bcs.n	80003f2 <__udivmoddi4+0x142>
 80003ec:	429c      	cmp	r4, r3
 80003ee:	f200 80ca 	bhi.w	8000586 <__udivmoddi4+0x2d6>
 80003f2:	4602      	mov	r2, r0
 80003f4:	1b1b      	subs	r3, r3, r4
 80003f6:	ea42 400c 	orr.w	r0, r2, ip, lsl #16
 80003fa:	e7a5      	b.n	8000348 <__udivmoddi4+0x98>
 80003fc:	f1c1 0620 	rsb	r6, r1, #32
 8000400:	408b      	lsls	r3, r1
 8000402:	fa22 f706 	lsr.w	r7, r2, r6
 8000406:	431f      	orrs	r7, r3
 8000408:	fa0e f401 	lsl.w	r4, lr, r1
 800040c:	fa20 f306 	lsr.w	r3, r0, r6
 8000410:	fa2e fe06 	lsr.w	lr, lr, r6
 8000414:	ea4f 4917 	mov.w	r9, r7, lsr #16
 8000418:	4323      	orrs	r3, r4
 800041a:	fa00 f801 	lsl.w	r8, r0, r1
 800041e:	fa1f fc87 	uxth.w	ip, r7
 8000422:	fbbe f0f9 	udiv	r0, lr, r9
 8000426:	0c1c      	lsrs	r4, r3, #16
 8000428:	fb09 ee10 	mls	lr, r9, r0, lr
 800042c:	ea44 440e 	orr.w	r4, r4, lr, lsl #16
 8000430:	fb00 fe0c 	mul.w	lr, r0, ip
 8000434:	45a6      	cmp	lr, r4
 8000436:	fa02 f201 	lsl.w	r2, r2, r1
 800043a:	d909      	bls.n	8000450 <__udivmoddi4+0x1a0>
 800043c:	193c      	adds	r4, r7, r4
 800043e:	f100 3aff 	add.w	sl, r0, #4294967295
 8000442:	f080 809c 	bcs.w	800057e <__udivmoddi4+0x2ce>
 8000446:	45a6      	cmp	lr, r4
 8000448:	f240 8099 	bls.w	800057e <__udivmoddi4+0x2ce>
 800044c:	3802      	subs	r0, #2
 800044e:	443c      	add	r4, r7
 8000450:	eba4 040e 	sub.w	r4, r4, lr
 8000454:	fa1f fe83 	uxth.w	lr, r3
 8000458:	fbb4 f3f9 	udiv	r3, r4, r9
 800045c:	fb09 4413 	mls	r4, r9, r3, r4
 8000460:	ea4e 4404 	orr.w	r4, lr, r4, lsl #16
 8000464:	fb03 fc0c 	mul.w	ip, r3, ip
 8000468:	45a4      	cmp	ip, r4
 800046a:	d908      	bls.n	800047e <__udivmoddi4+0x1ce>
 800046c:	193c      	adds	r4, r7, r4
 800046e:	f103 3eff 	add.w	lr, r3, #4294967295
 8000472:	f080 8082 	bcs.w	800057a <__udivmoddi4+0x2ca>
 8000476:	45a4      	cmp	ip, r4
 8000478:	d97f      	bls.n	800057a <__udivmoddi4+0x2ca>
 800047a:	3b02      	subs	r3, #2
 800047c:	443c      	add	r4, r7
 800047e:	ea43 4000 	orr.w	r0, r3, r0, lsl #16
 8000482:	eba4 040c 	sub.w	r4, r4, ip
 8000486:	fba0 ec02 	umull	lr, ip, r0, r2
 800048a:	4564      	cmp	r4, ip
 800048c:	4673      	mov	r3, lr
 800048e:	46e1      	mov	r9, ip
 8000490:	d362      	bcc.n	8000558 <__udivmoddi4+0x2a8>
 8000492:	d05f      	beq.n	8000554 <__udivmoddi4+0x2a4>
 8000494:	b15d      	cbz	r5, 80004ae <__udivmoddi4+0x1fe>
 8000496:	ebb8 0203 	subs.w	r2, r8, r3
 800049a:	eb64 0409 	sbc.w	r4, r4, r9
 800049e:	fa04 f606 	lsl.w	r6, r4, r6
 80004a2:	fa22 f301 	lsr.w	r3, r2, r1
 80004a6:	431e      	orrs	r6, r3
 80004a8:	40cc      	lsrs	r4, r1
 80004aa:	e9c5 6400 	strd	r6, r4, [r5]
 80004ae:	2100      	movs	r1, #0
 80004b0:	e74f      	b.n	8000352 <__udivmoddi4+0xa2>
 80004b2:	fbb1 fcf2 	udiv	ip, r1, r2
 80004b6:	0c01      	lsrs	r1, r0, #16
 80004b8:	ea41 410e 	orr.w	r1, r1, lr, lsl #16
 80004bc:	b280      	uxth	r0, r0
 80004be:	ea40 4201 	orr.w	r2, r0, r1, lsl #16
 80004c2:	463b      	mov	r3, r7
 80004c4:	4638      	mov	r0, r7
 80004c6:	463c      	mov	r4, r7
 80004c8:	46b8      	mov	r8, r7
 80004ca:	46be      	mov	lr, r7
 80004cc:	2620      	movs	r6, #32
 80004ce:	fbb1 f1f7 	udiv	r1, r1, r7
 80004d2:	eba2 0208 	sub.w	r2, r2, r8
 80004d6:	ea41 410c 	orr.w	r1, r1, ip, lsl #16
 80004da:	e766      	b.n	80003aa <__udivmoddi4+0xfa>
 80004dc:	4601      	mov	r1, r0
 80004de:	e718      	b.n	8000312 <__udivmoddi4+0x62>
 80004e0:	4610      	mov	r0, r2
 80004e2:	e72c      	b.n	800033e <__udivmoddi4+0x8e>
 80004e4:	f1c6 0220 	rsb	r2, r6, #32
 80004e8:	fa2e f302 	lsr.w	r3, lr, r2
 80004ec:	40b7      	lsls	r7, r6
 80004ee:	40b1      	lsls	r1, r6
 80004f0:	fa20 f202 	lsr.w	r2, r0, r2
 80004f4:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 80004f8:	430a      	orrs	r2, r1
 80004fa:	fbb3 f8fe 	udiv	r8, r3, lr
 80004fe:	b2bc      	uxth	r4, r7
 8000500:	fb0e 3318 	mls	r3, lr, r8, r3
 8000504:	0c11      	lsrs	r1, r2, #16
 8000506:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 800050a:	fb08 f904 	mul.w	r9, r8, r4
 800050e:	40b0      	lsls	r0, r6
 8000510:	4589      	cmp	r9, r1
 8000512:	ea4f 4310 	mov.w	r3, r0, lsr #16
 8000516:	b280      	uxth	r0, r0
 8000518:	d93e      	bls.n	8000598 <__udivmoddi4+0x2e8>
 800051a:	1879      	adds	r1, r7, r1
 800051c:	f108 3cff 	add.w	ip, r8, #4294967295
 8000520:	d201      	bcs.n	8000526 <__udivmoddi4+0x276>
 8000522:	4589      	cmp	r9, r1
 8000524:	d81f      	bhi.n	8000566 <__udivmoddi4+0x2b6>
 8000526:	eba1 0109 	sub.w	r1, r1, r9
 800052a:	fbb1 f9fe 	udiv	r9, r1, lr
 800052e:	fb09 f804 	mul.w	r8, r9, r4
 8000532:	fb0e 1119 	mls	r1, lr, r9, r1
 8000536:	b292      	uxth	r2, r2
 8000538:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 800053c:	4542      	cmp	r2, r8
 800053e:	d229      	bcs.n	8000594 <__udivmoddi4+0x2e4>
 8000540:	18ba      	adds	r2, r7, r2
 8000542:	f109 31ff 	add.w	r1, r9, #4294967295
 8000546:	d2c4      	bcs.n	80004d2 <__udivmoddi4+0x222>
 8000548:	4542      	cmp	r2, r8
 800054a:	d2c2      	bcs.n	80004d2 <__udivmoddi4+0x222>
 800054c:	f1a9 0102 	sub.w	r1, r9, #2
 8000550:	443a      	add	r2, r7
 8000552:	e7be      	b.n	80004d2 <__udivmoddi4+0x222>
 8000554:	45f0      	cmp	r8, lr
 8000556:	d29d      	bcs.n	8000494 <__udivmoddi4+0x1e4>
 8000558:	ebbe 0302 	subs.w	r3, lr, r2
 800055c:	eb6c 0c07 	sbc.w	ip, ip, r7
 8000560:	3801      	subs	r0, #1
 8000562:	46e1      	mov	r9, ip
 8000564:	e796      	b.n	8000494 <__udivmoddi4+0x1e4>
 8000566:	eba7 0909 	sub.w	r9, r7, r9
 800056a:	4449      	add	r1, r9
 800056c:	f1a8 0c02 	sub.w	ip, r8, #2
 8000570:	fbb1 f9fe 	udiv	r9, r1, lr
 8000574:	fb09 f804 	mul.w	r8, r9, r4
 8000578:	e7db      	b.n	8000532 <__udivmoddi4+0x282>
 800057a:	4673      	mov	r3, lr
 800057c:	e77f      	b.n	800047e <__udivmoddi4+0x1ce>
 800057e:	4650      	mov	r0, sl
 8000580:	e766      	b.n	8000450 <__udivmoddi4+0x1a0>
 8000582:	4608      	mov	r0, r1
 8000584:	e6fd      	b.n	8000382 <__udivmoddi4+0xd2>
 8000586:	443b      	add	r3, r7
 8000588:	3a02      	subs	r2, #2
 800058a:	e733      	b.n	80003f4 <__udivmoddi4+0x144>
 800058c:	f1ac 0c02 	sub.w	ip, ip, #2
 8000590:	443b      	add	r3, r7
 8000592:	e71c      	b.n	80003ce <__udivmoddi4+0x11e>
 8000594:	4649      	mov	r1, r9
 8000596:	e79c      	b.n	80004d2 <__udivmoddi4+0x222>
 8000598:	eba1 0109 	sub.w	r1, r1, r9
 800059c:	46c4      	mov	ip, r8
 800059e:	fbb1 f9fe 	udiv	r9, r1, lr
 80005a2:	fb09 f804 	mul.w	r8, r9, r4
 80005a6:	e7c4      	b.n	8000532 <__udivmoddi4+0x282>

080005a8 <__aeabi_idiv0>:
 80005a8:	4770      	bx	lr
 80005aa:	bf00      	nop

080005ac <adc_task_run>:
 80005ac:	b580      	push	{r7, lr}
 80005ae:	b082      	sub	sp, #8
 80005b0:	af00      	add	r7, sp, #0
 80005b2:	6078      	str	r0, [r7, #4]
 80005b4:	687b      	ldr	r3, [r7, #4]
 80005b6:	681b      	ldr	r3, [r3, #0]
 80005b8:	2b00      	cmp	r3, #0
 80005ba:	db0f      	blt.n	80005dc <adc_task_run+0x30>
 80005bc:	687b      	ldr	r3, [r7, #4]
 80005be:	681a      	ldr	r2, [r3, #0]
 80005c0:	687b      	ldr	r3, [r7, #4]
 80005c2:	685b      	ldr	r3, [r3, #4]
 80005c4:	429a      	cmp	r2, r3
 80005c6:	da09      	bge.n	80005dc <adc_task_run+0x30>
 80005c8:	687b      	ldr	r3, [r7, #4]
 80005ca:	681b      	ldr	r3, [r3, #0]
 80005cc:	687a      	ldr	r2, [r7, #4]
 80005ce:	3306      	adds	r3, #6
 80005d0:	009b      	lsls	r3, r3, #2
 80005d2:	4413      	add	r3, r2
 80005d4:	685b      	ldr	r3, [r3, #4]
 80005d6:	6878      	ldr	r0, [r7, #4]
 80005d8:	4798      	blx	r3
 80005da:	e000      	b.n	80005de <adc_task_run+0x32>
 80005dc:	e7fe      	b.n	80005dc <adc_task_run+0x30>
 80005de:	3708      	adds	r7, #8
 80005e0:	46bd      	mov	sp, r7
 80005e2:	bd80      	pop	{r7, pc}

080005e4 <adc_task_state_0_init>:
 80005e4:	b480      	push	{r7}
 80005e6:	b083      	sub	sp, #12
 80005e8:	af00      	add	r7, sp, #0
 80005ea:	6078      	str	r0, [r7, #4]
 80005ec:	687b      	ldr	r3, [r7, #4]
 80005ee:	2201      	movs	r2, #1
 80005f0:	601a      	str	r2, [r3, #0]
 80005f2:	bf00      	nop
 80005f4:	370c      	adds	r7, #12
 80005f6:	46bd      	mov	sp, r7
 80005f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80005fc:	4770      	bx	lr

080005fe <adc_task_state_1_read>:
 80005fe:	b590      	push	{r4, r7, lr}
 8000600:	b083      	sub	sp, #12
 8000602:	af00      	add	r7, sp, #0
 8000604:	6078      	str	r0, [r7, #4]
 8000606:	687b      	ldr	r3, [r7, #4]
 8000608:	699b      	ldr	r3, [r3, #24]
 800060a:	4618      	mov	r0, r3
 800060c:	f001 fe9a 	bl	8002344 <HAL_ADC_Start>
 8000610:	687b      	ldr	r3, [r7, #4]
 8000612:	699b      	ldr	r3, [r3, #24]
 8000614:	210a      	movs	r1, #10
 8000616:	4618      	mov	r0, r3
 8000618:	f001 ff7b 	bl	8002512 <HAL_ADC_PollForConversion>
 800061c:	4603      	mov	r3, r0
 800061e:	2b00      	cmp	r3, #0
 8000620:	d108      	bne.n	8000634 <adc_task_state_1_read+0x36>
 8000622:	687b      	ldr	r3, [r7, #4]
 8000624:	699a      	ldr	r2, [r3, #24]
 8000626:	687b      	ldr	r3, [r7, #4]
 8000628:	68dc      	ldr	r4, [r3, #12]
 800062a:	4610      	mov	r0, r2
 800062c:	f001 fffc 	bl	8002628 <HAL_ADC_GetValue>
 8000630:	4603      	mov	r3, r0
 8000632:	63a3      	str	r3, [r4, #56]	@ 0x38
 8000634:	687b      	ldr	r3, [r7, #4]
 8000636:	699b      	ldr	r3, [r3, #24]
 8000638:	210a      	movs	r1, #10
 800063a:	4618      	mov	r0, r3
 800063c:	f001 ff69 	bl	8002512 <HAL_ADC_PollForConversion>
 8000640:	4603      	mov	r3, r0
 8000642:	2b00      	cmp	r3, #0
 8000644:	d108      	bne.n	8000658 <adc_task_state_1_read+0x5a>
 8000646:	687b      	ldr	r3, [r7, #4]
 8000648:	699a      	ldr	r2, [r3, #24]
 800064a:	687b      	ldr	r3, [r7, #4]
 800064c:	689c      	ldr	r4, [r3, #8]
 800064e:	4610      	mov	r0, r2
 8000650:	f001 ffea 	bl	8002628 <HAL_ADC_GetValue>
 8000654:	4603      	mov	r3, r0
 8000656:	63a3      	str	r3, [r4, #56]	@ 0x38
 8000658:	687b      	ldr	r3, [r7, #4]
 800065a:	699b      	ldr	r3, [r3, #24]
 800065c:	4618      	mov	r0, r3
 800065e:	f001 ff25 	bl	80024ac <HAL_ADC_Stop>
 8000662:	bf00      	nop
 8000664:	370c      	adds	r7, #12
 8000666:	46bd      	mov	sp, r7
 8000668:	bd90      	pop	{r4, r7, pc}

0800066a <read_adc_channels_scan_mode>:
 800066a:	b580      	push	{r7, lr}
 800066c:	b084      	sub	sp, #16
 800066e:	af00      	add	r7, sp, #0
 8000670:	60f8      	str	r0, [r7, #12]
 8000672:	60b9      	str	r1, [r7, #8]
 8000674:	607a      	str	r2, [r7, #4]
 8000676:	68f8      	ldr	r0, [r7, #12]
 8000678:	f001 fe64 	bl	8002344 <HAL_ADC_Start>
 800067c:	210a      	movs	r1, #10
 800067e:	68f8      	ldr	r0, [r7, #12]
 8000680:	f001 ff47 	bl	8002512 <HAL_ADC_PollForConversion>
 8000684:	4603      	mov	r3, r0
 8000686:	2b00      	cmp	r3, #0
 8000688:	d106      	bne.n	8000698 <read_adc_channels_scan_mode+0x2e>
 800068a:	68f8      	ldr	r0, [r7, #12]
 800068c:	f001 ffcc 	bl	8002628 <HAL_ADC_GetValue>
 8000690:	4603      	mov	r3, r0
 8000692:	461a      	mov	r2, r3
 8000694:	68bb      	ldr	r3, [r7, #8]
 8000696:	601a      	str	r2, [r3, #0]
 8000698:	210a      	movs	r1, #10
 800069a:	68f8      	ldr	r0, [r7, #12]
 800069c:	f001 ff39 	bl	8002512 <HAL_ADC_PollForConversion>
 80006a0:	4603      	mov	r3, r0
 80006a2:	2b00      	cmp	r3, #0
 80006a4:	d106      	bne.n	80006b4 <read_adc_channels_scan_mode+0x4a>
 80006a6:	68f8      	ldr	r0, [r7, #12]
 80006a8:	f001 ffbe 	bl	8002628 <HAL_ADC_GetValue>
 80006ac:	4603      	mov	r3, r0
 80006ae:	461a      	mov	r2, r3
 80006b0:	687b      	ldr	r3, [r7, #4]
 80006b2:	601a      	str	r2, [r3, #0]
 80006b4:	68f8      	ldr	r0, [r7, #12]
 80006b6:	f001 fef9 	bl	80024ac <HAL_ADC_Stop>
 80006ba:	bf00      	nop
 80006bc:	3710      	adds	r7, #16
 80006be:	46bd      	mov	sp, r7
 80006c0:	bd80      	pop	{r7, pc}

080006c2 <controller_task_state_0_init>:
 80006c2:	b580      	push	{r7, lr}
 80006c4:	b084      	sub	sp, #16
 80006c6:	af00      	add	r7, sp, #0
 80006c8:	6078      	str	r0, [r7, #4]
 80006ca:	687b      	ldr	r3, [r7, #4]
 80006cc:	f04f 0200 	mov.w	r2, #0
 80006d0:	64da      	str	r2, [r3, #76]	@ 0x4c
 80006d2:	687b      	ldr	r3, [r7, #4]
 80006d4:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80006d6:	213c      	movs	r1, #60	@ 0x3c
 80006d8:	4618      	mov	r0, r3
 80006da:	f003 fff1 	bl	80046c0 <HAL_TIM_Encoder_Start>
 80006de:	687b      	ldr	r3, [r7, #4]
 80006e0:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 80006e2:	4618      	mov	r0, r3
 80006e4:	f001 f89c 	bl	8001820 <enable>
 80006e8:	2300      	movs	r3, #0
 80006ea:	60fb      	str	r3, [r7, #12]
 80006ec:	2300      	movs	r3, #0
 80006ee:	60bb      	str	r3, [r7, #8]
 80006f0:	2001      	movs	r0, #1
 80006f2:	f001 fdbf 	bl	8002274 <HAL_Delay>
 80006f6:	687b      	ldr	r3, [r7, #4]
 80006f8:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80006fa:	f107 0208 	add.w	r2, r7, #8
 80006fe:	f107 010c 	add.w	r1, r7, #12
 8000702:	4618      	mov	r0, r3
 8000704:	f7ff ffb1 	bl	800066a <read_adc_channels_scan_mode>
 8000708:	687b      	ldr	r3, [r7, #4]
 800070a:	681b      	ldr	r3, [r3, #0]
 800070c:	2b00      	cmp	r3, #0
 800070e:	d101      	bne.n	8000714 <controller_task_state_0_init+0x52>
 8000710:	68bb      	ldr	r3, [r7, #8]
 8000712:	e000      	b.n	8000716 <controller_task_state_0_init+0x54>
 8000714:	68fb      	ldr	r3, [r7, #12]
 8000716:	687a      	ldr	r2, [r7, #4]
 8000718:	6153      	str	r3, [r2, #20]
 800071a:	687b      	ldr	r3, [r7, #4]
 800071c:	2201      	movs	r2, #1
 800071e:	605a      	str	r2, [r3, #4]
 8000720:	bf00      	nop
 8000722:	3710      	adds	r7, #16
 8000724:	46bd      	mov	sp, r7
 8000726:	bd80      	pop	{r7, pc}

08000728 <controller_task_state_1_calc_vel>:
 8000728:	b580      	push	{r7, lr}
 800072a:	b092      	sub	sp, #72	@ 0x48
 800072c:	af00      	add	r7, sp, #0
 800072e:	6078      	str	r0, [r7, #4]
 8000730:	687b      	ldr	r3, [r7, #4]
 8000732:	695a      	ldr	r2, [r3, #20]
 8000734:	687b      	ldr	r3, [r7, #4]
 8000736:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8000738:	4413      	add	r3, r2
 800073a:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800073c:	687b      	ldr	r3, [r7, #4]
 800073e:	695a      	ldr	r2, [r3, #20]
 8000740:	687b      	ldr	r3, [r7, #4]
 8000742:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000744:	1ad3      	subs	r3, r2, r3
 8000746:	63bb      	str	r3, [r7, #56]	@ 0x38
 8000748:	2300      	movs	r3, #0
 800074a:	60fb      	str	r3, [r7, #12]
 800074c:	2300      	movs	r3, #0
 800074e:	60bb      	str	r3, [r7, #8]
 8000750:	2001      	movs	r0, #1
 8000752:	f001 fd8f 	bl	8002274 <HAL_Delay>
 8000756:	687b      	ldr	r3, [r7, #4]
 8000758:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800075a:	f107 0208 	add.w	r2, r7, #8
 800075e:	f107 010c 	add.w	r1, r7, #12
 8000762:	4618      	mov	r0, r3
 8000764:	f7ff ff81 	bl	800066a <read_adc_channels_scan_mode>
 8000768:	687b      	ldr	r3, [r7, #4]
 800076a:	681b      	ldr	r3, [r3, #0]
 800076c:	2b00      	cmp	r3, #0
 800076e:	d101      	bne.n	8000774 <controller_task_state_1_calc_vel+0x4c>
 8000770:	68bb      	ldr	r3, [r7, #8]
 8000772:	e000      	b.n	8000776 <controller_task_state_1_calc_vel+0x4e>
 8000774:	68fb      	ldr	r3, [r7, #12]
 8000776:	637b      	str	r3, [r7, #52]	@ 0x34
 8000778:	4b6e      	ldr	r3, [pc, #440]	@ (8000934 <controller_task_state_1_calc_vel+0x20c>)
 800077a:	633b      	str	r3, [r7, #48]	@ 0x30
 800077c:	f04f 4382 	mov.w	r3, #1090519040	@ 0x41000000
 8000780:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8000782:	f04f 0300 	mov.w	r3, #0
 8000786:	647b      	str	r3, [r7, #68]	@ 0x44
 8000788:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
 800078a:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 800078c:	429a      	cmp	r2, r3
 800078e:	dd18      	ble.n	80007c2 <controller_task_state_1_calc_vel+0x9a>
 8000790:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
 8000792:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8000794:	4413      	add	r3, r2
 8000796:	637b      	str	r3, [r7, #52]	@ 0x34
 8000798:	687b      	ldr	r3, [r7, #4]
 800079a:	695b      	ldr	r3, [r3, #20]
 800079c:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
 800079e:	1ad3      	subs	r3, r2, r3
 80007a0:	637b      	str	r3, [r7, #52]	@ 0x34
 80007a2:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 80007a4:	ee07 3a90 	vmov	s15, r3
 80007a8:	eef8 6ae7 	vcvt.f32.s32	s13, s15
 80007ac:	ed97 7a0c 	vldr	s14, [r7, #48]	@ 0x30
 80007b0:	eec6 7a87 	vdiv.f32	s15, s13, s14
 80007b4:	ed97 7a0b 	vldr	s14, [r7, #44]	@ 0x2c
 80007b8:	ee67 7a27 	vmul.f32	s15, s14, s15
 80007bc:	edc7 7a11 	vstr	s15, [r7, #68]	@ 0x44
 80007c0:	e01f      	b.n	8000802 <controller_task_state_1_calc_vel+0xda>
 80007c2:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
 80007c4:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80007c6:	429a      	cmp	r2, r3
 80007c8:	da18      	bge.n	80007fc <controller_task_state_1_calc_vel+0xd4>
 80007ca:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
 80007cc:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80007ce:	1ad3      	subs	r3, r2, r3
 80007d0:	637b      	str	r3, [r7, #52]	@ 0x34
 80007d2:	687b      	ldr	r3, [r7, #4]
 80007d4:	695b      	ldr	r3, [r3, #20]
 80007d6:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
 80007d8:	1ad3      	subs	r3, r2, r3
 80007da:	637b      	str	r3, [r7, #52]	@ 0x34
 80007dc:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 80007de:	ee07 3a90 	vmov	s15, r3
 80007e2:	eef8 6ae7 	vcvt.f32.s32	s13, s15
 80007e6:	ed97 7a0c 	vldr	s14, [r7, #48]	@ 0x30
 80007ea:	eec6 7a87 	vdiv.f32	s15, s13, s14
 80007ee:	ed97 7a0b 	vldr	s14, [r7, #44]	@ 0x2c
 80007f2:	ee67 7a27 	vmul.f32	s15, s14, s15
 80007f6:	edc7 7a11 	vstr	s15, [r7, #68]	@ 0x44
 80007fa:	e002      	b.n	8000802 <controller_task_state_1_calc_vel+0xda>
 80007fc:	f04f 0300 	mov.w	r3, #0
 8000800:	647b      	str	r3, [r7, #68]	@ 0x44
 8000802:	687b      	ldr	r3, [r7, #4]
 8000804:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8000806:	681b      	ldr	r3, [r3, #0]
 8000808:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800080a:	62bb      	str	r3, [r7, #40]	@ 0x28
 800080c:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 800080e:	687b      	ldr	r3, [r7, #4]
 8000810:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8000812:	1ad3      	subs	r3, r2, r3
 8000814:	627b      	str	r3, [r7, #36]	@ 0x24
 8000816:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 8000818:	687b      	ldr	r3, [r7, #4]
 800081a:	625a      	str	r2, [r3, #36]	@ 0x24
 800081c:	687b      	ldr	r3, [r7, #4]
 800081e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8000820:	681b      	ldr	r3, [r3, #0]
 8000822:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8000824:	687b      	ldr	r3, [r7, #4]
 8000826:	621a      	str	r2, [r3, #32]
 8000828:	687b      	ldr	r3, [r7, #4]
 800082a:	6a1a      	ldr	r2, [r3, #32]
 800082c:	687b      	ldr	r3, [r7, #4]
 800082e:	69db      	ldr	r3, [r3, #28]
 8000830:	429a      	cmp	r2, r3
 8000832:	d305      	bcc.n	8000840 <controller_task_state_1_calc_vel+0x118>
 8000834:	687b      	ldr	r3, [r7, #4]
 8000836:	6a1a      	ldr	r2, [r3, #32]
 8000838:	687b      	ldr	r3, [r7, #4]
 800083a:	69db      	ldr	r3, [r3, #28]
 800083c:	1ad3      	subs	r3, r2, r3
 800083e:	e005      	b.n	800084c <controller_task_state_1_calc_vel+0x124>
 8000840:	687b      	ldr	r3, [r7, #4]
 8000842:	6a1a      	ldr	r2, [r3, #32]
 8000844:	687b      	ldr	r3, [r7, #4]
 8000846:	69db      	ldr	r3, [r3, #28]
 8000848:	1ad3      	subs	r3, r2, r3
 800084a:	3b01      	subs	r3, #1
 800084c:	623b      	str	r3, [r7, #32]
 800084e:	6a3b      	ldr	r3, [r7, #32]
 8000850:	2b00      	cmp	r3, #0
 8000852:	d06a      	beq.n	800092a <controller_task_state_1_calc_vel+0x202>
 8000854:	6a3b      	ldr	r3, [r7, #32]
 8000856:	ee07 3a90 	vmov	s15, r3
 800085a:	eeb8 7a67 	vcvt.f32.u32	s14, s15
 800085e:	eddf 6a36 	vldr	s13, [pc, #216]	@ 8000938 <controller_task_state_1_calc_vel+0x210>
 8000862:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8000866:	edc7 7a07 	vstr	s15, [r7, #28]
 800086a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800086c:	ee07 3a90 	vmov	s15, r3
 8000870:	eef8 6ae7 	vcvt.f32.s32	s13, s15
 8000874:	ed97 7a07 	vldr	s14, [r7, #28]
 8000878:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800087c:	edc7 7a06 	vstr	s15, [r7, #24]
 8000880:	ed97 7a11 	vldr	s14, [r7, #68]	@ 0x44
 8000884:	edd7 7a06 	vldr	s15, [r7, #24]
 8000888:	ee77 7a67 	vsub.f32	s15, s14, s15
 800088c:	edc7 7a05 	vstr	s15, [r7, #20]
 8000890:	687b      	ldr	r3, [r7, #4]
 8000892:	edd3 7a13 	vldr	s15, [r3, #76]	@ 0x4c
 8000896:	ed97 7a05 	vldr	s14, [r7, #20]
 800089a:	ee77 6a67 	vsub.f32	s13, s14, s15
 800089e:	ed97 7a07 	vldr	s14, [r7, #28]
 80008a2:	eec6 7a87 	vdiv.f32	s15, s13, s14
 80008a6:	edc7 7a04 	vstr	s15, [r7, #16]
 80008aa:	687b      	ldr	r3, [r7, #4]
 80008ac:	697a      	ldr	r2, [r7, #20]
 80008ae:	64da      	str	r2, [r3, #76]	@ 0x4c
 80008b0:	687b      	ldr	r3, [r7, #4]
 80008b2:	ed93 7a0a 	vldr	s14, [r3, #40]	@ 0x28
 80008b6:	edd7 7a05 	vldr	s15, [r7, #20]
 80008ba:	ee27 7a27 	vmul.f32	s14, s14, s15
 80008be:	687b      	ldr	r3, [r7, #4]
 80008c0:	edd3 6a0b 	vldr	s13, [r3, #44]	@ 0x2c
 80008c4:	edd7 7a04 	vldr	s15, [r7, #16]
 80008c8:	ee66 7aa7 	vmul.f32	s15, s13, s15
 80008cc:	ee77 7a27 	vadd.f32	s15, s14, s15
 80008d0:	687b      	ldr	r3, [r7, #4]
 80008d2:	edc3 7a06 	vstr	s15, [r3, #24]
 80008d6:	687b      	ldr	r3, [r7, #4]
 80008d8:	699b      	ldr	r3, [r3, #24]
 80008da:	643b      	str	r3, [r7, #64]	@ 0x40
 80008dc:	edd7 7a10 	vldr	s15, [r7, #64]	@ 0x40
 80008e0:	ed9f 7a16 	vldr	s14, [pc, #88]	@ 800093c <controller_task_state_1_calc_vel+0x214>
 80008e4:	eef4 7ac7 	vcmpe.f32	s15, s14
 80008e8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80008ec:	dd02      	ble.n	80008f4 <controller_task_state_1_calc_vel+0x1cc>
 80008ee:	4b14      	ldr	r3, [pc, #80]	@ (8000940 <controller_task_state_1_calc_vel+0x218>)
 80008f0:	643b      	str	r3, [r7, #64]	@ 0x40
 80008f2:	e00a      	b.n	800090a <controller_task_state_1_calc_vel+0x1e2>
 80008f4:	edd7 7a10 	vldr	s15, [r7, #64]	@ 0x40
 80008f8:	ed9f 7a12 	vldr	s14, [pc, #72]	@ 8000944 <controller_task_state_1_calc_vel+0x21c>
 80008fc:	eef4 7ac7 	vcmpe.f32	s15, s14
 8000900:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8000904:	d501      	bpl.n	800090a <controller_task_state_1_calc_vel+0x1e2>
 8000906:	4b10      	ldr	r3, [pc, #64]	@ (8000948 <controller_task_state_1_calc_vel+0x220>)
 8000908:	643b      	str	r3, [r7, #64]	@ 0x40
 800090a:	687b      	ldr	r3, [r7, #4]
 800090c:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800090e:	edd7 7a10 	vldr	s15, [r7, #64]	@ 0x40
 8000912:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8000916:	ee17 1a90 	vmov	r1, s15
 800091a:	4618      	mov	r0, r3
 800091c:	f000 fec8 	bl	80016b0 <set_duty>
 8000920:	687b      	ldr	r3, [r7, #4]
 8000922:	6a1a      	ldr	r2, [r3, #32]
 8000924:	687b      	ldr	r3, [r7, #4]
 8000926:	61da      	str	r2, [r3, #28]
 8000928:	e000      	b.n	800092c <controller_task_state_1_calc_vel+0x204>
 800092a:	bf00      	nop
 800092c:	3748      	adds	r7, #72	@ 0x48
 800092e:	46bd      	mov	sp, r7
 8000930:	bd80      	pop	{r7, pc}
 8000932:	bf00      	nop
 8000934:	457ff000 	.word	0x457ff000
 8000938:	445ac000 	.word	0x445ac000
 800093c:	42c80000 	.word	0x42c80000
 8000940:	42c80000 	.word	0x42c80000
 8000944:	c2c80000 	.word	0xc2c80000
 8000948:	c2c80000 	.word	0xc2c80000

0800094c <game_task_run>:

#include <stdio.h>

// A function to run the appropriate state of the task
void game_task_run(GameTask *game_task)
{    // Check for a valid state
 800094c:	b580      	push	{r7, lr}
 800094e:	b082      	sub	sp, #8
 8000950:	af00      	add	r7, sp, #0
 8000952:	6078      	str	r0, [r7, #4]
    if (game_task->state >= 0 && game_task->state < game_task->num_states)
 8000954:	687b      	ldr	r3, [r7, #4]
 8000956:	681b      	ldr	r3, [r3, #0]
 8000958:	2b00      	cmp	r3, #0
 800095a:	db0f      	blt.n	800097c <game_task_run+0x30>
 800095c:	687b      	ldr	r3, [r7, #4]
 800095e:	681a      	ldr	r2, [r3, #0]
 8000960:	687b      	ldr	r3, [r7, #4]
 8000962:	685b      	ldr	r3, [r3, #4]
 8000964:	429a      	cmp	r2, r3
 8000966:	da09      	bge.n	800097c <game_task_run+0x30>

    	// game_task is a pointer right now
    	// -> dereferences pointer and accesses class member in one step
    	// the same as (*ptr).member

        game_task->state_list[game_task->state](game_task);
 8000968:	687b      	ldr	r3, [r7, #4]
 800096a:	681b      	ldr	r3, [r3, #0]
 800096c:	687a      	ldr	r2, [r7, #4]
 800096e:	330c      	adds	r3, #12
 8000970:	009b      	lsls	r3, r3, #2
 8000972:	4413      	add	r3, r2
 8000974:	685b      	ldr	r3, [r3, #4]
 8000976:	6878      	ldr	r0, [r7, #4]
 8000978:	4798      	blx	r3
    {

        while(1){}
    }

}
 800097a:	e000      	b.n	800097e <game_task_run+0x32>
        while(1){}
 800097c:	e7fe      	b.n	800097c <game_task_run+0x30>
}
 800097e:	3708      	adds	r7, #8
 8000980:	46bd      	mov	sp, r7
 8000982:	bd80      	pop	{r7, pc}

08000984 <game_task_state_0_init>:


// A function to initialize the task
void game_task_state_0_init(GameTask *game_task)
{
 8000984:	b580      	push	{r7, lr}
 8000986:	b082      	sub	sp, #8
 8000988:	af00      	add	r7, sp, #0
 800098a:	6078      	str	r0, [r7, #4]
    //add init stuff, display
	lcd_init();
 800098c:	f000 f986 	bl	8000c9c <lcd_init>
	HAL_Delay(100);
 8000990:	2064      	movs	r0, #100	@ 0x64
 8000992:	f001 fc6f 	bl	8002274 <HAL_Delay>
	lcd_clear();
 8000996:	f000 f9b8 	bl	8000d0a <lcd_clear>
	game_task->state = 1;
 800099a:	687b      	ldr	r3, [r7, #4]
 800099c:	2201      	movs	r2, #1
 800099e:	601a      	str	r2, [r3, #0]

}
 80009a0:	bf00      	nop
 80009a2:	3708      	adds	r7, #8
 80009a4:	46bd      	mov	sp, r7
 80009a6:	bd80      	pop	{r7, pc}

080009a8 <game_task_state_1_home>:
// A function to implement state 1 of the task
// keeps for user start sequence to happen then starts the game
// Prints message and sets sound flag when game starts
void game_task_state_1_home(GameTask *game_task)
{
 80009a8:	b580      	push	{r7, lr}
 80009aa:	b082      	sub	sp, #8
 80009ac:	af00      	add	r7, sp, #0
 80009ae:	6078      	str	r0, [r7, #4]
	lcd_clear();
 80009b0:	f000 f9ab 	bl	8000d0a <lcd_clear>
	lcd_set_cursor(1, 0);
 80009b4:	2100      	movs	r1, #0
 80009b6:	2001      	movs	r0, #1
 80009b8:	f000 f9b2 	bl	8000d20 <lcd_set_cursor>
	lcd_print("  Zap'em Blast'em   ");
 80009bc:	480c      	ldr	r0, [pc, #48]	@ (80009f0 <game_task_state_1_home+0x48>)
 80009be:	f000 f9d1 	bl	8000d64 <lcd_print>
	lcd_set_cursor(2, 0);
 80009c2:	2100      	movs	r1, #0
 80009c4:	2002      	movs	r0, #2
 80009c6:	f000 f9ab 	bl	8000d20 <lcd_set_cursor>
	lcd_print("       Robots       ");
 80009ca:	480a      	ldr	r0, [pc, #40]	@ (80009f4 <game_task_state_1_home+0x4c>)
 80009cc:	f000 f9ca 	bl	8000d64 <lcd_print>
    //play_flg enabled from button task within shoot task?? or make button task
	if (game_task->play_flag == 1){
 80009d0:	687b      	ldr	r3, [r7, #4]
 80009d2:	689b      	ldr	r3, [r3, #8]
 80009d4:	2b01      	cmp	r3, #1
 80009d6:	d106      	bne.n	80009e6 <game_task_state_1_home+0x3e>
    	game_task->state = 2;
 80009d8:	687b      	ldr	r3, [r7, #4]
 80009da:	2202      	movs	r2, #2
 80009dc:	601a      	str	r2, [r3, #0]
    	game_task->sound_task_ptr->start_snd = 1; // sets start sound flag for sound task to play it
 80009de:	687b      	ldr	r3, [r7, #4]
 80009e0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80009e2:	2201      	movs	r2, #1
 80009e4:	611a      	str	r2, [r3, #16]
    }

}
 80009e6:	bf00      	nop
 80009e8:	3708      	adds	r7, #8
 80009ea:	46bd      	mov	sp, r7
 80009ec:	bd80      	pop	{r7, pc}
 80009ee:	bf00      	nop
 80009f0:	080058a8 	.word	0x080058a8
 80009f4:	080058c0 	.word	0x080058c0

080009f8 <game_task_state_2_play>:
// A function to implement state 2 which is for when the game is being played
// This keeps track of score, prints score messages
void game_task_state_2_play(GameTask *game_task)
{
 80009f8:	b580      	push	{r7, lr}
 80009fa:	b086      	sub	sp, #24
 80009fc:	af00      	add	r7, sp, #0
 80009fe:	6078      	str	r0, [r7, #4]
	char r_score[5];
	char b_score[5];

	if (game_task->red_photoresistor_task_ptr->hit_flag){
 8000a00:	687b      	ldr	r3, [r7, #4]
 8000a02:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8000a04:	689b      	ldr	r3, [r3, #8]
 8000a06:	2b00      	cmp	r3, #0
 8000a08:	d008      	beq.n	8000a1c <game_task_state_2_play+0x24>
		game_task->score_red++;
 8000a0a:	687b      	ldr	r3, [r7, #4]
 8000a0c:	68db      	ldr	r3, [r3, #12]
 8000a0e:	1c5a      	adds	r2, r3, #1
 8000a10:	687b      	ldr	r3, [r7, #4]
 8000a12:	60da      	str	r2, [r3, #12]
		game_task->red_photoresistor_task_ptr->hit_flag = 0;
 8000a14:	687b      	ldr	r3, [r7, #4]
 8000a16:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8000a18:	2200      	movs	r2, #0
 8000a1a:	609a      	str	r2, [r3, #8]
		//might need to add delay so that won't get extra hits for extended period of hitting
	}
	if (game_task->blue_photoresistor_task_ptr->hit_flag){
 8000a1c:	687b      	ldr	r3, [r7, #4]
 8000a1e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8000a20:	689b      	ldr	r3, [r3, #8]
 8000a22:	2b00      	cmp	r3, #0
 8000a24:	d008      	beq.n	8000a38 <game_task_state_2_play+0x40>
		game_task->score_blue++;
 8000a26:	687b      	ldr	r3, [r7, #4]
 8000a28:	691b      	ldr	r3, [r3, #16]
 8000a2a:	1c5a      	adds	r2, r3, #1
 8000a2c:	687b      	ldr	r3, [r7, #4]
 8000a2e:	611a      	str	r2, [r3, #16]
		game_task->blue_photoresistor_task_ptr->hit_flag = 0;
 8000a30:	687b      	ldr	r3, [r7, #4]
 8000a32:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8000a34:	2200      	movs	r2, #0
 8000a36:	609a      	str	r2, [r3, #8]
		//might need to add delay so that won't get extra hits for extended period of hitting
	}

	// add thing that prints score of each on the LCD
	//maybe only do once then adjust the score through a direct print index
	if (game_task->num == 0){
 8000a38:	687b      	ldr	r3, [r7, #4]
 8000a3a:	6a1b      	ldr	r3, [r3, #32]
 8000a3c:	2b00      	cmp	r3, #0
 8000a3e:	d122      	bne.n	8000a86 <game_task_state_2_play+0x8e>
		lcd_clear();
 8000a40:	f000 f963 	bl	8000d0a <lcd_clear>
		lcd_set_cursor(0, 0);
 8000a44:	2100      	movs	r1, #0
 8000a46:	2000      	movs	r0, #0
 8000a48:	f000 f96a 	bl	8000d20 <lcd_set_cursor>
		lcd_print("  Zap'em Blast'em   ");
 8000a4c:	483a      	ldr	r0, [pc, #232]	@ (8000b38 <game_task_state_2_play+0x140>)
 8000a4e:	f000 f989 	bl	8000d64 <lcd_print>
		lcd_set_cursor(1, 0);
 8000a52:	2100      	movs	r1, #0
 8000a54:	2001      	movs	r0, #1
 8000a56:	f000 f963 	bl	8000d20 <lcd_set_cursor>
		lcd_print("     First to 5     ");
 8000a5a:	4838      	ldr	r0, [pc, #224]	@ (8000b3c <game_task_state_2_play+0x144>)
 8000a5c:	f000 f982 	bl	8000d64 <lcd_print>
		lcd_set_cursor(2, 0);
 8000a60:	2100      	movs	r1, #0
 8000a62:	2002      	movs	r0, #2
 8000a64:	f000 f95c 	bl	8000d20 <lcd_set_cursor>
		lcd_print("Red:  0  Zaps       ");
 8000a68:	4835      	ldr	r0, [pc, #212]	@ (8000b40 <game_task_state_2_play+0x148>)
 8000a6a:	f000 f97b 	bl	8000d64 <lcd_print>
		lcd_set_cursor(3, 0);
 8000a6e:	2100      	movs	r1, #0
 8000a70:	2003      	movs	r0, #3
 8000a72:	f000 f955 	bl	8000d20 <lcd_set_cursor>
		lcd_print("Blue: 0  Blasts     ");
 8000a76:	4833      	ldr	r0, [pc, #204]	@ (8000b44 <game_task_state_2_play+0x14c>)
 8000a78:	f000 f974 	bl	8000d64 <lcd_print>
		//         01234567890123456789
		game_task->num++;
 8000a7c:	687b      	ldr	r3, [r7, #4]
 8000a7e:	6a1b      	ldr	r3, [r3, #32]
 8000a80:	1c5a      	adds	r2, r3, #1
 8000a82:	687b      	ldr	r3, [r7, #4]
 8000a84:	621a      	str	r2, [r3, #32]
	}

	// check to see if score changed for the lcd
	if (game_task->score_red != game_task->score_red_prev){
 8000a86:	687b      	ldr	r3, [r7, #4]
 8000a88:	68da      	ldr	r2, [r3, #12]
 8000a8a:	687b      	ldr	r3, [r7, #4]
 8000a8c:	695b      	ldr	r3, [r3, #20]
 8000a8e:	429a      	cmp	r2, r3
 8000a90:	d014      	beq.n	8000abc <game_task_state_2_play+0xc4>
		sprintf(r_score,"%ld",game_task->score_red);
 8000a92:	687b      	ldr	r3, [r7, #4]
 8000a94:	68da      	ldr	r2, [r3, #12]
 8000a96:	f107 0310 	add.w	r3, r7, #16
 8000a9a:	492b      	ldr	r1, [pc, #172]	@ (8000b48 <game_task_state_2_play+0x150>)
 8000a9c:	4618      	mov	r0, r3
 8000a9e:	f004 fa57 	bl	8004f50 <siprintf>
		lcd_set_cursor(2, 6);
 8000aa2:	2106      	movs	r1, #6
 8000aa4:	2002      	movs	r0, #2
 8000aa6:	f000 f93b 	bl	8000d20 <lcd_set_cursor>
		lcd_print(r_score);
 8000aaa:	f107 0310 	add.w	r3, r7, #16
 8000aae:	4618      	mov	r0, r3
 8000ab0:	f000 f958 	bl	8000d64 <lcd_print>
		game_task->score_red_prev = game_task->score_red;
 8000ab4:	687b      	ldr	r3, [r7, #4]
 8000ab6:	68da      	ldr	r2, [r3, #12]
 8000ab8:	687b      	ldr	r3, [r7, #4]
 8000aba:	615a      	str	r2, [r3, #20]
	}
	if (game_task->score_blue != game_task->score_blue_prev){
 8000abc:	687b      	ldr	r3, [r7, #4]
 8000abe:	691a      	ldr	r2, [r3, #16]
 8000ac0:	687b      	ldr	r3, [r7, #4]
 8000ac2:	699b      	ldr	r3, [r3, #24]
 8000ac4:	429a      	cmp	r2, r3
 8000ac6:	d014      	beq.n	8000af2 <game_task_state_2_play+0xfa>
		sprintf(b_score,"%ld",game_task->score_blue);
 8000ac8:	687b      	ldr	r3, [r7, #4]
 8000aca:	691a      	ldr	r2, [r3, #16]
 8000acc:	f107 0308 	add.w	r3, r7, #8
 8000ad0:	491d      	ldr	r1, [pc, #116]	@ (8000b48 <game_task_state_2_play+0x150>)
 8000ad2:	4618      	mov	r0, r3
 8000ad4:	f004 fa3c 	bl	8004f50 <siprintf>
		lcd_set_cursor(3, 6);
 8000ad8:	2106      	movs	r1, #6
 8000ada:	2003      	movs	r0, #3
 8000adc:	f000 f920 	bl	8000d20 <lcd_set_cursor>
		lcd_print(b_score);
 8000ae0:	f107 0308 	add.w	r3, r7, #8
 8000ae4:	4618      	mov	r0, r3
 8000ae6:	f000 f93d 	bl	8000d64 <lcd_print>
		game_task->score_blue_prev = game_task->score_blue;
 8000aea:	687b      	ldr	r3, [r7, #4]
 8000aec:	691a      	ldr	r2, [r3, #16]
 8000aee:	687b      	ldr	r3, [r7, #4]
 8000af0:	619a      	str	r2, [r3, #24]
	}


	// check if someone won
	if (game_task->score_red >= game_task->score_thresh || game_task->score_blue >= game_task->score_thresh){
 8000af2:	687b      	ldr	r3, [r7, #4]
 8000af4:	68da      	ldr	r2, [r3, #12]
 8000af6:	687b      	ldr	r3, [r7, #4]
 8000af8:	69db      	ldr	r3, [r3, #28]
 8000afa:	429a      	cmp	r2, r3
 8000afc:	da05      	bge.n	8000b0a <game_task_state_2_play+0x112>
 8000afe:	687b      	ldr	r3, [r7, #4]
 8000b00:	691a      	ldr	r2, [r3, #16]
 8000b02:	687b      	ldr	r3, [r7, #4]
 8000b04:	69db      	ldr	r3, [r3, #28]
 8000b06:	429a      	cmp	r2, r3
 8000b08:	db12      	blt.n	8000b30 <game_task_state_2_play+0x138>
//		// print win message and set end sound
		lcd_clear();
 8000b0a:	f000 f8fe 	bl	8000d0a <lcd_clear>
		lcd_set_cursor(1, 0);
 8000b0e:	2100      	movs	r1, #0
 8000b10:	2001      	movs	r0, #1
 8000b12:	f000 f905 	bl	8000d20 <lcd_set_cursor>
		lcd_print("  Zap'em Blast'em   ");
 8000b16:	4808      	ldr	r0, [pc, #32]	@ (8000b38 <game_task_state_2_play+0x140>)
 8000b18:	f000 f924 	bl	8000d64 <lcd_print>
		lcd_set_cursor(2, 0);
 8000b1c:	2100      	movs	r1, #0
 8000b1e:	2002      	movs	r0, #2
 8000b20:	f000 f8fe 	bl	8000d20 <lcd_set_cursor>
		lcd_print("     GAME OVER!     ");
 8000b24:	4809      	ldr	r0, [pc, #36]	@ (8000b4c <game_task_state_2_play+0x154>)
 8000b26:	f000 f91d 	bl	8000d64 <lcd_print>
		game_task->state = 3;
 8000b2a:	687b      	ldr	r3, [r7, #4]
 8000b2c:	2203      	movs	r2, #3
 8000b2e:	601a      	str	r2, [r3, #0]
	}

}
 8000b30:	bf00      	nop
 8000b32:	3718      	adds	r7, #24
 8000b34:	46bd      	mov	sp, r7
 8000b36:	bd80      	pop	{r7, pc}
 8000b38:	080058a8 	.word	0x080058a8
 8000b3c:	080058d8 	.word	0x080058d8
 8000b40:	080058f0 	.word	0x080058f0
 8000b44:	08005908 	.word	0x08005908
 8000b48:	08005920 	.word	0x08005920
 8000b4c:	08005924 	.word	0x08005924

08000b50 <game_task_state_3_end>:
// A function to implement state 3
// Ends the game when the score threshold has been met
// Prints messages and sets sound flags
void game_task_state_3_end(GameTask *game_task)
{
 8000b50:	b580      	push	{r7, lr}
 8000b52:	b082      	sub	sp, #8
 8000b54:	af00      	add	r7, sp, #0
 8000b56:	6078      	str	r0, [r7, #4]
	// lowkey might not be needed
	// does need to reset everything but could do in above
//	game_task->play_flag == 0;
	game_task->state = 1;
 8000b58:	687b      	ldr	r3, [r7, #4]
 8000b5a:	2201      	movs	r2, #1
 8000b5c:	601a      	str	r2, [r3, #0]
	game_task->score_blue = 0;
 8000b5e:	687b      	ldr	r3, [r7, #4]
 8000b60:	2200      	movs	r2, #0
 8000b62:	611a      	str	r2, [r3, #16]
	game_task->score_red = 0;
 8000b64:	687b      	ldr	r3, [r7, #4]
 8000b66:	2200      	movs	r2, #0
 8000b68:	60da      	str	r2, [r3, #12]
	HAL_Delay(5000);
 8000b6a:	f241 3088 	movw	r0, #5000	@ 0x1388
 8000b6e:	f001 fb81 	bl	8002274 <HAL_Delay>
}
 8000b72:	bf00      	nop
 8000b74:	3708      	adds	r7, #8
 8000b76:	46bd      	mov	sp, r7
 8000b78:	bd80      	pop	{r7, pc}
	...

08000b7c <lcd_send_nibble>:
#define LCD_RS        0x01

static void lcd_send_nibble(uint8_t nibble, uint8_t rs);
static void lcd_send_byte(uint8_t byte, uint8_t rs);

static void lcd_send_nibble(uint8_t nibble, uint8_t rs) {
 8000b7c:	b580      	push	{r7, lr}
 8000b7e:	b086      	sub	sp, #24
 8000b80:	af02      	add	r7, sp, #8
 8000b82:	4603      	mov	r3, r0
 8000b84:	460a      	mov	r2, r1
 8000b86:	71fb      	strb	r3, [r7, #7]
 8000b88:	4613      	mov	r3, r2
 8000b8a:	71bb      	strb	r3, [r7, #6]
    uint8_t data = (nibble & 0xF0);
 8000b8c:	79fb      	ldrb	r3, [r7, #7]
 8000b8e:	f023 030f 	bic.w	r3, r3, #15
 8000b92:	b2db      	uxtb	r3, r3
 8000b94:	73fb      	strb	r3, [r7, #15]
    if (rs) data |= LCD_RS;
 8000b96:	79bb      	ldrb	r3, [r7, #6]
 8000b98:	2b00      	cmp	r3, #0
 8000b9a:	d004      	beq.n	8000ba6 <lcd_send_nibble+0x2a>
 8000b9c:	7bfb      	ldrb	r3, [r7, #15]
 8000b9e:	f043 0301 	orr.w	r3, r3, #1
 8000ba2:	b2db      	uxtb	r3, r3
 8000ba4:	73fb      	strb	r3, [r7, #15]
    data |= LCD_BACKLIGHT;
 8000ba6:	7bfb      	ldrb	r3, [r7, #15]
 8000ba8:	f043 0308 	orr.w	r3, r3, #8
 8000bac:	b2db      	uxtb	r3, r3
 8000bae:	73fb      	strb	r3, [r7, #15]

    // Pulse enable
    uint8_t data_e = data | LCD_ENABLE;
 8000bb0:	7bfb      	ldrb	r3, [r7, #15]
 8000bb2:	f043 0304 	orr.w	r3, r3, #4
 8000bb6:	b2db      	uxtb	r3, r3
 8000bb8:	73bb      	strb	r3, [r7, #14]
    HAL_I2C_Master_Transmit(&hi2c1, LCD_I2C_ADDR, &data_e, 1, HAL_MAX_DELAY);
 8000bba:	f107 020e 	add.w	r2, r7, #14
 8000bbe:	f04f 33ff 	mov.w	r3, #4294967295
 8000bc2:	9300      	str	r3, [sp, #0]
 8000bc4:	2301      	movs	r3, #1
 8000bc6:	214e      	movs	r1, #78	@ 0x4e
 8000bc8:	480b      	ldr	r0, [pc, #44]	@ (8000bf8 <lcd_send_nibble+0x7c>)
 8000bca:	f002 fb8d 	bl	80032e8 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8000bce:	2001      	movs	r0, #1
 8000bd0:	f001 fb50 	bl	8002274 <HAL_Delay>
    HAL_I2C_Master_Transmit(&hi2c1, LCD_I2C_ADDR, &data, 1, HAL_MAX_DELAY);
 8000bd4:	f107 020f 	add.w	r2, r7, #15
 8000bd8:	f04f 33ff 	mov.w	r3, #4294967295
 8000bdc:	9300      	str	r3, [sp, #0]
 8000bde:	2301      	movs	r3, #1
 8000be0:	214e      	movs	r1, #78	@ 0x4e
 8000be2:	4805      	ldr	r0, [pc, #20]	@ (8000bf8 <lcd_send_nibble+0x7c>)
 8000be4:	f002 fb80 	bl	80032e8 <HAL_I2C_Master_Transmit>
    HAL_Delay(1);
 8000be8:	2001      	movs	r0, #1
 8000bea:	f001 fb43 	bl	8002274 <HAL_Delay>
}
 8000bee:	bf00      	nop
 8000bf0:	3710      	adds	r7, #16
 8000bf2:	46bd      	mov	sp, r7
 8000bf4:	bd80      	pop	{r7, pc}
 8000bf6:	bf00      	nop
 8000bf8:	200002c0 	.word	0x200002c0

08000bfc <lcd_send_byte>:

static void lcd_send_byte(uint8_t byte, uint8_t rs) {
 8000bfc:	b580      	push	{r7, lr}
 8000bfe:	b082      	sub	sp, #8
 8000c00:	af00      	add	r7, sp, #0
 8000c02:	4603      	mov	r3, r0
 8000c04:	460a      	mov	r2, r1
 8000c06:	71fb      	strb	r3, [r7, #7]
 8000c08:	4613      	mov	r3, r2
 8000c0a:	71bb      	strb	r3, [r7, #6]
    lcd_send_nibble(byte & 0xF0, rs);
 8000c0c:	79fb      	ldrb	r3, [r7, #7]
 8000c0e:	f023 030f 	bic.w	r3, r3, #15
 8000c12:	b2db      	uxtb	r3, r3
 8000c14:	79ba      	ldrb	r2, [r7, #6]
 8000c16:	4611      	mov	r1, r2
 8000c18:	4618      	mov	r0, r3
 8000c1a:	f7ff ffaf 	bl	8000b7c <lcd_send_nibble>
    lcd_send_nibble((byte << 4) & 0xF0, rs);
 8000c1e:	79fb      	ldrb	r3, [r7, #7]
 8000c20:	011b      	lsls	r3, r3, #4
 8000c22:	b2db      	uxtb	r3, r3
 8000c24:	79ba      	ldrb	r2, [r7, #6]
 8000c26:	4611      	mov	r1, r2
 8000c28:	4618      	mov	r0, r3
 8000c2a:	f7ff ffa7 	bl	8000b7c <lcd_send_nibble>
}
 8000c2e:	bf00      	nop
 8000c30:	3708      	adds	r7, #8
 8000c32:	46bd      	mov	sp, r7
 8000c34:	bd80      	pop	{r7, pc}

08000c36 <lcd_send_command>:

void lcd_send_command(uint8_t cmd) {
 8000c36:	b580      	push	{r7, lr}
 8000c38:	b082      	sub	sp, #8
 8000c3a:	af00      	add	r7, sp, #0
 8000c3c:	4603      	mov	r3, r0
 8000c3e:	71fb      	strb	r3, [r7, #7]
    lcd_send_byte(cmd, 0);
 8000c40:	79fb      	ldrb	r3, [r7, #7]
 8000c42:	2100      	movs	r1, #0
 8000c44:	4618      	mov	r0, r3
 8000c46:	f7ff ffd9 	bl	8000bfc <lcd_send_byte>
    HAL_Delay(2);
 8000c4a:	2002      	movs	r0, #2
 8000c4c:	f001 fb12 	bl	8002274 <HAL_Delay>
}
 8000c50:	bf00      	nop
 8000c52:	3708      	adds	r7, #8
 8000c54:	46bd      	mov	sp, r7
 8000c56:	bd80      	pop	{r7, pc}

08000c58 <lcd_send_data>:

void lcd_send_data(uint8_t data) {
 8000c58:	b580      	push	{r7, lr}
 8000c5a:	b082      	sub	sp, #8
 8000c5c:	af00      	add	r7, sp, #0
 8000c5e:	4603      	mov	r3, r0
 8000c60:	71fb      	strb	r3, [r7, #7]
    lcd_send_byte(data, 1);
 8000c62:	79fb      	ldrb	r3, [r7, #7]
 8000c64:	2101      	movs	r1, #1
 8000c66:	4618      	mov	r0, r3
 8000c68:	f7ff ffc8 	bl	8000bfc <lcd_send_byte>
}
 8000c6c:	bf00      	nop
 8000c6e:	3708      	adds	r7, #8
 8000c70:	46bd      	mov	sp, r7
 8000c72:	bd80      	pop	{r7, pc}

08000c74 <lcd_force_backlight_on>:

void lcd_force_backlight_on(void) {
 8000c74:	b580      	push	{r7, lr}
 8000c76:	b084      	sub	sp, #16
 8000c78:	af02      	add	r7, sp, #8
    uint8_t data = 0x00 | LCD_BACKLIGHT;
 8000c7a:	2308      	movs	r3, #8
 8000c7c:	71fb      	strb	r3, [r7, #7]
    HAL_I2C_Master_Transmit(&hi2c1, LCD_I2C_ADDR, &data, 1, HAL_MAX_DELAY);
 8000c7e:	1dfa      	adds	r2, r7, #7
 8000c80:	f04f 33ff 	mov.w	r3, #4294967295
 8000c84:	9300      	str	r3, [sp, #0]
 8000c86:	2301      	movs	r3, #1
 8000c88:	214e      	movs	r1, #78	@ 0x4e
 8000c8a:	4803      	ldr	r0, [pc, #12]	@ (8000c98 <lcd_force_backlight_on+0x24>)
 8000c8c:	f002 fb2c 	bl	80032e8 <HAL_I2C_Master_Transmit>
}
 8000c90:	bf00      	nop
 8000c92:	3708      	adds	r7, #8
 8000c94:	46bd      	mov	sp, r7
 8000c96:	bd80      	pop	{r7, pc}
 8000c98:	200002c0 	.word	0x200002c0

08000c9c <lcd_init>:

void lcd_init(void) {
 8000c9c:	b580      	push	{r7, lr}
 8000c9e:	af00      	add	r7, sp, #0
    HAL_Delay(50); // Wait for power to stabilize
 8000ca0:	2032      	movs	r0, #50	@ 0x32
 8000ca2:	f001 fae7 	bl	8002274 <HAL_Delay>

    // Set to 4-bit mode
    lcd_send_nibble(0x30, 0); HAL_Delay(5);
 8000ca6:	2100      	movs	r1, #0
 8000ca8:	2030      	movs	r0, #48	@ 0x30
 8000caa:	f7ff ff67 	bl	8000b7c <lcd_send_nibble>
 8000cae:	2005      	movs	r0, #5
 8000cb0:	f001 fae0 	bl	8002274 <HAL_Delay>
    lcd_send_nibble(0x30, 0); HAL_Delay(1);
 8000cb4:	2100      	movs	r1, #0
 8000cb6:	2030      	movs	r0, #48	@ 0x30
 8000cb8:	f7ff ff60 	bl	8000b7c <lcd_send_nibble>
 8000cbc:	2001      	movs	r0, #1
 8000cbe:	f001 fad9 	bl	8002274 <HAL_Delay>
    lcd_send_nibble(0x30, 0); HAL_Delay(1);
 8000cc2:	2100      	movs	r1, #0
 8000cc4:	2030      	movs	r0, #48	@ 0x30
 8000cc6:	f7ff ff59 	bl	8000b7c <lcd_send_nibble>
 8000cca:	2001      	movs	r0, #1
 8000ccc:	f001 fad2 	bl	8002274 <HAL_Delay>
    lcd_send_nibble(0x20, 0); HAL_Delay(1); // 4-bit mode
 8000cd0:	2100      	movs	r1, #0
 8000cd2:	2020      	movs	r0, #32
 8000cd4:	f7ff ff52 	bl	8000b7c <lcd_send_nibble>
 8000cd8:	2001      	movs	r0, #1
 8000cda:	f001 facb 	bl	8002274 <HAL_Delay>

    lcd_send_command(0x28); // Function set: 4-bit, 2-line, 5x8 dots
 8000cde:	2028      	movs	r0, #40	@ 0x28
 8000ce0:	f7ff ffa9 	bl	8000c36 <lcd_send_command>
    lcd_send_command(0x08); // Display off
 8000ce4:	2008      	movs	r0, #8
 8000ce6:	f7ff ffa6 	bl	8000c36 <lcd_send_command>
    lcd_send_command(0x01); // Clear display
 8000cea:	2001      	movs	r0, #1
 8000cec:	f7ff ffa3 	bl	8000c36 <lcd_send_command>
    HAL_Delay(2);
 8000cf0:	2002      	movs	r0, #2
 8000cf2:	f001 fabf 	bl	8002274 <HAL_Delay>
    lcd_send_command(0x06); // Entry mode set
 8000cf6:	2006      	movs	r0, #6
 8000cf8:	f7ff ff9d 	bl	8000c36 <lcd_send_command>
    lcd_send_command(0x0C); // Display on, cursor off
 8000cfc:	200c      	movs	r0, #12
 8000cfe:	f7ff ff9a 	bl	8000c36 <lcd_send_command>
    lcd_force_backlight_on();
 8000d02:	f7ff ffb7 	bl	8000c74 <lcd_force_backlight_on>
}
 8000d06:	bf00      	nop
 8000d08:	bd80      	pop	{r7, pc}

08000d0a <lcd_clear>:

void lcd_clear(void) {
 8000d0a:	b580      	push	{r7, lr}
 8000d0c:	af00      	add	r7, sp, #0
    lcd_send_command(0x01);
 8000d0e:	2001      	movs	r0, #1
 8000d10:	f7ff ff91 	bl	8000c36 <lcd_send_command>
    HAL_Delay(2);
 8000d14:	2002      	movs	r0, #2
 8000d16:	f001 faad 	bl	8002274 <HAL_Delay>
}
 8000d1a:	bf00      	nop
 8000d1c:	bd80      	pop	{r7, pc}
	...

08000d20 <lcd_set_cursor>:

void lcd_set_cursor(uint8_t row, uint8_t col) {
 8000d20:	b580      	push	{r7, lr}
 8000d22:	b082      	sub	sp, #8
 8000d24:	af00      	add	r7, sp, #0
 8000d26:	4603      	mov	r3, r0
 8000d28:	460a      	mov	r2, r1
 8000d2a:	71fb      	strb	r3, [r7, #7]
 8000d2c:	4613      	mov	r3, r2
 8000d2e:	71bb      	strb	r3, [r7, #6]
    static const uint8_t row_offsets[] = {0x00, 0x40, 0x14, 0x54};
    if (row > 3) row = 3;
 8000d30:	79fb      	ldrb	r3, [r7, #7]
 8000d32:	2b03      	cmp	r3, #3
 8000d34:	d901      	bls.n	8000d3a <lcd_set_cursor+0x1a>
 8000d36:	2303      	movs	r3, #3
 8000d38:	71fb      	strb	r3, [r7, #7]
    lcd_send_command(0x80 | (col + row_offsets[row]));
 8000d3a:	79fb      	ldrb	r3, [r7, #7]
 8000d3c:	4a08      	ldr	r2, [pc, #32]	@ (8000d60 <lcd_set_cursor+0x40>)
 8000d3e:	5cd2      	ldrb	r2, [r2, r3]
 8000d40:	79bb      	ldrb	r3, [r7, #6]
 8000d42:	4413      	add	r3, r2
 8000d44:	b2db      	uxtb	r3, r3
 8000d46:	b25b      	sxtb	r3, r3
 8000d48:	f063 037f 	orn	r3, r3, #127	@ 0x7f
 8000d4c:	b25b      	sxtb	r3, r3
 8000d4e:	b2db      	uxtb	r3, r3
 8000d50:	4618      	mov	r0, r3
 8000d52:	f7ff ff70 	bl	8000c36 <lcd_send_command>
}
 8000d56:	bf00      	nop
 8000d58:	3708      	adds	r7, #8
 8000d5a:	46bd      	mov	sp, r7
 8000d5c:	bd80      	pop	{r7, pc}
 8000d5e:	bf00      	nop
 8000d60:	0800593c 	.word	0x0800593c

08000d64 <lcd_print>:

void lcd_print(char *str) {
 8000d64:	b580      	push	{r7, lr}
 8000d66:	b082      	sub	sp, #8
 8000d68:	af00      	add	r7, sp, #0
 8000d6a:	6078      	str	r0, [r7, #4]
    while (*str) {
 8000d6c:	e006      	b.n	8000d7c <lcd_print+0x18>
        lcd_send_data((uint8_t)*str++);
 8000d6e:	687b      	ldr	r3, [r7, #4]
 8000d70:	1c5a      	adds	r2, r3, #1
 8000d72:	607a      	str	r2, [r7, #4]
 8000d74:	781b      	ldrb	r3, [r3, #0]
 8000d76:	4618      	mov	r0, r3
 8000d78:	f7ff ff6e 	bl	8000c58 <lcd_send_data>
    while (*str) {
 8000d7c:	687b      	ldr	r3, [r7, #4]
 8000d7e:	781b      	ldrb	r3, [r3, #0]
 8000d80:	2b00      	cmp	r3, #0
 8000d82:	d1f4      	bne.n	8000d6e <lcd_print+0xa>
    }
}
 8000d84:	bf00      	nop
 8000d86:	bf00      	nop
 8000d88:	3708      	adds	r7, #8
 8000d8a:	46bd      	mov	sp, r7
 8000d8c:	bd80      	pop	{r7, pc}
	...

08000d90 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8000d90:	b580      	push	{r7, lr}
 8000d92:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8000d94:	f001 f9fc 	bl	8002190 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8000d98:	f000 f872 	bl	8000e80 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8000d9c:	f000 fb72 	bl	8001484 <MX_GPIO_Init>
  MX_I2C1_Init();
 8000da0:	f000 f936 	bl	8001010 <MX_I2C1_Init>
  MX_TIM1_Init();
 8000da4:	f000 f962 	bl	800106c <MX_TIM1_Init>
  MX_TIM3_Init();
 8000da8:	f000 fa60 	bl	800126c <MX_TIM3_Init>
  MX_TIM4_Init();
 8000dac:	f000 fab2 	bl	8001314 <MX_TIM4_Init>
  MX_TIM5_Init();
 8000db0:	f000 fb14 	bl	80013dc <MX_TIM5_Init>
  MX_TIM2_Init();
 8000db4:	f000 fa02 	bl	80011bc <MX_TIM2_Init>
  MX_ADC1_Init();
 8000db8:	f000 f8ca 	bl	8000f50 <MX_ADC1_Init>
  /* USER CODE BEGIN 2 */

  HAL_TIM_PWM_Start_IT(&htim1, TIM_CHANNEL_1);
 8000dbc:	2100      	movs	r1, #0
 8000dbe:	4824      	ldr	r0, [pc, #144]	@ (8000e50 <main+0xc0>)
 8000dc0:	f003 fada 	bl	8004378 <HAL_TIM_PWM_Start_IT>
  HAL_TIM_PWM_Start_IT(&htim1, TIM_CHANNEL_2);
 8000dc4:	2104      	movs	r1, #4
 8000dc6:	4822      	ldr	r0, [pc, #136]	@ (8000e50 <main+0xc0>)
 8000dc8:	f003 fad6 	bl	8004378 <HAL_TIM_PWM_Start_IT>
  HAL_TIM_PWM_Start_IT(&htim1, TIM_CHANNEL_3);
 8000dcc:	2108      	movs	r1, #8
 8000dce:	4820      	ldr	r0, [pc, #128]	@ (8000e50 <main+0xc0>)
 8000dd0:	f003 fad2 	bl	8004378 <HAL_TIM_PWM_Start_IT>
  HAL_TIM_PWM_Start_IT(&htim1, TIM_CHANNEL_4);
 8000dd4:	210c      	movs	r1, #12
 8000dd6:	481e      	ldr	r0, [pc, #120]	@ (8000e50 <main+0xc0>)
 8000dd8:	f003 face 	bl	8004378 <HAL_TIM_PWM_Start_IT>

  HAL_TIM_PWM_Start_IT(&htim4, TIM_CHANNEL_1);
 8000ddc:	2100      	movs	r1, #0
 8000dde:	481d      	ldr	r0, [pc, #116]	@ (8000e54 <main+0xc4>)
 8000de0:	f003 faca 	bl	8004378 <HAL_TIM_PWM_Start_IT>
  HAL_TIM_PWM_Start_IT(&htim4, TIM_CHANNEL_2);
 8000de4:	2104      	movs	r1, #4
 8000de6:	481b      	ldr	r0, [pc, #108]	@ (8000e54 <main+0xc4>)
 8000de8:	f003 fac6 	bl	8004378 <HAL_TIM_PWM_Start_IT>

  HAL_TIM_Base_Start(&htim1);
 8000dec:	4818      	ldr	r0, [pc, #96]	@ (8000e50 <main+0xc0>)
 8000dee:	f003 fa19 	bl	8004224 <HAL_TIM_Base_Start>
  HAL_TIM_Base_Start(&htim2);
 8000df2:	4819      	ldr	r0, [pc, #100]	@ (8000e58 <main+0xc8>)
 8000df4:	f003 fa16 	bl	8004224 <HAL_TIM_Base_Start>
  HAL_TIM_Base_Start(&htim4);
 8000df8:	4816      	ldr	r0, [pc, #88]	@ (8000e54 <main+0xc4>)
 8000dfa:	f003 fa13 	bl	8004224 <HAL_TIM_Base_Start>

  enable(&mred);
 8000dfe:	4817      	ldr	r0, [pc, #92]	@ (8000e5c <main+0xcc>)
 8000e00:	f000 fd0e 	bl	8001820 <enable>
  enable(&mblue);
 8000e04:	4816      	ldr	r0, [pc, #88]	@ (8000e60 <main+0xd0>)
 8000e06:	f000 fd0b 	bl	8001820 <enable>
  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_2, GPIO_PIN_SET);
 8000e0a:	2201      	movs	r2, #1
 8000e0c:	2104      	movs	r1, #4
 8000e0e:	4815      	ldr	r0, [pc, #84]	@ (8000e64 <main+0xd4>)
 8000e10:	f002 f8f4 	bl	8002ffc <HAL_GPIO_WritePin>

  HAL_Delay(2000); // 2 second delay to let stuff get set up
 8000e14:	f44f 60fa 	mov.w	r0, #2000	@ 0x7d0
 8000e18:	f001 fa2c 	bl	8002274 <HAL_Delay>

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
  {
	  adc_task_run(&adc_task);
 8000e1c:	4812      	ldr	r0, [pc, #72]	@ (8000e68 <main+0xd8>)
 8000e1e:	f7ff fbc5 	bl	80005ac <adc_task_run>

	  game_task_run(&game_task);
 8000e22:	4812      	ldr	r0, [pc, #72]	@ (8000e6c <main+0xdc>)
 8000e24:	f7ff fd92 	bl	800094c <game_task_run>
//	  sound_task_run(&sound_task);
//	  controller_task_run(&blue_controller_task);
//	  controller_task_run(&red_controller_task);
	  if (game_task.play_flag){ //shooting and scoring disabled when game hasn't started
 8000e28:	4b10      	ldr	r3, [pc, #64]	@ (8000e6c <main+0xdc>)
 8000e2a:	689b      	ldr	r3, [r3, #8]
 8000e2c:	2b00      	cmp	r3, #0
 8000e2e:	d00b      	beq.n	8000e48 <main+0xb8>
		  shoot_task_run(&red_shoot_task);
 8000e30:	480f      	ldr	r0, [pc, #60]	@ (8000e70 <main+0xe0>)
 8000e32:	f000 fd98 	bl	8001966 <shoot_task_run>
		  shoot_task_run(&blue_shoot_task);
 8000e36:	480f      	ldr	r0, [pc, #60]	@ (8000e74 <main+0xe4>)
 8000e38:	f000 fd95 	bl	8001966 <shoot_task_run>
		  photoresistor_task_run(&red_photoresistor_task);
 8000e3c:	480e      	ldr	r0, [pc, #56]	@ (8000e78 <main+0xe8>)
 8000e3e:	f000 fd47 	bl	80018d0 <photoresistor_task_run>
		  photoresistor_task_run(&blue_photoresistor_task);
 8000e42:	480e      	ldr	r0, [pc, #56]	@ (8000e7c <main+0xec>)
 8000e44:	f000 fd44 	bl	80018d0 <photoresistor_task_run>
	  //__HAL_TIM_SET_COMPARE(red_shoot_task.servo_tim, red_shoot_task.channel, a);
	  //__HAL_TIM_SET_COMPARE(blue_shoot_task.servo_tim, blue_shoot_task.channel, b);
	  //controller_task_run(&blue_controller_task);
	  //controller_task_run(&red_controller_task);
	  //add delay
	  HAL_Delay(1);
 8000e48:	2001      	movs	r0, #1
 8000e4a:	f001 fa13 	bl	8002274 <HAL_Delay>
	  adc_task_run(&adc_task);
 8000e4e:	e7e5      	b.n	8000e1c <main+0x8c>
 8000e50:	20000314 	.word	0x20000314
 8000e54:	200003ec 	.word	0x200003ec
 8000e58:	2000035c 	.word	0x2000035c
 8000e5c:	20000000 	.word	0x20000000
 8000e60:	2000000c 	.word	0x2000000c
 8000e64:	40020400 	.word	0x40020400
 8000e68:	200001dc 	.word	0x200001dc
 8000e6c:	20000088 	.word	0x20000088
 8000e70:	200000cc 	.word	0x200000cc
 8000e74:	200000fc 	.word	0x200000fc
 8000e78:	20000048 	.word	0x20000048
 8000e7c:	20000068 	.word	0x20000068

08000e80 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8000e80:	b580      	push	{r7, lr}
 8000e82:	b094      	sub	sp, #80	@ 0x50
 8000e84:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8000e86:	f107 0320 	add.w	r3, r7, #32
 8000e8a:	2230      	movs	r2, #48	@ 0x30
 8000e8c:	2100      	movs	r1, #0
 8000e8e:	4618      	mov	r0, r3
 8000e90:	f004 f880 	bl	8004f94 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8000e94:	f107 030c 	add.w	r3, r7, #12
 8000e98:	2200      	movs	r2, #0
 8000e9a:	601a      	str	r2, [r3, #0]
 8000e9c:	605a      	str	r2, [r3, #4]
 8000e9e:	609a      	str	r2, [r3, #8]
 8000ea0:	60da      	str	r2, [r3, #12]
 8000ea2:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 8000ea4:	2300      	movs	r3, #0
 8000ea6:	60bb      	str	r3, [r7, #8]
 8000ea8:	4b27      	ldr	r3, [pc, #156]	@ (8000f48 <SystemClock_Config+0xc8>)
 8000eaa:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8000eac:	4a26      	ldr	r2, [pc, #152]	@ (8000f48 <SystemClock_Config+0xc8>)
 8000eae:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8000eb2:	6413      	str	r3, [r2, #64]	@ 0x40
 8000eb4:	4b24      	ldr	r3, [pc, #144]	@ (8000f48 <SystemClock_Config+0xc8>)
 8000eb6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8000eb8:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8000ebc:	60bb      	str	r3, [r7, #8]
 8000ebe:	68bb      	ldr	r3, [r7, #8]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8000ec0:	2300      	movs	r3, #0
 8000ec2:	607b      	str	r3, [r7, #4]
 8000ec4:	4b21      	ldr	r3, [pc, #132]	@ (8000f4c <SystemClock_Config+0xcc>)
 8000ec6:	681b      	ldr	r3, [r3, #0]
 8000ec8:	4a20      	ldr	r2, [pc, #128]	@ (8000f4c <SystemClock_Config+0xcc>)
 8000eca:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 8000ece:	6013      	str	r3, [r2, #0]
 8000ed0:	4b1e      	ldr	r3, [pc, #120]	@ (8000f4c <SystemClock_Config+0xcc>)
 8000ed2:	681b      	ldr	r3, [r3, #0]
 8000ed4:	f403 4340 	and.w	r3, r3, #49152	@ 0xc000
 8000ed8:	607b      	str	r3, [r7, #4]
 8000eda:	687b      	ldr	r3, [r7, #4]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 8000edc:	2301      	movs	r3, #1
 8000ede:	623b      	str	r3, [r7, #32]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8000ee0:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
 8000ee4:	627b      	str	r3, [r7, #36]	@ 0x24
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8000ee6:	2302      	movs	r3, #2
 8000ee8:	63bb      	str	r3, [r7, #56]	@ 0x38
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8000eea:	f44f 0380 	mov.w	r3, #4194304	@ 0x400000
 8000eee:	63fb      	str	r3, [r7, #60]	@ 0x3c
  RCC_OscInitStruct.PLL.PLLM = 25;
 8000ef0:	2319      	movs	r3, #25
 8000ef2:	643b      	str	r3, [r7, #64]	@ 0x40
  RCC_OscInitStruct.PLL.PLLN = 192;
 8000ef4:	23c0      	movs	r3, #192	@ 0xc0
 8000ef6:	647b      	str	r3, [r7, #68]	@ 0x44
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8000ef8:	2302      	movs	r3, #2
 8000efa:	64bb      	str	r3, [r7, #72]	@ 0x48
  RCC_OscInitStruct.PLL.PLLQ = 4;
 8000efc:	2304      	movs	r3, #4
 8000efe:	64fb      	str	r3, [r7, #76]	@ 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8000f00:	f107 0320 	add.w	r3, r7, #32
 8000f04:	4618      	mov	r0, r3
 8000f06:	f002 fd49 	bl	800399c <HAL_RCC_OscConfig>
 8000f0a:	4603      	mov	r3, r0
 8000f0c:	2b00      	cmp	r3, #0
 8000f0e:	d001      	beq.n	8000f14 <SystemClock_Config+0x94>
  {
    Error_Handler();
 8000f10:	f000 fbc8 	bl	80016a4 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8000f14:	230f      	movs	r3, #15
 8000f16:	60fb      	str	r3, [r7, #12]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8000f18:	2302      	movs	r3, #2
 8000f1a:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8000f1c:	2300      	movs	r3, #0
 8000f1e:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 8000f20:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8000f24:	61bb      	str	r3, [r7, #24]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 8000f26:	2300      	movs	r3, #0
 8000f28:	61fb      	str	r3, [r7, #28]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_3) != HAL_OK)
 8000f2a:	f107 030c 	add.w	r3, r7, #12
 8000f2e:	2103      	movs	r1, #3
 8000f30:	4618      	mov	r0, r3
 8000f32:	f002 ffab 	bl	8003e8c <HAL_RCC_ClockConfig>
 8000f36:	4603      	mov	r3, r0
 8000f38:	2b00      	cmp	r3, #0
 8000f3a:	d001      	beq.n	8000f40 <SystemClock_Config+0xc0>
  {
    Error_Handler();
 8000f3c:	f000 fbb2 	bl	80016a4 <Error_Handler>
  }
}
 8000f40:	bf00      	nop
 8000f42:	3750      	adds	r7, #80	@ 0x50
 8000f44:	46bd      	mov	sp, r7
 8000f46:	bd80      	pop	{r7, pc}
 8000f48:	40023800 	.word	0x40023800
 8000f4c:	40007000 	.word	0x40007000

08000f50 <MX_ADC1_Init>:
  * @brief ADC1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_ADC1_Init(void)
{
 8000f50:	b580      	push	{r7, lr}
 8000f52:	b084      	sub	sp, #16
 8000f54:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN ADC1_Init 0 */

  /* USER CODE END ADC1_Init 0 */

  ADC_ChannelConfTypeDef sConfig = {0};
 8000f56:	463b      	mov	r3, r7
 8000f58:	2200      	movs	r2, #0
 8000f5a:	601a      	str	r2, [r3, #0]
 8000f5c:	605a      	str	r2, [r3, #4]
 8000f5e:	609a      	str	r2, [r3, #8]
 8000f60:	60da      	str	r2, [r3, #12]

  /* USER CODE END ADC1_Init 1 */

  /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of conversion)
  */
  hadc1.Instance = ADC1;
 8000f62:	4b28      	ldr	r3, [pc, #160]	@ (8001004 <MX_ADC1_Init+0xb4>)
 8000f64:	4a28      	ldr	r2, [pc, #160]	@ (8001008 <MX_ADC1_Init+0xb8>)
 8000f66:	601a      	str	r2, [r3, #0]
  hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 8000f68:	4b26      	ldr	r3, [pc, #152]	@ (8001004 <MX_ADC1_Init+0xb4>)
 8000f6a:	f44f 3280 	mov.w	r2, #65536	@ 0x10000
 8000f6e:	605a      	str	r2, [r3, #4]
  hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 8000f70:	4b24      	ldr	r3, [pc, #144]	@ (8001004 <MX_ADC1_Init+0xb4>)
 8000f72:	2200      	movs	r2, #0
 8000f74:	609a      	str	r2, [r3, #8]
  hadc1.Init.ScanConvMode = ENABLE;
 8000f76:	4b23      	ldr	r3, [pc, #140]	@ (8001004 <MX_ADC1_Init+0xb4>)
 8000f78:	2201      	movs	r2, #1
 8000f7a:	611a      	str	r2, [r3, #16]
  hadc1.Init.ContinuousConvMode = ENABLE;
 8000f7c:	4b21      	ldr	r3, [pc, #132]	@ (8001004 <MX_ADC1_Init+0xb4>)
 8000f7e:	2201      	movs	r2, #1
 8000f80:	761a      	strb	r2, [r3, #24]
  hadc1.Init.DiscontinuousConvMode = DISABLE;
 8000f82:	4b20      	ldr	r3, [pc, #128]	@ (8001004 <MX_ADC1_Init+0xb4>)
 8000f84:	2200      	movs	r2, #0
 8000f86:	f883 2020 	strb.w	r2, [r3, #32]
  hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 8000f8a:	4b1e      	ldr	r3, [pc, #120]	@ (8001004 <MX_ADC1_Init+0xb4>)
 8000f8c:	2200      	movs	r2, #0
 8000f8e:	62da      	str	r2, [r3, #44]	@ 0x2c
  hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 8000f90:	4b1c      	ldr	r3, [pc, #112]	@ (8001004 <MX_ADC1_Init+0xb4>)
 8000f92:	4a1e      	ldr	r2, [pc, #120]	@ (800100c <MX_ADC1_Init+0xbc>)
 8000f94:	629a      	str	r2, [r3, #40]	@ 0x28
  hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 8000f96:	4b1b      	ldr	r3, [pc, #108]	@ (8001004 <MX_ADC1_Init+0xb4>)
 8000f98:	2200      	movs	r2, #0
 8000f9a:	60da      	str	r2, [r3, #12]
  hadc1.Init.NbrOfConversion = 2;
 8000f9c:	4b19      	ldr	r3, [pc, #100]	@ (8001004 <MX_ADC1_Init+0xb4>)
 8000f9e:	2202      	movs	r2, #2
 8000fa0:	61da      	str	r2, [r3, #28]
  hadc1.Init.DMAContinuousRequests = DISABLE;
 8000fa2:	4b18      	ldr	r3, [pc, #96]	@ (8001004 <MX_ADC1_Init+0xb4>)
 8000fa4:	2200      	movs	r2, #0
 8000fa6:	f883 2030 	strb.w	r2, [r3, #48]	@ 0x30
  hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 8000faa:	4b16      	ldr	r3, [pc, #88]	@ (8001004 <MX_ADC1_Init+0xb4>)
 8000fac:	2201      	movs	r2, #1
 8000fae:	615a      	str	r2, [r3, #20]
  if (HAL_ADC_Init(&hadc1) != HAL_OK)
 8000fb0:	4814      	ldr	r0, [pc, #80]	@ (8001004 <MX_ADC1_Init+0xb4>)
 8000fb2:	f001 f983 	bl	80022bc <HAL_ADC_Init>
 8000fb6:	4603      	mov	r3, r0
 8000fb8:	2b00      	cmp	r3, #0
 8000fba:	d001      	beq.n	8000fc0 <MX_ADC1_Init+0x70>
  {
    Error_Handler();
 8000fbc:	f000 fb72 	bl	80016a4 <Error_Handler>
  }

  /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and its sample time.
  */
  sConfig.Channel = ADC_CHANNEL_6;
 8000fc0:	2306      	movs	r3, #6
 8000fc2:	603b      	str	r3, [r7, #0]
  sConfig.Rank = 1;
 8000fc4:	2301      	movs	r3, #1
 8000fc6:	607b      	str	r3, [r7, #4]
  sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 8000fc8:	2300      	movs	r3, #0
 8000fca:	60bb      	str	r3, [r7, #8]
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 8000fcc:	463b      	mov	r3, r7
 8000fce:	4619      	mov	r1, r3
 8000fd0:	480c      	ldr	r0, [pc, #48]	@ (8001004 <MX_ADC1_Init+0xb4>)
 8000fd2:	f001 fb37 	bl	8002644 <HAL_ADC_ConfigChannel>
 8000fd6:	4603      	mov	r3, r0
 8000fd8:	2b00      	cmp	r3, #0
 8000fda:	d001      	beq.n	8000fe0 <MX_ADC1_Init+0x90>
  {
    Error_Handler();
 8000fdc:	f000 fb62 	bl	80016a4 <Error_Handler>
  }

  /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and its sample time.
  */
  sConfig.Channel = ADC_CHANNEL_7;
 8000fe0:	2307      	movs	r3, #7
 8000fe2:	603b      	str	r3, [r7, #0]
  sConfig.Rank = 2;
 8000fe4:	2302      	movs	r3, #2
 8000fe6:	607b      	str	r3, [r7, #4]
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 8000fe8:	463b      	mov	r3, r7
 8000fea:	4619      	mov	r1, r3
 8000fec:	4805      	ldr	r0, [pc, #20]	@ (8001004 <MX_ADC1_Init+0xb4>)
 8000fee:	f001 fb29 	bl	8002644 <HAL_ADC_ConfigChannel>
 8000ff2:	4603      	mov	r3, r0
 8000ff4:	2b00      	cmp	r3, #0
 8000ff6:	d001      	beq.n	8000ffc <MX_ADC1_Init+0xac>
  {
    Error_Handler();
 8000ff8:	f000 fb54 	bl	80016a4 <Error_Handler>
  }
  /* USER CODE BEGIN ADC1_Init 2 */

  /* USER CODE END ADC1_Init 2 */

}
 8000ffc:	bf00      	nop
 8000ffe:	3710      	adds	r7, #16
 8001000:	46bd      	mov	sp, r7
 8001002:	bd80      	pop	{r7, pc}
 8001004:	20000278 	.word	0x20000278
 8001008:	40012000 	.word	0x40012000
 800100c:	0f000001 	.word	0x0f000001

08001010 <MX_I2C1_Init>:
  * @brief I2C1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_I2C1_Init(void)
{
 8001010:	b580      	push	{r7, lr}
 8001012:	af00      	add	r7, sp, #0
  /* USER CODE END I2C1_Init 0 */

  /* USER CODE BEGIN I2C1_Init 1 */

  /* USER CODE END I2C1_Init 1 */
  hi2c1.Instance = I2C1;
 8001014:	4b12      	ldr	r3, [pc, #72]	@ (8001060 <MX_I2C1_Init+0x50>)
 8001016:	4a13      	ldr	r2, [pc, #76]	@ (8001064 <MX_I2C1_Init+0x54>)
 8001018:	601a      	str	r2, [r3, #0]
  hi2c1.Init.ClockSpeed = 100000;
 800101a:	4b11      	ldr	r3, [pc, #68]	@ (8001060 <MX_I2C1_Init+0x50>)
 800101c:	4a12      	ldr	r2, [pc, #72]	@ (8001068 <MX_I2C1_Init+0x58>)
 800101e:	605a      	str	r2, [r3, #4]
  hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 8001020:	4b0f      	ldr	r3, [pc, #60]	@ (8001060 <MX_I2C1_Init+0x50>)
 8001022:	2200      	movs	r2, #0
 8001024:	609a      	str	r2, [r3, #8]
  hi2c1.Init.OwnAddress1 = 0;
 8001026:	4b0e      	ldr	r3, [pc, #56]	@ (8001060 <MX_I2C1_Init+0x50>)
 8001028:	2200      	movs	r2, #0
 800102a:	60da      	str	r2, [r3, #12]
  hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 800102c:	4b0c      	ldr	r3, [pc, #48]	@ (8001060 <MX_I2C1_Init+0x50>)
 800102e:	f44f 4280 	mov.w	r2, #16384	@ 0x4000
 8001032:	611a      	str	r2, [r3, #16]
  hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8001034:	4b0a      	ldr	r3, [pc, #40]	@ (8001060 <MX_I2C1_Init+0x50>)
 8001036:	2200      	movs	r2, #0
 8001038:	615a      	str	r2, [r3, #20]
  hi2c1.Init.OwnAddress2 = 0;
 800103a:	4b09      	ldr	r3, [pc, #36]	@ (8001060 <MX_I2C1_Init+0x50>)
 800103c:	2200      	movs	r2, #0
 800103e:	619a      	str	r2, [r3, #24]
  hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8001040:	4b07      	ldr	r3, [pc, #28]	@ (8001060 <MX_I2C1_Init+0x50>)
 8001042:	2200      	movs	r2, #0
 8001044:	61da      	str	r2, [r3, #28]
  hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8001046:	4b06      	ldr	r3, [pc, #24]	@ (8001060 <MX_I2C1_Init+0x50>)
 8001048:	2200      	movs	r2, #0
 800104a:	621a      	str	r2, [r3, #32]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 800104c:	4804      	ldr	r0, [pc, #16]	@ (8001060 <MX_I2C1_Init+0x50>)
 800104e:	f002 f807 	bl	8003060 <HAL_I2C_Init>
 8001052:	4603      	mov	r3, r0
 8001054:	2b00      	cmp	r3, #0
 8001056:	d001      	beq.n	800105c <MX_I2C1_Init+0x4c>
  {
    Error_Handler();
 8001058:	f000 fb24 	bl	80016a4 <Error_Handler>
  }
  /* USER CODE BEGIN I2C1_Init 2 */

  /* USER CODE END I2C1_Init 2 */

}
 800105c:	bf00      	nop
 800105e:	bd80      	pop	{r7, pc}
 8001060:	200002c0 	.word	0x200002c0
 8001064:	40005400 	.word	0x40005400
 8001068:	000186a0 	.word	0x000186a0

0800106c <MX_TIM1_Init>:
  * @brief TIM1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM1_Init(void)
{
 800106c:	b580      	push	{r7, lr}
 800106e:	b092      	sub	sp, #72	@ 0x48
 8001070:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM1_Init 0 */

  /* USER CODE END TIM1_Init 0 */

  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001072:	f107 0340 	add.w	r3, r7, #64	@ 0x40
 8001076:	2200      	movs	r2, #0
 8001078:	601a      	str	r2, [r3, #0]
 800107a:	605a      	str	r2, [r3, #4]
  TIM_OC_InitTypeDef sConfigOC = {0};
 800107c:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8001080:	2200      	movs	r2, #0
 8001082:	601a      	str	r2, [r3, #0]
 8001084:	605a      	str	r2, [r3, #4]
 8001086:	609a      	str	r2, [r3, #8]
 8001088:	60da      	str	r2, [r3, #12]
 800108a:	611a      	str	r2, [r3, #16]
 800108c:	615a      	str	r2, [r3, #20]
 800108e:	619a      	str	r2, [r3, #24]
  TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 8001090:	1d3b      	adds	r3, r7, #4
 8001092:	2220      	movs	r2, #32
 8001094:	2100      	movs	r1, #0
 8001096:	4618      	mov	r0, r3
 8001098:	f003 ff7c 	bl	8004f94 <memset>

  /* USER CODE BEGIN TIM1_Init 1 */

  /* USER CODE END TIM1_Init 1 */
  htim1.Instance = TIM1;
 800109c:	4b45      	ldr	r3, [pc, #276]	@ (80011b4 <MX_TIM1_Init+0x148>)
 800109e:	4a46      	ldr	r2, [pc, #280]	@ (80011b8 <MX_TIM1_Init+0x14c>)
 80010a0:	601a      	str	r2, [r3, #0]
  htim1.Init.Prescaler = 0;
 80010a2:	4b44      	ldr	r3, [pc, #272]	@ (80011b4 <MX_TIM1_Init+0x148>)
 80010a4:	2200      	movs	r2, #0
 80010a6:	605a      	str	r2, [r3, #4]
  htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 80010a8:	4b42      	ldr	r3, [pc, #264]	@ (80011b4 <MX_TIM1_Init+0x148>)
 80010aa:	2200      	movs	r2, #0
 80010ac:	609a      	str	r2, [r3, #8]
  htim1.Init.Period = 4799;
 80010ae:	4b41      	ldr	r3, [pc, #260]	@ (80011b4 <MX_TIM1_Init+0x148>)
 80010b0:	f241 22bf 	movw	r2, #4799	@ 0x12bf
 80010b4:	60da      	str	r2, [r3, #12]
  htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80010b6:	4b3f      	ldr	r3, [pc, #252]	@ (80011b4 <MX_TIM1_Init+0x148>)
 80010b8:	2200      	movs	r2, #0
 80010ba:	611a      	str	r2, [r3, #16]
  htim1.Init.RepetitionCounter = 0;
 80010bc:	4b3d      	ldr	r3, [pc, #244]	@ (80011b4 <MX_TIM1_Init+0x148>)
 80010be:	2200      	movs	r2, #0
 80010c0:	615a      	str	r2, [r3, #20]
  htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80010c2:	4b3c      	ldr	r3, [pc, #240]	@ (80011b4 <MX_TIM1_Init+0x148>)
 80010c4:	2200      	movs	r2, #0
 80010c6:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_PWM_Init(&htim1) != HAL_OK)
 80010c8:	483a      	ldr	r0, [pc, #232]	@ (80011b4 <MX_TIM1_Init+0x148>)
 80010ca:	f003 f905 	bl	80042d8 <HAL_TIM_PWM_Init>
 80010ce:	4603      	mov	r3, r0
 80010d0:	2b00      	cmp	r3, #0
 80010d2:	d001      	beq.n	80010d8 <MX_TIM1_Init+0x6c>
  {
    Error_Handler();
 80010d4:	f000 fae6 	bl	80016a4 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80010d8:	2300      	movs	r3, #0
 80010da:	643b      	str	r3, [r7, #64]	@ 0x40
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80010dc:	2300      	movs	r3, #0
 80010de:	647b      	str	r3, [r7, #68]	@ 0x44
  if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 80010e0:	f107 0340 	add.w	r3, r7, #64	@ 0x40
 80010e4:	4619      	mov	r1, r3
 80010e6:	4833      	ldr	r0, [pc, #204]	@ (80011b4 <MX_TIM1_Init+0x148>)
 80010e8:	f003 fe72 	bl	8004dd0 <HAL_TIMEx_MasterConfigSynchronization>
 80010ec:	4603      	mov	r3, r0
 80010ee:	2b00      	cmp	r3, #0
 80010f0:	d001      	beq.n	80010f6 <MX_TIM1_Init+0x8a>
  {
    Error_Handler();
 80010f2:	f000 fad7 	bl	80016a4 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM2;
 80010f6:	2370      	movs	r3, #112	@ 0x70
 80010f8:	627b      	str	r3, [r7, #36]	@ 0x24
  sConfigOC.Pulse = 0;
 80010fa:	2300      	movs	r3, #0
 80010fc:	62bb      	str	r3, [r7, #40]	@ 0x28
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 80010fe:	2300      	movs	r3, #0
 8001100:	62fb      	str	r3, [r7, #44]	@ 0x2c
  sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 8001102:	2300      	movs	r3, #0
 8001104:	633b      	str	r3, [r7, #48]	@ 0x30
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8001106:	2300      	movs	r3, #0
 8001108:	637b      	str	r3, [r7, #52]	@ 0x34
  sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 800110a:	2300      	movs	r3, #0
 800110c:	63bb      	str	r3, [r7, #56]	@ 0x38
  sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 800110e:	2300      	movs	r3, #0
 8001110:	63fb      	str	r3, [r7, #60]	@ 0x3c
  if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8001112:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8001116:	2200      	movs	r2, #0
 8001118:	4619      	mov	r1, r3
 800111a:	4826      	ldr	r0, [pc, #152]	@ (80011b4 <MX_TIM1_Init+0x148>)
 800111c:	f003 fb5e 	bl	80047dc <HAL_TIM_PWM_ConfigChannel>
 8001120:	4603      	mov	r3, r0
 8001122:	2b00      	cmp	r3, #0
 8001124:	d001      	beq.n	800112a <MX_TIM1_Init+0xbe>
  {
    Error_Handler();
 8001126:	f000 fabd 	bl	80016a4 <Error_Handler>
  }
  if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 800112a:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 800112e:	2204      	movs	r2, #4
 8001130:	4619      	mov	r1, r3
 8001132:	4820      	ldr	r0, [pc, #128]	@ (80011b4 <MX_TIM1_Init+0x148>)
 8001134:	f003 fb52 	bl	80047dc <HAL_TIM_PWM_ConfigChannel>
 8001138:	4603      	mov	r3, r0
 800113a:	2b00      	cmp	r3, #0
 800113c:	d001      	beq.n	8001142 <MX_TIM1_Init+0xd6>
  {
    Error_Handler();
 800113e:	f000 fab1 	bl	80016a4 <Error_Handler>
  }
  if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 8001142:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8001146:	2208      	movs	r2, #8
 8001148:	4619      	mov	r1, r3
 800114a:	481a      	ldr	r0, [pc, #104]	@ (80011b4 <MX_TIM1_Init+0x148>)
 800114c:	f003 fb46 	bl	80047dc <HAL_TIM_PWM_ConfigChannel>
 8001150:	4603      	mov	r3, r0
 8001152:	2b00      	cmp	r3, #0
 8001154:	d001      	beq.n	800115a <MX_TIM1_Init+0xee>
  {
    Error_Handler();
 8001156:	f000 faa5 	bl	80016a4 <Error_Handler>
  }
  if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 800115a:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 800115e:	220c      	movs	r2, #12
 8001160:	4619      	mov	r1, r3
 8001162:	4814      	ldr	r0, [pc, #80]	@ (80011b4 <MX_TIM1_Init+0x148>)
 8001164:	f003 fb3a 	bl	80047dc <HAL_TIM_PWM_ConfigChannel>
 8001168:	4603      	mov	r3, r0
 800116a:	2b00      	cmp	r3, #0
 800116c:	d001      	beq.n	8001172 <MX_TIM1_Init+0x106>
  {
    Error_Handler();
 800116e:	f000 fa99 	bl	80016a4 <Error_Handler>
  }
  sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
 8001172:	2300      	movs	r3, #0
 8001174:	607b      	str	r3, [r7, #4]
  sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 8001176:	2300      	movs	r3, #0
 8001178:	60bb      	str	r3, [r7, #8]
  sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 800117a:	2300      	movs	r3, #0
 800117c:	60fb      	str	r3, [r7, #12]
  sBreakDeadTimeConfig.DeadTime = 0;
 800117e:	2300      	movs	r3, #0
 8001180:	613b      	str	r3, [r7, #16]
  sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 8001182:	2300      	movs	r3, #0
 8001184:	617b      	str	r3, [r7, #20]
  sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 8001186:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 800118a:	61bb      	str	r3, [r7, #24]
  sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 800118c:	2300      	movs	r3, #0
 800118e:	623b      	str	r3, [r7, #32]
  if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 8001190:	1d3b      	adds	r3, r7, #4
 8001192:	4619      	mov	r1, r3
 8001194:	4807      	ldr	r0, [pc, #28]	@ (80011b4 <MX_TIM1_Init+0x148>)
 8001196:	f003 fe89 	bl	8004eac <HAL_TIMEx_ConfigBreakDeadTime>
 800119a:	4603      	mov	r3, r0
 800119c:	2b00      	cmp	r3, #0
 800119e:	d001      	beq.n	80011a4 <MX_TIM1_Init+0x138>
  {
    Error_Handler();
 80011a0:	f000 fa80 	bl	80016a4 <Error_Handler>
  }
  /* USER CODE BEGIN TIM1_Init 2 */

  /* USER CODE END TIM1_Init 2 */
  HAL_TIM_MspPostInit(&htim1);
 80011a4:	4803      	ldr	r0, [pc, #12]	@ (80011b4 <MX_TIM1_Init+0x148>)
 80011a6:	f000 feaf 	bl	8001f08 <HAL_TIM_MspPostInit>

}
 80011aa:	bf00      	nop
 80011ac:	3748      	adds	r7, #72	@ 0x48
 80011ae:	46bd      	mov	sp, r7
 80011b0:	bd80      	pop	{r7, pc}
 80011b2:	bf00      	nop
 80011b4:	20000314 	.word	0x20000314
 80011b8:	40010000 	.word	0x40010000

080011bc <MX_TIM2_Init>:
  * @brief TIM2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM2_Init(void)
{
 80011bc:	b580      	push	{r7, lr}
 80011be:	b08a      	sub	sp, #40	@ 0x28
 80011c0:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80011c2:	f107 0320 	add.w	r3, r7, #32
 80011c6:	2200      	movs	r2, #0
 80011c8:	601a      	str	r2, [r3, #0]
 80011ca:	605a      	str	r2, [r3, #4]
  TIM_OC_InitTypeDef sConfigOC = {0};
 80011cc:	1d3b      	adds	r3, r7, #4
 80011ce:	2200      	movs	r2, #0
 80011d0:	601a      	str	r2, [r3, #0]
 80011d2:	605a      	str	r2, [r3, #4]
 80011d4:	609a      	str	r2, [r3, #8]
 80011d6:	60da      	str	r2, [r3, #12]
 80011d8:	611a      	str	r2, [r3, #16]
 80011da:	615a      	str	r2, [r3, #20]
 80011dc:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 80011de:	4b22      	ldr	r3, [pc, #136]	@ (8001268 <MX_TIM2_Init+0xac>)
 80011e0:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 80011e4:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 0;
 80011e6:	4b20      	ldr	r3, [pc, #128]	@ (8001268 <MX_TIM2_Init+0xac>)
 80011e8:	2200      	movs	r2, #0
 80011ea:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 80011ec:	4b1e      	ldr	r3, [pc, #120]	@ (8001268 <MX_TIM2_Init+0xac>)
 80011ee:	2200      	movs	r2, #0
 80011f0:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 4294967295;
 80011f2:	4b1d      	ldr	r3, [pc, #116]	@ (8001268 <MX_TIM2_Init+0xac>)
 80011f4:	f04f 32ff 	mov.w	r2, #4294967295
 80011f8:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80011fa:	4b1b      	ldr	r3, [pc, #108]	@ (8001268 <MX_TIM2_Init+0xac>)
 80011fc:	2200      	movs	r2, #0
 80011fe:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001200:	4b19      	ldr	r3, [pc, #100]	@ (8001268 <MX_TIM2_Init+0xac>)
 8001202:	2200      	movs	r2, #0
 8001204:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
 8001206:	4818      	ldr	r0, [pc, #96]	@ (8001268 <MX_TIM2_Init+0xac>)
 8001208:	f003 f866 	bl	80042d8 <HAL_TIM_PWM_Init>
 800120c:	4603      	mov	r3, r0
 800120e:	2b00      	cmp	r3, #0
 8001210:	d001      	beq.n	8001216 <MX_TIM2_Init+0x5a>
  {
    Error_Handler();
 8001212:	f000 fa47 	bl	80016a4 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8001216:	2300      	movs	r3, #0
 8001218:	623b      	str	r3, [r7, #32]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 800121a:	2300      	movs	r3, #0
 800121c:	627b      	str	r3, [r7, #36]	@ 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 800121e:	f107 0320 	add.w	r3, r7, #32
 8001222:	4619      	mov	r1, r3
 8001224:	4810      	ldr	r0, [pc, #64]	@ (8001268 <MX_TIM2_Init+0xac>)
 8001226:	f003 fdd3 	bl	8004dd0 <HAL_TIMEx_MasterConfigSynchronization>
 800122a:	4603      	mov	r3, r0
 800122c:	2b00      	cmp	r3, #0
 800122e:	d001      	beq.n	8001234 <MX_TIM2_Init+0x78>
  {
    Error_Handler();
 8001230:	f000 fa38 	bl	80016a4 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8001234:	2360      	movs	r3, #96	@ 0x60
 8001236:	607b      	str	r3, [r7, #4]
  sConfigOC.Pulse = 0;
 8001238:	2300      	movs	r3, #0
 800123a:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 800123c:	2300      	movs	r3, #0
 800123e:	60fb      	str	r3, [r7, #12]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8001240:	2300      	movs	r3, #0
 8001242:	617b      	str	r3, [r7, #20]
  if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8001244:	1d3b      	adds	r3, r7, #4
 8001246:	2200      	movs	r2, #0
 8001248:	4619      	mov	r1, r3
 800124a:	4807      	ldr	r0, [pc, #28]	@ (8001268 <MX_TIM2_Init+0xac>)
 800124c:	f003 fac6 	bl	80047dc <HAL_TIM_PWM_ConfigChannel>
 8001250:	4603      	mov	r3, r0
 8001252:	2b00      	cmp	r3, #0
 8001254:	d001      	beq.n	800125a <MX_TIM2_Init+0x9e>
  {
    Error_Handler();
 8001256:	f000 fa25 	bl	80016a4 <Error_Handler>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */
  HAL_TIM_MspPostInit(&htim2);
 800125a:	4803      	ldr	r0, [pc, #12]	@ (8001268 <MX_TIM2_Init+0xac>)
 800125c:	f000 fe54 	bl	8001f08 <HAL_TIM_MspPostInit>

}
 8001260:	bf00      	nop
 8001262:	3728      	adds	r7, #40	@ 0x28
 8001264:	46bd      	mov	sp, r7
 8001266:	bd80      	pop	{r7, pc}
 8001268:	2000035c 	.word	0x2000035c

0800126c <MX_TIM3_Init>:
  * @brief TIM3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM3_Init(void)
{
 800126c:	b580      	push	{r7, lr}
 800126e:	b08c      	sub	sp, #48	@ 0x30
 8001270:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM3_Init 0 */

  /* USER CODE END TIM3_Init 0 */

  TIM_Encoder_InitTypeDef sConfig = {0};
 8001272:	f107 030c 	add.w	r3, r7, #12
 8001276:	2224      	movs	r2, #36	@ 0x24
 8001278:	2100      	movs	r1, #0
 800127a:	4618      	mov	r0, r3
 800127c:	f003 fe8a 	bl	8004f94 <memset>
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001280:	1d3b      	adds	r3, r7, #4
 8001282:	2200      	movs	r2, #0
 8001284:	601a      	str	r2, [r3, #0]
 8001286:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM3_Init 1 */

  /* USER CODE END TIM3_Init 1 */
  htim3.Instance = TIM3;
 8001288:	4b20      	ldr	r3, [pc, #128]	@ (800130c <MX_TIM3_Init+0xa0>)
 800128a:	4a21      	ldr	r2, [pc, #132]	@ (8001310 <MX_TIM3_Init+0xa4>)
 800128c:	601a      	str	r2, [r3, #0]
  htim3.Init.Prescaler = 0;
 800128e:	4b1f      	ldr	r3, [pc, #124]	@ (800130c <MX_TIM3_Init+0xa0>)
 8001290:	2200      	movs	r2, #0
 8001292:	605a      	str	r2, [r3, #4]
  htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001294:	4b1d      	ldr	r3, [pc, #116]	@ (800130c <MX_TIM3_Init+0xa0>)
 8001296:	2200      	movs	r2, #0
 8001298:	609a      	str	r2, [r3, #8]
  htim3.Init.Period = 65535;
 800129a:	4b1c      	ldr	r3, [pc, #112]	@ (800130c <MX_TIM3_Init+0xa0>)
 800129c:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 80012a0:	60da      	str	r2, [r3, #12]
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80012a2:	4b1a      	ldr	r3, [pc, #104]	@ (800130c <MX_TIM3_Init+0xa0>)
 80012a4:	2200      	movs	r2, #0
 80012a6:	611a      	str	r2, [r3, #16]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80012a8:	4b18      	ldr	r3, [pc, #96]	@ (800130c <MX_TIM3_Init+0xa0>)
 80012aa:	2200      	movs	r2, #0
 80012ac:	619a      	str	r2, [r3, #24]
  sConfig.EncoderMode = TIM_ENCODERMODE_TI1;
 80012ae:	2301      	movs	r3, #1
 80012b0:	60fb      	str	r3, [r7, #12]
  sConfig.IC1Polarity = TIM_ICPOLARITY_RISING;
 80012b2:	2300      	movs	r3, #0
 80012b4:	613b      	str	r3, [r7, #16]
  sConfig.IC1Selection = TIM_ICSELECTION_DIRECTTI;
 80012b6:	2301      	movs	r3, #1
 80012b8:	617b      	str	r3, [r7, #20]
  sConfig.IC1Prescaler = TIM_ICPSC_DIV1;
 80012ba:	2300      	movs	r3, #0
 80012bc:	61bb      	str	r3, [r7, #24]
  sConfig.IC1Filter = 0;
 80012be:	2300      	movs	r3, #0
 80012c0:	61fb      	str	r3, [r7, #28]
  sConfig.IC2Polarity = TIM_ICPOLARITY_RISING;
 80012c2:	2300      	movs	r3, #0
 80012c4:	623b      	str	r3, [r7, #32]
  sConfig.IC2Selection = TIM_ICSELECTION_DIRECTTI;
 80012c6:	2301      	movs	r3, #1
 80012c8:	627b      	str	r3, [r7, #36]	@ 0x24
  sConfig.IC2Prescaler = TIM_ICPSC_DIV1;
 80012ca:	2300      	movs	r3, #0
 80012cc:	62bb      	str	r3, [r7, #40]	@ 0x28
  sConfig.IC2Filter = 0;
 80012ce:	2300      	movs	r3, #0
 80012d0:	62fb      	str	r3, [r7, #44]	@ 0x2c
  if (HAL_TIM_Encoder_Init(&htim3, &sConfig) != HAL_OK)
 80012d2:	f107 030c 	add.w	r3, r7, #12
 80012d6:	4619      	mov	r1, r3
 80012d8:	480c      	ldr	r0, [pc, #48]	@ (800130c <MX_TIM3_Init+0xa0>)
 80012da:	f003 f94b 	bl	8004574 <HAL_TIM_Encoder_Init>
 80012de:	4603      	mov	r3, r0
 80012e0:	2b00      	cmp	r3, #0
 80012e2:	d001      	beq.n	80012e8 <MX_TIM3_Init+0x7c>
  {
    Error_Handler();
 80012e4:	f000 f9de 	bl	80016a4 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80012e8:	2300      	movs	r3, #0
 80012ea:	607b      	str	r3, [r7, #4]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80012ec:	2300      	movs	r3, #0
 80012ee:	60bb      	str	r3, [r7, #8]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 80012f0:	1d3b      	adds	r3, r7, #4
 80012f2:	4619      	mov	r1, r3
 80012f4:	4805      	ldr	r0, [pc, #20]	@ (800130c <MX_TIM3_Init+0xa0>)
 80012f6:	f003 fd6b 	bl	8004dd0 <HAL_TIMEx_MasterConfigSynchronization>
 80012fa:	4603      	mov	r3, r0
 80012fc:	2b00      	cmp	r3, #0
 80012fe:	d001      	beq.n	8001304 <MX_TIM3_Init+0x98>
  {
    Error_Handler();
 8001300:	f000 f9d0 	bl	80016a4 <Error_Handler>
  }
  /* USER CODE BEGIN TIM3_Init 2 */

  /* USER CODE END TIM3_Init 2 */

}
 8001304:	bf00      	nop
 8001306:	3730      	adds	r7, #48	@ 0x30
 8001308:	46bd      	mov	sp, r7
 800130a:	bd80      	pop	{r7, pc}
 800130c:	200003a4 	.word	0x200003a4
 8001310:	40000400 	.word	0x40000400

08001314 <MX_TIM4_Init>:
  * @brief TIM4 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM4_Init(void)
{
 8001314:	b580      	push	{r7, lr}
 8001316:	b08a      	sub	sp, #40	@ 0x28
 8001318:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM4_Init 0 */

  /* USER CODE END TIM4_Init 0 */

  TIM_MasterConfigTypeDef sMasterConfig = {0};
 800131a:	f107 0320 	add.w	r3, r7, #32
 800131e:	2200      	movs	r2, #0
 8001320:	601a      	str	r2, [r3, #0]
 8001322:	605a      	str	r2, [r3, #4]
  TIM_OC_InitTypeDef sConfigOC = {0};
 8001324:	1d3b      	adds	r3, r7, #4
 8001326:	2200      	movs	r2, #0
 8001328:	601a      	str	r2, [r3, #0]
 800132a:	605a      	str	r2, [r3, #4]
 800132c:	609a      	str	r2, [r3, #8]
 800132e:	60da      	str	r2, [r3, #12]
 8001330:	611a      	str	r2, [r3, #16]
 8001332:	615a      	str	r2, [r3, #20]
 8001334:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM4_Init 1 */

  /* USER CODE END TIM4_Init 1 */
  htim4.Instance = TIM4;
 8001336:	4b27      	ldr	r3, [pc, #156]	@ (80013d4 <MX_TIM4_Init+0xc0>)
 8001338:	4a27      	ldr	r2, [pc, #156]	@ (80013d8 <MX_TIM4_Init+0xc4>)
 800133a:	601a      	str	r2, [r3, #0]
  htim4.Init.Prescaler = 83;
 800133c:	4b25      	ldr	r3, [pc, #148]	@ (80013d4 <MX_TIM4_Init+0xc0>)
 800133e:	2253      	movs	r2, #83	@ 0x53
 8001340:	605a      	str	r2, [r3, #4]
  htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001342:	4b24      	ldr	r3, [pc, #144]	@ (80013d4 <MX_TIM4_Init+0xc0>)
 8001344:	2200      	movs	r2, #0
 8001346:	609a      	str	r2, [r3, #8]
  htim4.Init.Period = 19999;
 8001348:	4b22      	ldr	r3, [pc, #136]	@ (80013d4 <MX_TIM4_Init+0xc0>)
 800134a:	f644 621f 	movw	r2, #19999	@ 0x4e1f
 800134e:	60da      	str	r2, [r3, #12]
  htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001350:	4b20      	ldr	r3, [pc, #128]	@ (80013d4 <MX_TIM4_Init+0xc0>)
 8001352:	2200      	movs	r2, #0
 8001354:	611a      	str	r2, [r3, #16]
  htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001356:	4b1f      	ldr	r3, [pc, #124]	@ (80013d4 <MX_TIM4_Init+0xc0>)
 8001358:	2200      	movs	r2, #0
 800135a:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_PWM_Init(&htim4) != HAL_OK)
 800135c:	481d      	ldr	r0, [pc, #116]	@ (80013d4 <MX_TIM4_Init+0xc0>)
 800135e:	f002 ffbb 	bl	80042d8 <HAL_TIM_PWM_Init>
 8001362:	4603      	mov	r3, r0
 8001364:	2b00      	cmp	r3, #0
 8001366:	d001      	beq.n	800136c <MX_TIM4_Init+0x58>
  {
    Error_Handler();
 8001368:	f000 f99c 	bl	80016a4 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 800136c:	2300      	movs	r3, #0
 800136e:	623b      	str	r3, [r7, #32]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001370:	2300      	movs	r3, #0
 8001372:	627b      	str	r3, [r7, #36]	@ 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 8001374:	f107 0320 	add.w	r3, r7, #32
 8001378:	4619      	mov	r1, r3
 800137a:	4816      	ldr	r0, [pc, #88]	@ (80013d4 <MX_TIM4_Init+0xc0>)
 800137c:	f003 fd28 	bl	8004dd0 <HAL_TIMEx_MasterConfigSynchronization>
 8001380:	4603      	mov	r3, r0
 8001382:	2b00      	cmp	r3, #0
 8001384:	d001      	beq.n	800138a <MX_TIM4_Init+0x76>
  {
    Error_Handler();
 8001386:	f000 f98d 	bl	80016a4 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 800138a:	2360      	movs	r3, #96	@ 0x60
 800138c:	607b      	str	r3, [r7, #4]
  sConfigOC.Pulse = 0;
 800138e:	2300      	movs	r3, #0
 8001390:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8001392:	2300      	movs	r3, #0
 8001394:	60fb      	str	r3, [r7, #12]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8001396:	2300      	movs	r3, #0
 8001398:	617b      	str	r3, [r7, #20]
  if (HAL_TIM_PWM_ConfigChannel(&htim4, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 800139a:	1d3b      	adds	r3, r7, #4
 800139c:	2200      	movs	r2, #0
 800139e:	4619      	mov	r1, r3
 80013a0:	480c      	ldr	r0, [pc, #48]	@ (80013d4 <MX_TIM4_Init+0xc0>)
 80013a2:	f003 fa1b 	bl	80047dc <HAL_TIM_PWM_ConfigChannel>
 80013a6:	4603      	mov	r3, r0
 80013a8:	2b00      	cmp	r3, #0
 80013aa:	d001      	beq.n	80013b0 <MX_TIM4_Init+0x9c>
  {
    Error_Handler();
 80013ac:	f000 f97a 	bl	80016a4 <Error_Handler>
  }
  if (HAL_TIM_PWM_ConfigChannel(&htim4, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 80013b0:	1d3b      	adds	r3, r7, #4
 80013b2:	2204      	movs	r2, #4
 80013b4:	4619      	mov	r1, r3
 80013b6:	4807      	ldr	r0, [pc, #28]	@ (80013d4 <MX_TIM4_Init+0xc0>)
 80013b8:	f003 fa10 	bl	80047dc <HAL_TIM_PWM_ConfigChannel>
 80013bc:	4603      	mov	r3, r0
 80013be:	2b00      	cmp	r3, #0
 80013c0:	d001      	beq.n	80013c6 <MX_TIM4_Init+0xb2>
  {
    Error_Handler();
 80013c2:	f000 f96f 	bl	80016a4 <Error_Handler>
  }
  /* USER CODE BEGIN TIM4_Init 2 */

  /* USER CODE END TIM4_Init 2 */
  HAL_TIM_MspPostInit(&htim4);
 80013c6:	4803      	ldr	r0, [pc, #12]	@ (80013d4 <MX_TIM4_Init+0xc0>)
 80013c8:	f000 fd9e 	bl	8001f08 <HAL_TIM_MspPostInit>

}
 80013cc:	bf00      	nop
 80013ce:	3728      	adds	r7, #40	@ 0x28
 80013d0:	46bd      	mov	sp, r7
 80013d2:	bd80      	pop	{r7, pc}
 80013d4:	200003ec 	.word	0x200003ec
 80013d8:	40000800 	.word	0x40000800

080013dc <MX_TIM5_Init>:
  * @brief TIM5 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM5_Init(void)
{
 80013dc:	b580      	push	{r7, lr}
 80013de:	b08c      	sub	sp, #48	@ 0x30
 80013e0:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM5_Init 0 */

  /* USER CODE END TIM5_Init 0 */

  TIM_Encoder_InitTypeDef sConfig = {0};
 80013e2:	f107 030c 	add.w	r3, r7, #12
 80013e6:	2224      	movs	r2, #36	@ 0x24
 80013e8:	2100      	movs	r1, #0
 80013ea:	4618      	mov	r0, r3
 80013ec:	f003 fdd2 	bl	8004f94 <memset>
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80013f0:	1d3b      	adds	r3, r7, #4
 80013f2:	2200      	movs	r2, #0
 80013f4:	601a      	str	r2, [r3, #0]
 80013f6:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM5_Init 1 */

  /* USER CODE END TIM5_Init 1 */
  htim5.Instance = TIM5;
 80013f8:	4b20      	ldr	r3, [pc, #128]	@ (800147c <MX_TIM5_Init+0xa0>)
 80013fa:	4a21      	ldr	r2, [pc, #132]	@ (8001480 <MX_TIM5_Init+0xa4>)
 80013fc:	601a      	str	r2, [r3, #0]
  htim5.Init.Prescaler = 0;
 80013fe:	4b1f      	ldr	r3, [pc, #124]	@ (800147c <MX_TIM5_Init+0xa0>)
 8001400:	2200      	movs	r2, #0
 8001402:	605a      	str	r2, [r3, #4]
  htim5.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001404:	4b1d      	ldr	r3, [pc, #116]	@ (800147c <MX_TIM5_Init+0xa0>)
 8001406:	2200      	movs	r2, #0
 8001408:	609a      	str	r2, [r3, #8]
  htim5.Init.Period = 4294967295;
 800140a:	4b1c      	ldr	r3, [pc, #112]	@ (800147c <MX_TIM5_Init+0xa0>)
 800140c:	f04f 32ff 	mov.w	r2, #4294967295
 8001410:	60da      	str	r2, [r3, #12]
  htim5.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001412:	4b1a      	ldr	r3, [pc, #104]	@ (800147c <MX_TIM5_Init+0xa0>)
 8001414:	2200      	movs	r2, #0
 8001416:	611a      	str	r2, [r3, #16]
  htim5.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001418:	4b18      	ldr	r3, [pc, #96]	@ (800147c <MX_TIM5_Init+0xa0>)
 800141a:	2200      	movs	r2, #0
 800141c:	619a      	str	r2, [r3, #24]
  sConfig.EncoderMode = TIM_ENCODERMODE_TI1;
 800141e:	2301      	movs	r3, #1
 8001420:	60fb      	str	r3, [r7, #12]
  sConfig.IC1Polarity = TIM_ICPOLARITY_RISING;
 8001422:	2300      	movs	r3, #0
 8001424:	613b      	str	r3, [r7, #16]
  sConfig.IC1Selection = TIM_ICSELECTION_DIRECTTI;
 8001426:	2301      	movs	r3, #1
 8001428:	617b      	str	r3, [r7, #20]
  sConfig.IC1Prescaler = TIM_ICPSC_DIV1;
 800142a:	2300      	movs	r3, #0
 800142c:	61bb      	str	r3, [r7, #24]
  sConfig.IC1Filter = 0;
 800142e:	2300      	movs	r3, #0
 8001430:	61fb      	str	r3, [r7, #28]
  sConfig.IC2Polarity = TIM_ICPOLARITY_RISING;
 8001432:	2300      	movs	r3, #0
 8001434:	623b      	str	r3, [r7, #32]
  sConfig.IC2Selection = TIM_ICSELECTION_DIRECTTI;
 8001436:	2301      	movs	r3, #1
 8001438:	627b      	str	r3, [r7, #36]	@ 0x24
  sConfig.IC2Prescaler = TIM_ICPSC_DIV1;
 800143a:	2300      	movs	r3, #0
 800143c:	62bb      	str	r3, [r7, #40]	@ 0x28
  sConfig.IC2Filter = 0;
 800143e:	2300      	movs	r3, #0
 8001440:	62fb      	str	r3, [r7, #44]	@ 0x2c
  if (HAL_TIM_Encoder_Init(&htim5, &sConfig) != HAL_OK)
 8001442:	f107 030c 	add.w	r3, r7, #12
 8001446:	4619      	mov	r1, r3
 8001448:	480c      	ldr	r0, [pc, #48]	@ (800147c <MX_TIM5_Init+0xa0>)
 800144a:	f003 f893 	bl	8004574 <HAL_TIM_Encoder_Init>
 800144e:	4603      	mov	r3, r0
 8001450:	2b00      	cmp	r3, #0
 8001452:	d001      	beq.n	8001458 <MX_TIM5_Init+0x7c>
  {
    Error_Handler();
 8001454:	f000 f926 	bl	80016a4 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8001458:	2300      	movs	r3, #0
 800145a:	607b      	str	r3, [r7, #4]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 800145c:	2300      	movs	r3, #0
 800145e:	60bb      	str	r3, [r7, #8]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim5, &sMasterConfig) != HAL_OK)
 8001460:	1d3b      	adds	r3, r7, #4
 8001462:	4619      	mov	r1, r3
 8001464:	4805      	ldr	r0, [pc, #20]	@ (800147c <MX_TIM5_Init+0xa0>)
 8001466:	f003 fcb3 	bl	8004dd0 <HAL_TIMEx_MasterConfigSynchronization>
 800146a:	4603      	mov	r3, r0
 800146c:	2b00      	cmp	r3, #0
 800146e:	d001      	beq.n	8001474 <MX_TIM5_Init+0x98>
  {
    Error_Handler();
 8001470:	f000 f918 	bl	80016a4 <Error_Handler>
  }
  /* USER CODE BEGIN TIM5_Init 2 */

  /* USER CODE END TIM5_Init 2 */

}
 8001474:	bf00      	nop
 8001476:	3730      	adds	r7, #48	@ 0x30
 8001478:	46bd      	mov	sp, r7
 800147a:	bd80      	pop	{r7, pc}
 800147c:	20000434 	.word	0x20000434
 8001480:	40000c00 	.word	0x40000c00

08001484 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8001484:	b580      	push	{r7, lr}
 8001486:	b08a      	sub	sp, #40	@ 0x28
 8001488:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800148a:	f107 0314 	add.w	r3, r7, #20
 800148e:	2200      	movs	r2, #0
 8001490:	601a      	str	r2, [r3, #0]
 8001492:	605a      	str	r2, [r3, #4]
 8001494:	609a      	str	r2, [r3, #8]
 8001496:	60da      	str	r2, [r3, #12]
 8001498:	611a      	str	r2, [r3, #16]
  /* USER CODE BEGIN MX_GPIO_Init_1 */

  /* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 800149a:	2300      	movs	r3, #0
 800149c:	613b      	str	r3, [r7, #16]
 800149e:	4b5a      	ldr	r3, [pc, #360]	@ (8001608 <MX_GPIO_Init+0x184>)
 80014a0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80014a2:	4a59      	ldr	r2, [pc, #356]	@ (8001608 <MX_GPIO_Init+0x184>)
 80014a4:	f043 0304 	orr.w	r3, r3, #4
 80014a8:	6313      	str	r3, [r2, #48]	@ 0x30
 80014aa:	4b57      	ldr	r3, [pc, #348]	@ (8001608 <MX_GPIO_Init+0x184>)
 80014ac:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80014ae:	f003 0304 	and.w	r3, r3, #4
 80014b2:	613b      	str	r3, [r7, #16]
 80014b4:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 80014b6:	2300      	movs	r3, #0
 80014b8:	60fb      	str	r3, [r7, #12]
 80014ba:	4b53      	ldr	r3, [pc, #332]	@ (8001608 <MX_GPIO_Init+0x184>)
 80014bc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80014be:	4a52      	ldr	r2, [pc, #328]	@ (8001608 <MX_GPIO_Init+0x184>)
 80014c0:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80014c4:	6313      	str	r3, [r2, #48]	@ 0x30
 80014c6:	4b50      	ldr	r3, [pc, #320]	@ (8001608 <MX_GPIO_Init+0x184>)
 80014c8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80014ca:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80014ce:	60fb      	str	r3, [r7, #12]
 80014d0:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 80014d2:	2300      	movs	r3, #0
 80014d4:	60bb      	str	r3, [r7, #8]
 80014d6:	4b4c      	ldr	r3, [pc, #304]	@ (8001608 <MX_GPIO_Init+0x184>)
 80014d8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80014da:	4a4b      	ldr	r2, [pc, #300]	@ (8001608 <MX_GPIO_Init+0x184>)
 80014dc:	f043 0301 	orr.w	r3, r3, #1
 80014e0:	6313      	str	r3, [r2, #48]	@ 0x30
 80014e2:	4b49      	ldr	r3, [pc, #292]	@ (8001608 <MX_GPIO_Init+0x184>)
 80014e4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80014e6:	f003 0301 	and.w	r3, r3, #1
 80014ea:	60bb      	str	r3, [r7, #8]
 80014ec:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 80014ee:	2300      	movs	r3, #0
 80014f0:	607b      	str	r3, [r7, #4]
 80014f2:	4b45      	ldr	r3, [pc, #276]	@ (8001608 <MX_GPIO_Init+0x184>)
 80014f4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80014f6:	4a44      	ldr	r2, [pc, #272]	@ (8001608 <MX_GPIO_Init+0x184>)
 80014f8:	f043 0302 	orr.w	r3, r3, #2
 80014fc:	6313      	str	r3, [r2, #48]	@ 0x30
 80014fe:	4b42      	ldr	r3, [pc, #264]	@ (8001608 <MX_GPIO_Init+0x184>)
 8001500:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001502:	f003 0302 	and.w	r3, r3, #2
 8001506:	607b      	str	r3, [r7, #4]
 8001508:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, GPIO_PIN_RESET);
 800150a:	2200      	movs	r2, #0
 800150c:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 8001510:	483e      	ldr	r0, [pc, #248]	@ (800160c <MX_GPIO_Init+0x188>)
 8001512:	f001 fd73 	bl	8002ffc <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_2|GPIO_PIN_14|GPIO_PIN_15, GPIO_PIN_RESET);
 8001516:	2200      	movs	r2, #0
 8001518:	f24c 0104 	movw	r1, #49156	@ 0xc004
 800151c:	483c      	ldr	r0, [pc, #240]	@ (8001610 <MX_GPIO_Init+0x18c>)
 800151e:	f001 fd6d 	bl	8002ffc <HAL_GPIO_WritePin>

  /*Configure GPIO pin : PC13 */
  GPIO_InitStruct.Pin = GPIO_PIN_13;
 8001522:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 8001526:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001528:	2301      	movs	r3, #1
 800152a:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800152c:	2300      	movs	r3, #0
 800152e:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001530:	2300      	movs	r3, #0
 8001532:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001534:	f107 0314 	add.w	r3, r7, #20
 8001538:	4619      	mov	r1, r3
 800153a:	4834      	ldr	r0, [pc, #208]	@ (800160c <MX_GPIO_Init+0x188>)
 800153c:	f001 fbc2 	bl	8002cc4 <HAL_GPIO_Init>

  /*Configure GPIO pins : PA2 PA3 */
  GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_3;
 8001540:	230c      	movs	r3, #12
 8001542:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001544:	2302      	movs	r3, #2
 8001546:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001548:	2300      	movs	r3, #0
 800154a:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800154c:	2303      	movs	r3, #3
 800154e:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Alternate = GPIO_AF7_USART2;
 8001550:	2307      	movs	r3, #7
 8001552:	627b      	str	r3, [r7, #36]	@ 0x24
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001554:	f107 0314 	add.w	r3, r7, #20
 8001558:	4619      	mov	r1, r3
 800155a:	482e      	ldr	r0, [pc, #184]	@ (8001614 <MX_GPIO_Init+0x190>)
 800155c:	f001 fbb2 	bl	8002cc4 <HAL_GPIO_Init>

  /*Configure GPIO pins : PA4 PA5 */
  GPIO_InitStruct.Pin = GPIO_PIN_4|GPIO_PIN_5;
 8001560:	2330      	movs	r3, #48	@ 0x30
 8001562:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8001564:	f44f 1388 	mov.w	r3, #1114112	@ 0x110000
 8001568:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 800156a:	2301      	movs	r3, #1
 800156c:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800156e:	f107 0314 	add.w	r3, r7, #20
 8001572:	4619      	mov	r1, r3
 8001574:	4827      	ldr	r0, [pc, #156]	@ (8001614 <MX_GPIO_Init+0x190>)
 8001576:	f001 fba5 	bl	8002cc4 <HAL_GPIO_Init>

  /*Configure GPIO pin : PB2 */
  GPIO_InitStruct.Pin = GPIO_PIN_2;
 800157a:	2304      	movs	r3, #4
 800157c:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800157e:	2301      	movs	r3, #1
 8001580:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001582:	2300      	movs	r3, #0
 8001584:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001586:	2300      	movs	r3, #0
 8001588:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800158a:	f107 0314 	add.w	r3, r7, #20
 800158e:	4619      	mov	r1, r3
 8001590:	481f      	ldr	r0, [pc, #124]	@ (8001610 <MX_GPIO_Init+0x18c>)
 8001592:	f001 fb97 	bl	8002cc4 <HAL_GPIO_Init>

  /*Configure GPIO pins : PB12 PB13 */
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 8001596:	f44f 5340 	mov.w	r3, #12288	@ 0x3000
 800159a:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING_FALLING;
 800159c:	f44f 1344 	mov.w	r3, #3211264	@ 0x310000
 80015a0:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80015a2:	2300      	movs	r3, #0
 80015a4:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80015a6:	f107 0314 	add.w	r3, r7, #20
 80015aa:	4619      	mov	r1, r3
 80015ac:	4818      	ldr	r0, [pc, #96]	@ (8001610 <MX_GPIO_Init+0x18c>)
 80015ae:	f001 fb89 	bl	8002cc4 <HAL_GPIO_Init>

  /*Configure GPIO pins : PB14 PB15 */
  GPIO_InitStruct.Pin = GPIO_PIN_14|GPIO_PIN_15;
 80015b2:	f44f 4340 	mov.w	r3, #49152	@ 0xc000
 80015b6:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_OD;
 80015b8:	2311      	movs	r3, #17
 80015ba:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80015bc:	2300      	movs	r3, #0
 80015be:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80015c0:	2300      	movs	r3, #0
 80015c2:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80015c4:	f107 0314 	add.w	r3, r7, #20
 80015c8:	4619      	mov	r1, r3
 80015ca:	4811      	ldr	r0, [pc, #68]	@ (8001610 <MX_GPIO_Init+0x18c>)
 80015cc:	f001 fb7a 	bl	8002cc4 <HAL_GPIO_Init>

  /* EXTI interrupt init*/
  HAL_NVIC_SetPriority(EXTI4_IRQn, 2, 0);
 80015d0:	2200      	movs	r2, #0
 80015d2:	2102      	movs	r1, #2
 80015d4:	200a      	movs	r0, #10
 80015d6:	f001 fb3e 	bl	8002c56 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI4_IRQn);
 80015da:	200a      	movs	r0, #10
 80015dc:	f001 fb57 	bl	8002c8e <HAL_NVIC_EnableIRQ>

  HAL_NVIC_SetPriority(EXTI9_5_IRQn, 2, 0);
 80015e0:	2200      	movs	r2, #0
 80015e2:	2102      	movs	r1, #2
 80015e4:	2017      	movs	r0, #23
 80015e6:	f001 fb36 	bl	8002c56 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI9_5_IRQn);
 80015ea:	2017      	movs	r0, #23
 80015ec:	f001 fb4f 	bl	8002c8e <HAL_NVIC_EnableIRQ>

  HAL_NVIC_SetPriority(EXTI15_10_IRQn, 2, 0);
 80015f0:	2200      	movs	r2, #0
 80015f2:	2102      	movs	r1, #2
 80015f4:	2028      	movs	r0, #40	@ 0x28
 80015f6:	f001 fb2e 	bl	8002c56 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI15_10_IRQn);
 80015fa:	2028      	movs	r0, #40	@ 0x28
 80015fc:	f001 fb47 	bl	8002c8e <HAL_NVIC_EnableIRQ>

  /* USER CODE BEGIN MX_GPIO_Init_2 */

  /* USER CODE END MX_GPIO_Init_2 */
}
 8001600:	bf00      	nop
 8001602:	3728      	adds	r7, #40	@ 0x28
 8001604:	46bd      	mov	sp, r7
 8001606:	bd80      	pop	{r7, pc}
 8001608:	40023800 	.word	0x40023800
 800160c:	40020800 	.word	0x40020800
 8001610:	40020400 	.word	0x40020400
 8001614:	40020000 	.word	0x40020000

08001618 <HAL_GPIO_EXTI_Callback>:

/* USER CODE BEGIN 4 */
void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin)
{
 8001618:	b580      	push	{r7, lr}
 800161a:	b082      	sub	sp, #8
 800161c:	af00      	add	r7, sp, #0
 800161e:	4603      	mov	r3, r0
 8001620:	80fb      	strh	r3, [r7, #6]
    if (GPIO_Pin == GPIO_PIN_12)
 8001622:	88fb      	ldrh	r3, [r7, #6]
 8001624:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8001628:	d10e      	bne.n	8001648 <HAL_GPIO_EXTI_Callback+0x30>
    {
        if (HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_12) == GPIO_PIN_RESET)
 800162a:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 800162e:	4818      	ldr	r0, [pc, #96]	@ (8001690 <HAL_GPIO_EXTI_Callback+0x78>)
 8001630:	f001 fccc 	bl	8002fcc <HAL_GPIO_ReadPin>
 8001634:	4603      	mov	r3, r0
 8001636:	2b00      	cmp	r3, #0
 8001638:	d103      	bne.n	8001642 <HAL_GPIO_EXTI_Callback+0x2a>
        {
            // turn on laser
        	blue_shoot_task.button = 1;
 800163a:	4b16      	ldr	r3, [pc, #88]	@ (8001694 <HAL_GPIO_EXTI_Callback+0x7c>)
 800163c:	2201      	movs	r2, #1
 800163e:	609a      	str	r2, [r3, #8]
 8001640:	e002      	b.n	8001648 <HAL_GPIO_EXTI_Callback+0x30>
        }
        else
        {
            // turn off laser
        	blue_shoot_task.button = 0;
 8001642:	4b14      	ldr	r3, [pc, #80]	@ (8001694 <HAL_GPIO_EXTI_Callback+0x7c>)
 8001644:	2200      	movs	r2, #0
 8001646:	609a      	str	r2, [r3, #8]
        }
    }
    if (GPIO_Pin == GPIO_PIN_13)
 8001648:	88fb      	ldrh	r3, [r7, #6]
 800164a:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 800164e:	d10e      	bne.n	800166e <HAL_GPIO_EXTI_Callback+0x56>
	{
		if (HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_13) == GPIO_PIN_RESET)
 8001650:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 8001654:	480e      	ldr	r0, [pc, #56]	@ (8001690 <HAL_GPIO_EXTI_Callback+0x78>)
 8001656:	f001 fcb9 	bl	8002fcc <HAL_GPIO_ReadPin>
 800165a:	4603      	mov	r3, r0
 800165c:	2b00      	cmp	r3, #0
 800165e:	d103      	bne.n	8001668 <HAL_GPIO_EXTI_Callback+0x50>
		{
			// turn on laser
			red_shoot_task.button = 1;
 8001660:	4b0d      	ldr	r3, [pc, #52]	@ (8001698 <HAL_GPIO_EXTI_Callback+0x80>)
 8001662:	2201      	movs	r2, #1
 8001664:	609a      	str	r2, [r3, #8]
 8001666:	e002      	b.n	800166e <HAL_GPIO_EXTI_Callback+0x56>
		}
		else
		{
			// turn off laser
			red_shoot_task.button = 0;
 8001668:	4b0b      	ldr	r3, [pc, #44]	@ (8001698 <HAL_GPIO_EXTI_Callback+0x80>)
 800166a:	2200      	movs	r2, #0
 800166c:	609a      	str	r2, [r3, #8]
		}
	}

    if (GPIO_Pin == GPIO_PIN_4){
 800166e:	88fb      	ldrh	r3, [r7, #6]
 8001670:	2b10      	cmp	r3, #16
 8001672:	d102      	bne.n	800167a <HAL_GPIO_EXTI_Callback+0x62>
    	red_photoresistor_task.hit_flag = 1;
 8001674:	4b09      	ldr	r3, [pc, #36]	@ (800169c <HAL_GPIO_EXTI_Callback+0x84>)
 8001676:	2201      	movs	r2, #1
 8001678:	609a      	str	r2, [r3, #8]
    }
    if (GPIO_Pin == GPIO_PIN_5){
 800167a:	88fb      	ldrh	r3, [r7, #6]
 800167c:	2b20      	cmp	r3, #32
 800167e:	d102      	bne.n	8001686 <HAL_GPIO_EXTI_Callback+0x6e>
    	blue_photoresistor_task.hit_flag = 1;
 8001680:	4b07      	ldr	r3, [pc, #28]	@ (80016a0 <HAL_GPIO_EXTI_Callback+0x88>)
 8001682:	2201      	movs	r2, #1
 8001684:	609a      	str	r2, [r3, #8]
	}
}
 8001686:	bf00      	nop
 8001688:	3708      	adds	r7, #8
 800168a:	46bd      	mov	sp, r7
 800168c:	bd80      	pop	{r7, pc}
 800168e:	bf00      	nop
 8001690:	40020400 	.word	0x40020400
 8001694:	200000fc 	.word	0x200000fc
 8001698:	200000cc 	.word	0x200000cc
 800169c:	20000048 	.word	0x20000048
 80016a0:	20000068 	.word	0x20000068

080016a4 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 80016a4:	b480      	push	{r7}
 80016a6:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 80016a8:	b672      	cpsid	i
}
 80016aa:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 80016ac:	bf00      	nop
 80016ae:	e7fd      	b.n	80016ac <Error_Handler+0x8>

080016b0 <set_duty>:
 80016b0:	b480      	push	{r7}
 80016b2:	b083      	sub	sp, #12
 80016b4:	af00      	add	r7, sp, #0
 80016b6:	6078      	str	r0, [r7, #4]
 80016b8:	6039      	str	r1, [r7, #0]
 80016ba:	683a      	ldr	r2, [r7, #0]
 80016bc:	4613      	mov	r3, r2
 80016be:	005b      	lsls	r3, r3, #1
 80016c0:	4413      	add	r3, r2
 80016c2:	011b      	lsls	r3, r3, #4
 80016c4:	603b      	str	r3, [r7, #0]
 80016c6:	683b      	ldr	r3, [r7, #0]
 80016c8:	2b00      	cmp	r3, #0
 80016ca:	db46      	blt.n	800175a <set_duty+0xaa>
 80016cc:	687b      	ldr	r3, [r7, #4]
 80016ce:	685b      	ldr	r3, [r3, #4]
 80016d0:	2b00      	cmp	r3, #0
 80016d2:	d105      	bne.n	80016e0 <set_duty+0x30>
 80016d4:	687b      	ldr	r3, [r7, #4]
 80016d6:	681b      	ldr	r3, [r3, #0]
 80016d8:	681b      	ldr	r3, [r3, #0]
 80016da:	683a      	ldr	r2, [r7, #0]
 80016dc:	635a      	str	r2, [r3, #52]	@ 0x34
 80016de:	e018      	b.n	8001712 <set_duty+0x62>
 80016e0:	687b      	ldr	r3, [r7, #4]
 80016e2:	685b      	ldr	r3, [r3, #4]
 80016e4:	2b04      	cmp	r3, #4
 80016e6:	d105      	bne.n	80016f4 <set_duty+0x44>
 80016e8:	687b      	ldr	r3, [r7, #4]
 80016ea:	681b      	ldr	r3, [r3, #0]
 80016ec:	681a      	ldr	r2, [r3, #0]
 80016ee:	683b      	ldr	r3, [r7, #0]
 80016f0:	6393      	str	r3, [r2, #56]	@ 0x38
 80016f2:	e00e      	b.n	8001712 <set_duty+0x62>
 80016f4:	687b      	ldr	r3, [r7, #4]
 80016f6:	685b      	ldr	r3, [r3, #4]
 80016f8:	2b08      	cmp	r3, #8
 80016fa:	d105      	bne.n	8001708 <set_duty+0x58>
 80016fc:	687b      	ldr	r3, [r7, #4]
 80016fe:	681b      	ldr	r3, [r3, #0]
 8001700:	681a      	ldr	r2, [r3, #0]
 8001702:	683b      	ldr	r3, [r7, #0]
 8001704:	63d3      	str	r3, [r2, #60]	@ 0x3c
 8001706:	e004      	b.n	8001712 <set_duty+0x62>
 8001708:	687b      	ldr	r3, [r7, #4]
 800170a:	681b      	ldr	r3, [r3, #0]
 800170c:	681a      	ldr	r2, [r3, #0]
 800170e:	683b      	ldr	r3, [r7, #0]
 8001710:	6413      	str	r3, [r2, #64]	@ 0x40
 8001712:	687b      	ldr	r3, [r7, #4]
 8001714:	689b      	ldr	r3, [r3, #8]
 8001716:	2b00      	cmp	r3, #0
 8001718:	d105      	bne.n	8001726 <set_duty+0x76>
 800171a:	687b      	ldr	r3, [r7, #4]
 800171c:	681b      	ldr	r3, [r3, #0]
 800171e:	681b      	ldr	r3, [r3, #0]
 8001720:	2200      	movs	r2, #0
 8001722:	635a      	str	r2, [r3, #52]	@ 0x34
 8001724:	e076      	b.n	8001814 <set_duty+0x164>
 8001726:	687b      	ldr	r3, [r7, #4]
 8001728:	689b      	ldr	r3, [r3, #8]
 800172a:	2b04      	cmp	r3, #4
 800172c:	d105      	bne.n	800173a <set_duty+0x8a>
 800172e:	687b      	ldr	r3, [r7, #4]
 8001730:	681b      	ldr	r3, [r3, #0]
 8001732:	681a      	ldr	r2, [r3, #0]
 8001734:	2300      	movs	r3, #0
 8001736:	6393      	str	r3, [r2, #56]	@ 0x38
 8001738:	e06c      	b.n	8001814 <set_duty+0x164>
 800173a:	687b      	ldr	r3, [r7, #4]
 800173c:	689b      	ldr	r3, [r3, #8]
 800173e:	2b08      	cmp	r3, #8
 8001740:	d105      	bne.n	800174e <set_duty+0x9e>
 8001742:	687b      	ldr	r3, [r7, #4]
 8001744:	681b      	ldr	r3, [r3, #0]
 8001746:	681a      	ldr	r2, [r3, #0]
 8001748:	2300      	movs	r3, #0
 800174a:	63d3      	str	r3, [r2, #60]	@ 0x3c
 800174c:	e062      	b.n	8001814 <set_duty+0x164>
 800174e:	687b      	ldr	r3, [r7, #4]
 8001750:	681b      	ldr	r3, [r3, #0]
 8001752:	681a      	ldr	r2, [r3, #0]
 8001754:	2300      	movs	r3, #0
 8001756:	6413      	str	r3, [r2, #64]	@ 0x40
 8001758:	e05c      	b.n	8001814 <set_duty+0x164>
 800175a:	683b      	ldr	r3, [r7, #0]
 800175c:	2b00      	cmp	r3, #0
 800175e:	da59      	bge.n	8001814 <set_duty+0x164>
 8001760:	687b      	ldr	r3, [r7, #4]
 8001762:	685b      	ldr	r3, [r3, #4]
 8001764:	2b00      	cmp	r3, #0
 8001766:	d105      	bne.n	8001774 <set_duty+0xc4>
 8001768:	687b      	ldr	r3, [r7, #4]
 800176a:	681b      	ldr	r3, [r3, #0]
 800176c:	681b      	ldr	r3, [r3, #0]
 800176e:	2200      	movs	r2, #0
 8001770:	635a      	str	r2, [r3, #52]	@ 0x34
 8001772:	e018      	b.n	80017a6 <set_duty+0xf6>
 8001774:	687b      	ldr	r3, [r7, #4]
 8001776:	685b      	ldr	r3, [r3, #4]
 8001778:	2b04      	cmp	r3, #4
 800177a:	d105      	bne.n	8001788 <set_duty+0xd8>
 800177c:	687b      	ldr	r3, [r7, #4]
 800177e:	681b      	ldr	r3, [r3, #0]
 8001780:	681a      	ldr	r2, [r3, #0]
 8001782:	2300      	movs	r3, #0
 8001784:	6393      	str	r3, [r2, #56]	@ 0x38
 8001786:	e00e      	b.n	80017a6 <set_duty+0xf6>
 8001788:	687b      	ldr	r3, [r7, #4]
 800178a:	685b      	ldr	r3, [r3, #4]
 800178c:	2b08      	cmp	r3, #8
 800178e:	d105      	bne.n	800179c <set_duty+0xec>
 8001790:	687b      	ldr	r3, [r7, #4]
 8001792:	681b      	ldr	r3, [r3, #0]
 8001794:	681a      	ldr	r2, [r3, #0]
 8001796:	2300      	movs	r3, #0
 8001798:	63d3      	str	r3, [r2, #60]	@ 0x3c
 800179a:	e004      	b.n	80017a6 <set_duty+0xf6>
 800179c:	687b      	ldr	r3, [r7, #4]
 800179e:	681b      	ldr	r3, [r3, #0]
 80017a0:	681a      	ldr	r2, [r3, #0]
 80017a2:	2300      	movs	r3, #0
 80017a4:	6413      	str	r3, [r2, #64]	@ 0x40
 80017a6:	687b      	ldr	r3, [r7, #4]
 80017a8:	689b      	ldr	r3, [r3, #8]
 80017aa:	2b00      	cmp	r3, #0
 80017ac:	d109      	bne.n	80017c2 <set_duty+0x112>
 80017ae:	683b      	ldr	r3, [r7, #0]
 80017b0:	ea83 72e3 	eor.w	r2, r3, r3, asr #31
 80017b4:	eba2 72e3 	sub.w	r2, r2, r3, asr #31
 80017b8:	687b      	ldr	r3, [r7, #4]
 80017ba:	681b      	ldr	r3, [r3, #0]
 80017bc:	681b      	ldr	r3, [r3, #0]
 80017be:	635a      	str	r2, [r3, #52]	@ 0x34
 80017c0:	e028      	b.n	8001814 <set_duty+0x164>
 80017c2:	687b      	ldr	r3, [r7, #4]
 80017c4:	689b      	ldr	r3, [r3, #8]
 80017c6:	2b04      	cmp	r3, #4
 80017c8:	d10a      	bne.n	80017e0 <set_duty+0x130>
 80017ca:	683b      	ldr	r3, [r7, #0]
 80017cc:	ea83 71e3 	eor.w	r1, r3, r3, asr #31
 80017d0:	eba1 71e3 	sub.w	r1, r1, r3, asr #31
 80017d4:	687b      	ldr	r3, [r7, #4]
 80017d6:	681b      	ldr	r3, [r3, #0]
 80017d8:	681a      	ldr	r2, [r3, #0]
 80017da:	460b      	mov	r3, r1
 80017dc:	6393      	str	r3, [r2, #56]	@ 0x38
 80017de:	e019      	b.n	8001814 <set_duty+0x164>
 80017e0:	687b      	ldr	r3, [r7, #4]
 80017e2:	689b      	ldr	r3, [r3, #8]
 80017e4:	2b08      	cmp	r3, #8
 80017e6:	d10a      	bne.n	80017fe <set_duty+0x14e>
 80017e8:	683b      	ldr	r3, [r7, #0]
 80017ea:	ea83 71e3 	eor.w	r1, r3, r3, asr #31
 80017ee:	eba1 71e3 	sub.w	r1, r1, r3, asr #31
 80017f2:	687b      	ldr	r3, [r7, #4]
 80017f4:	681b      	ldr	r3, [r3, #0]
 80017f6:	681a      	ldr	r2, [r3, #0]
 80017f8:	460b      	mov	r3, r1
 80017fa:	63d3      	str	r3, [r2, #60]	@ 0x3c
 80017fc:	e00a      	b.n	8001814 <set_duty+0x164>
 80017fe:	683b      	ldr	r3, [r7, #0]
 8001800:	ea83 71e3 	eor.w	r1, r3, r3, asr #31
 8001804:	eba1 71e3 	sub.w	r1, r1, r3, asr #31
 8001808:	687b      	ldr	r3, [r7, #4]
 800180a:	681b      	ldr	r3, [r3, #0]
 800180c:	681a      	ldr	r2, [r3, #0]
 800180e:	460b      	mov	r3, r1
 8001810:	6413      	str	r3, [r2, #64]	@ 0x40
 8001812:	e7ff      	b.n	8001814 <set_duty+0x164>
 8001814:	bf00      	nop
 8001816:	370c      	adds	r7, #12
 8001818:	46bd      	mov	sp, r7
 800181a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800181e:	4770      	bx	lr

08001820 <enable>:
 8001820:	b480      	push	{r7}
 8001822:	b083      	sub	sp, #12
 8001824:	af00      	add	r7, sp, #0
 8001826:	6078      	str	r0, [r7, #4]
 8001828:	687b      	ldr	r3, [r7, #4]
 800182a:	685b      	ldr	r3, [r3, #4]
 800182c:	2b00      	cmp	r3, #0
 800182e:	d106      	bne.n	800183e <enable+0x1e>
 8001830:	687b      	ldr	r3, [r7, #4]
 8001832:	681b      	ldr	r3, [r3, #0]
 8001834:	681b      	ldr	r3, [r3, #0]
 8001836:	f44f 5296 	mov.w	r2, #4800	@ 0x12c0
 800183a:	635a      	str	r2, [r3, #52]	@ 0x34
 800183c:	e01b      	b.n	8001876 <enable+0x56>
 800183e:	687b      	ldr	r3, [r7, #4]
 8001840:	685b      	ldr	r3, [r3, #4]
 8001842:	2b04      	cmp	r3, #4
 8001844:	d106      	bne.n	8001854 <enable+0x34>
 8001846:	687b      	ldr	r3, [r7, #4]
 8001848:	681b      	ldr	r3, [r3, #0]
 800184a:	681a      	ldr	r2, [r3, #0]
 800184c:	f44f 5396 	mov.w	r3, #4800	@ 0x12c0
 8001850:	6393      	str	r3, [r2, #56]	@ 0x38
 8001852:	e010      	b.n	8001876 <enable+0x56>
 8001854:	687b      	ldr	r3, [r7, #4]
 8001856:	685b      	ldr	r3, [r3, #4]
 8001858:	2b08      	cmp	r3, #8
 800185a:	d106      	bne.n	800186a <enable+0x4a>
 800185c:	687b      	ldr	r3, [r7, #4]
 800185e:	681b      	ldr	r3, [r3, #0]
 8001860:	681a      	ldr	r2, [r3, #0]
 8001862:	f44f 5396 	mov.w	r3, #4800	@ 0x12c0
 8001866:	63d3      	str	r3, [r2, #60]	@ 0x3c
 8001868:	e005      	b.n	8001876 <enable+0x56>
 800186a:	687b      	ldr	r3, [r7, #4]
 800186c:	681b      	ldr	r3, [r3, #0]
 800186e:	681a      	ldr	r2, [r3, #0]
 8001870:	f44f 5396 	mov.w	r3, #4800	@ 0x12c0
 8001874:	6413      	str	r3, [r2, #64]	@ 0x40
 8001876:	687b      	ldr	r3, [r7, #4]
 8001878:	689b      	ldr	r3, [r3, #8]
 800187a:	2b00      	cmp	r3, #0
 800187c:	d106      	bne.n	800188c <enable+0x6c>
 800187e:	687b      	ldr	r3, [r7, #4]
 8001880:	681b      	ldr	r3, [r3, #0]
 8001882:	681b      	ldr	r3, [r3, #0]
 8001884:	f44f 5296 	mov.w	r2, #4800	@ 0x12c0
 8001888:	635a      	str	r2, [r3, #52]	@ 0x34
 800188a:	e01b      	b.n	80018c4 <enable+0xa4>
 800188c:	687b      	ldr	r3, [r7, #4]
 800188e:	689b      	ldr	r3, [r3, #8]
 8001890:	2b04      	cmp	r3, #4
 8001892:	d106      	bne.n	80018a2 <enable+0x82>
 8001894:	687b      	ldr	r3, [r7, #4]
 8001896:	681b      	ldr	r3, [r3, #0]
 8001898:	681a      	ldr	r2, [r3, #0]
 800189a:	f44f 5396 	mov.w	r3, #4800	@ 0x12c0
 800189e:	6393      	str	r3, [r2, #56]	@ 0x38
 80018a0:	e010      	b.n	80018c4 <enable+0xa4>
 80018a2:	687b      	ldr	r3, [r7, #4]
 80018a4:	689b      	ldr	r3, [r3, #8]
 80018a6:	2b08      	cmp	r3, #8
 80018a8:	d106      	bne.n	80018b8 <enable+0x98>
 80018aa:	687b      	ldr	r3, [r7, #4]
 80018ac:	681b      	ldr	r3, [r3, #0]
 80018ae:	681a      	ldr	r2, [r3, #0]
 80018b0:	f44f 5396 	mov.w	r3, #4800	@ 0x12c0
 80018b4:	63d3      	str	r3, [r2, #60]	@ 0x3c
 80018b6:	e005      	b.n	80018c4 <enable+0xa4>
 80018b8:	687b      	ldr	r3, [r7, #4]
 80018ba:	681b      	ldr	r3, [r3, #0]
 80018bc:	681a      	ldr	r2, [r3, #0]
 80018be:	f44f 5396 	mov.w	r3, #4800	@ 0x12c0
 80018c2:	6413      	str	r3, [r2, #64]	@ 0x40
 80018c4:	bf00      	nop
 80018c6:	370c      	adds	r7, #12
 80018c8:	46bd      	mov	sp, r7
 80018ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 80018ce:	4770      	bx	lr

080018d0 <photoresistor_task_run>:
 80018d0:	b580      	push	{r7, lr}
 80018d2:	b082      	sub	sp, #8
 80018d4:	af00      	add	r7, sp, #0
 80018d6:	6078      	str	r0, [r7, #4]
 80018d8:	687b      	ldr	r3, [r7, #4]
 80018da:	681b      	ldr	r3, [r3, #0]
 80018dc:	2b00      	cmp	r3, #0
 80018de:	db0f      	blt.n	8001900 <photoresistor_task_run+0x30>
 80018e0:	687b      	ldr	r3, [r7, #4]
 80018e2:	681a      	ldr	r2, [r3, #0]
 80018e4:	687b      	ldr	r3, [r7, #4]
 80018e6:	685b      	ldr	r3, [r3, #4]
 80018e8:	429a      	cmp	r2, r3
 80018ea:	da09      	bge.n	8001900 <photoresistor_task_run+0x30>
 80018ec:	687b      	ldr	r3, [r7, #4]
 80018ee:	681b      	ldr	r3, [r3, #0]
 80018f0:	687a      	ldr	r2, [r7, #4]
 80018f2:	3304      	adds	r3, #4
 80018f4:	009b      	lsls	r3, r3, #2
 80018f6:	4413      	add	r3, r2
 80018f8:	685b      	ldr	r3, [r3, #4]
 80018fa:	6878      	ldr	r0, [r7, #4]
 80018fc:	4798      	blx	r3
 80018fe:	e000      	b.n	8001902 <photoresistor_task_run+0x32>
 8001900:	e7fe      	b.n	8001900 <photoresistor_task_run+0x30>
 8001902:	3708      	adds	r7, #8
 8001904:	46bd      	mov	sp, r7
 8001906:	bd80      	pop	{r7, pc}

08001908 <photoresistor_task_state_0_init>:
 8001908:	b480      	push	{r7}
 800190a:	b083      	sub	sp, #12
 800190c:	af00      	add	r7, sp, #0
 800190e:	6078      	str	r0, [r7, #4]
 8001910:	687b      	ldr	r3, [r7, #4]
 8001912:	2201      	movs	r2, #1
 8001914:	601a      	str	r2, [r3, #0]
 8001916:	bf00      	nop
 8001918:	370c      	adds	r7, #12
 800191a:	46bd      	mov	sp, r7
 800191c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001920:	4770      	bx	lr

08001922 <photoresistor_task_state_1_look>:
 8001922:	b480      	push	{r7}
 8001924:	b083      	sub	sp, #12
 8001926:	af00      	add	r7, sp, #0
 8001928:	6078      	str	r0, [r7, #4]
 800192a:	687b      	ldr	r3, [r7, #4]
 800192c:	689b      	ldr	r3, [r3, #8]
 800192e:	2b01      	cmp	r3, #1
 8001930:	d102      	bne.n	8001938 <photoresistor_task_state_1_look+0x16>
 8001932:	687b      	ldr	r3, [r7, #4]
 8001934:	2202      	movs	r2, #2
 8001936:	601a      	str	r2, [r3, #0]
 8001938:	bf00      	nop
 800193a:	370c      	adds	r7, #12
 800193c:	46bd      	mov	sp, r7
 800193e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001942:	4770      	bx	lr

08001944 <photoresistor_task_state_2_hit>:
 8001944:	b480      	push	{r7}
 8001946:	b083      	sub	sp, #12
 8001948:	af00      	add	r7, sp, #0
 800194a:	6078      	str	r0, [r7, #4]
 800194c:	687b      	ldr	r3, [r7, #4]
 800194e:	689b      	ldr	r3, [r3, #8]
 8001950:	2b00      	cmp	r3, #0
 8001952:	d102      	bne.n	800195a <photoresistor_task_state_2_hit+0x16>
 8001954:	687b      	ldr	r3, [r7, #4]
 8001956:	2201      	movs	r2, #1
 8001958:	601a      	str	r2, [r3, #0]
 800195a:	bf00      	nop
 800195c:	370c      	adds	r7, #12
 800195e:	46bd      	mov	sp, r7
 8001960:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001964:	4770      	bx	lr

08001966 <shoot_task_run>:
 8001966:	b580      	push	{r7, lr}
 8001968:	b082      	sub	sp, #8
 800196a:	af00      	add	r7, sp, #0
 800196c:	6078      	str	r0, [r7, #4]
 800196e:	687b      	ldr	r3, [r7, #4]
 8001970:	681b      	ldr	r3, [r3, #0]
 8001972:	2b00      	cmp	r3, #0
 8001974:	db0e      	blt.n	8001994 <shoot_task_run+0x2e>
 8001976:	687b      	ldr	r3, [r7, #4]
 8001978:	681a      	ldr	r2, [r3, #0]
 800197a:	687b      	ldr	r3, [r7, #4]
 800197c:	685b      	ldr	r3, [r3, #4]
 800197e:	429a      	cmp	r2, r3
 8001980:	da08      	bge.n	8001994 <shoot_task_run+0x2e>
 8001982:	687b      	ldr	r3, [r7, #4]
 8001984:	681a      	ldr	r2, [r3, #0]
 8001986:	687b      	ldr	r3, [r7, #4]
 8001988:	3208      	adds	r2, #8
 800198a:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800198e:	6878      	ldr	r0, [r7, #4]
 8001990:	4798      	blx	r3
 8001992:	e000      	b.n	8001996 <shoot_task_run+0x30>
 8001994:	e7fe      	b.n	8001994 <shoot_task_run+0x2e>
 8001996:	3708      	adds	r7, #8
 8001998:	46bd      	mov	sp, r7
 800199a:	bd80      	pop	{r7, pc}

0800199c <shoot_task_state_0_init>:
 800199c:	b580      	push	{r7, lr}
 800199e:	b082      	sub	sp, #8
 80019a0:	af00      	add	r7, sp, #0
 80019a2:	6078      	str	r0, [r7, #4]
 80019a4:	687b      	ldr	r3, [r7, #4]
 80019a6:	2201      	movs	r2, #1
 80019a8:	601a      	str	r2, [r3, #0]
 80019aa:	687b      	ldr	r3, [r7, #4]
 80019ac:	69db      	ldr	r3, [r3, #28]
 80019ae:	b29b      	uxth	r3, r3
 80019b0:	2201      	movs	r2, #1
 80019b2:	4619      	mov	r1, r3
 80019b4:	4818      	ldr	r0, [pc, #96]	@ (8001a18 <shoot_task_state_0_init+0x7c>)
 80019b6:	f001 fb21 	bl	8002ffc <HAL_GPIO_WritePin>
 80019ba:	687b      	ldr	r3, [r7, #4]
 80019bc:	691b      	ldr	r3, [r3, #16]
 80019be:	2b00      	cmp	r3, #0
 80019c0:	d106      	bne.n	80019d0 <shoot_task_state_0_init+0x34>
 80019c2:	687b      	ldr	r3, [r7, #4]
 80019c4:	699a      	ldr	r2, [r3, #24]
 80019c6:	687b      	ldr	r3, [r7, #4]
 80019c8:	68db      	ldr	r3, [r3, #12]
 80019ca:	681b      	ldr	r3, [r3, #0]
 80019cc:	635a      	str	r2, [r3, #52]	@ 0x34
 80019ce:	e01e      	b.n	8001a0e <shoot_task_state_0_init+0x72>
 80019d0:	687b      	ldr	r3, [r7, #4]
 80019d2:	691b      	ldr	r3, [r3, #16]
 80019d4:	2b04      	cmp	r3, #4
 80019d6:	d107      	bne.n	80019e8 <shoot_task_state_0_init+0x4c>
 80019d8:	687b      	ldr	r3, [r7, #4]
 80019da:	6999      	ldr	r1, [r3, #24]
 80019dc:	687b      	ldr	r3, [r7, #4]
 80019de:	68db      	ldr	r3, [r3, #12]
 80019e0:	681a      	ldr	r2, [r3, #0]
 80019e2:	460b      	mov	r3, r1
 80019e4:	6393      	str	r3, [r2, #56]	@ 0x38
 80019e6:	e012      	b.n	8001a0e <shoot_task_state_0_init+0x72>
 80019e8:	687b      	ldr	r3, [r7, #4]
 80019ea:	691b      	ldr	r3, [r3, #16]
 80019ec:	2b08      	cmp	r3, #8
 80019ee:	d107      	bne.n	8001a00 <shoot_task_state_0_init+0x64>
 80019f0:	687b      	ldr	r3, [r7, #4]
 80019f2:	6999      	ldr	r1, [r3, #24]
 80019f4:	687b      	ldr	r3, [r7, #4]
 80019f6:	68db      	ldr	r3, [r3, #12]
 80019f8:	681a      	ldr	r2, [r3, #0]
 80019fa:	460b      	mov	r3, r1
 80019fc:	63d3      	str	r3, [r2, #60]	@ 0x3c
 80019fe:	e006      	b.n	8001a0e <shoot_task_state_0_init+0x72>
 8001a00:	687b      	ldr	r3, [r7, #4]
 8001a02:	6999      	ldr	r1, [r3, #24]
 8001a04:	687b      	ldr	r3, [r7, #4]
 8001a06:	68db      	ldr	r3, [r3, #12]
 8001a08:	681a      	ldr	r2, [r3, #0]
 8001a0a:	460b      	mov	r3, r1
 8001a0c:	6413      	str	r3, [r2, #64]	@ 0x40
 8001a0e:	bf00      	nop
 8001a10:	3708      	adds	r7, #8
 8001a12:	46bd      	mov	sp, r7
 8001a14:	bd80      	pop	{r7, pc}
 8001a16:	bf00      	nop
 8001a18:	40020400 	.word	0x40020400

08001a1c <shoot_task_state_1_wait>:
 8001a1c:	b580      	push	{r7, lr}
 8001a1e:	b082      	sub	sp, #8
 8001a20:	af00      	add	r7, sp, #0
 8001a22:	6078      	str	r0, [r7, #4]
 8001a24:	687b      	ldr	r3, [r7, #4]
 8001a26:	69db      	ldr	r3, [r3, #28]
 8001a28:	b29b      	uxth	r3, r3
 8001a2a:	2201      	movs	r2, #1
 8001a2c:	4619      	mov	r1, r3
 8001a2e:	481c      	ldr	r0, [pc, #112]	@ (8001aa0 <shoot_task_state_1_wait+0x84>)
 8001a30:	f001 fae4 	bl	8002ffc <HAL_GPIO_WritePin>
 8001a34:	687b      	ldr	r3, [r7, #4]
 8001a36:	691b      	ldr	r3, [r3, #16]
 8001a38:	2b00      	cmp	r3, #0
 8001a3a:	d106      	bne.n	8001a4a <shoot_task_state_1_wait+0x2e>
 8001a3c:	687b      	ldr	r3, [r7, #4]
 8001a3e:	699a      	ldr	r2, [r3, #24]
 8001a40:	687b      	ldr	r3, [r7, #4]
 8001a42:	68db      	ldr	r3, [r3, #12]
 8001a44:	681b      	ldr	r3, [r3, #0]
 8001a46:	635a      	str	r2, [r3, #52]	@ 0x34
 8001a48:	e01e      	b.n	8001a88 <shoot_task_state_1_wait+0x6c>
 8001a4a:	687b      	ldr	r3, [r7, #4]
 8001a4c:	691b      	ldr	r3, [r3, #16]
 8001a4e:	2b04      	cmp	r3, #4
 8001a50:	d107      	bne.n	8001a62 <shoot_task_state_1_wait+0x46>
 8001a52:	687b      	ldr	r3, [r7, #4]
 8001a54:	6999      	ldr	r1, [r3, #24]
 8001a56:	687b      	ldr	r3, [r7, #4]
 8001a58:	68db      	ldr	r3, [r3, #12]
 8001a5a:	681a      	ldr	r2, [r3, #0]
 8001a5c:	460b      	mov	r3, r1
 8001a5e:	6393      	str	r3, [r2, #56]	@ 0x38
 8001a60:	e012      	b.n	8001a88 <shoot_task_state_1_wait+0x6c>
 8001a62:	687b      	ldr	r3, [r7, #4]
 8001a64:	691b      	ldr	r3, [r3, #16]
 8001a66:	2b08      	cmp	r3, #8
 8001a68:	d107      	bne.n	8001a7a <shoot_task_state_1_wait+0x5e>
 8001a6a:	687b      	ldr	r3, [r7, #4]
 8001a6c:	6999      	ldr	r1, [r3, #24]
 8001a6e:	687b      	ldr	r3, [r7, #4]
 8001a70:	68db      	ldr	r3, [r3, #12]
 8001a72:	681a      	ldr	r2, [r3, #0]
 8001a74:	460b      	mov	r3, r1
 8001a76:	63d3      	str	r3, [r2, #60]	@ 0x3c
 8001a78:	e006      	b.n	8001a88 <shoot_task_state_1_wait+0x6c>
 8001a7a:	687b      	ldr	r3, [r7, #4]
 8001a7c:	6999      	ldr	r1, [r3, #24]
 8001a7e:	687b      	ldr	r3, [r7, #4]
 8001a80:	68db      	ldr	r3, [r3, #12]
 8001a82:	681a      	ldr	r2, [r3, #0]
 8001a84:	460b      	mov	r3, r1
 8001a86:	6413      	str	r3, [r2, #64]	@ 0x40
 8001a88:	687b      	ldr	r3, [r7, #4]
 8001a8a:	689b      	ldr	r3, [r3, #8]
 8001a8c:	2b01      	cmp	r3, #1
 8001a8e:	d102      	bne.n	8001a96 <shoot_task_state_1_wait+0x7a>
 8001a90:	687b      	ldr	r3, [r7, #4]
 8001a92:	2202      	movs	r2, #2
 8001a94:	601a      	str	r2, [r3, #0]
 8001a96:	bf00      	nop
 8001a98:	3708      	adds	r7, #8
 8001a9a:	46bd      	mov	sp, r7
 8001a9c:	bd80      	pop	{r7, pc}
 8001a9e:	bf00      	nop
 8001aa0:	40020400 	.word	0x40020400

08001aa4 <shoot_task_state_2_unshield>:
 8001aa4:	b480      	push	{r7}
 8001aa6:	b083      	sub	sp, #12
 8001aa8:	af00      	add	r7, sp, #0
 8001aaa:	6078      	str	r0, [r7, #4]
 8001aac:	687b      	ldr	r3, [r7, #4]
 8001aae:	691b      	ldr	r3, [r3, #16]
 8001ab0:	2b00      	cmp	r3, #0
 8001ab2:	d106      	bne.n	8001ac2 <shoot_task_state_2_unshield+0x1e>
 8001ab4:	687b      	ldr	r3, [r7, #4]
 8001ab6:	695a      	ldr	r2, [r3, #20]
 8001ab8:	687b      	ldr	r3, [r7, #4]
 8001aba:	68db      	ldr	r3, [r3, #12]
 8001abc:	681b      	ldr	r3, [r3, #0]
 8001abe:	635a      	str	r2, [r3, #52]	@ 0x34
 8001ac0:	e01e      	b.n	8001b00 <shoot_task_state_2_unshield+0x5c>
 8001ac2:	687b      	ldr	r3, [r7, #4]
 8001ac4:	691b      	ldr	r3, [r3, #16]
 8001ac6:	2b04      	cmp	r3, #4
 8001ac8:	d107      	bne.n	8001ada <shoot_task_state_2_unshield+0x36>
 8001aca:	687b      	ldr	r3, [r7, #4]
 8001acc:	6959      	ldr	r1, [r3, #20]
 8001ace:	687b      	ldr	r3, [r7, #4]
 8001ad0:	68db      	ldr	r3, [r3, #12]
 8001ad2:	681a      	ldr	r2, [r3, #0]
 8001ad4:	460b      	mov	r3, r1
 8001ad6:	6393      	str	r3, [r2, #56]	@ 0x38
 8001ad8:	e012      	b.n	8001b00 <shoot_task_state_2_unshield+0x5c>
 8001ada:	687b      	ldr	r3, [r7, #4]
 8001adc:	691b      	ldr	r3, [r3, #16]
 8001ade:	2b08      	cmp	r3, #8
 8001ae0:	d107      	bne.n	8001af2 <shoot_task_state_2_unshield+0x4e>
 8001ae2:	687b      	ldr	r3, [r7, #4]
 8001ae4:	6959      	ldr	r1, [r3, #20]
 8001ae6:	687b      	ldr	r3, [r7, #4]
 8001ae8:	68db      	ldr	r3, [r3, #12]
 8001aea:	681a      	ldr	r2, [r3, #0]
 8001aec:	460b      	mov	r3, r1
 8001aee:	63d3      	str	r3, [r2, #60]	@ 0x3c
 8001af0:	e006      	b.n	8001b00 <shoot_task_state_2_unshield+0x5c>
 8001af2:	687b      	ldr	r3, [r7, #4]
 8001af4:	6959      	ldr	r1, [r3, #20]
 8001af6:	687b      	ldr	r3, [r7, #4]
 8001af8:	68db      	ldr	r3, [r3, #12]
 8001afa:	681a      	ldr	r2, [r3, #0]
 8001afc:	460b      	mov	r3, r1
 8001afe:	6413      	str	r3, [r2, #64]	@ 0x40
 8001b00:	687b      	ldr	r3, [r7, #4]
 8001b02:	2203      	movs	r2, #3
 8001b04:	601a      	str	r2, [r3, #0]
 8001b06:	687b      	ldr	r3, [r7, #4]
 8001b08:	689b      	ldr	r3, [r3, #8]
 8001b0a:	2b00      	cmp	r3, #0
 8001b0c:	d102      	bne.n	8001b14 <shoot_task_state_2_unshield+0x70>
 8001b0e:	687b      	ldr	r3, [r7, #4]
 8001b10:	2201      	movs	r2, #1
 8001b12:	601a      	str	r2, [r3, #0]
 8001b14:	bf00      	nop
 8001b16:	370c      	adds	r7, #12
 8001b18:	46bd      	mov	sp, r7
 8001b1a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001b1e:	4770      	bx	lr

08001b20 <shoot_task_state_3_shoot>:
 8001b20:	b580      	push	{r7, lr}
 8001b22:	b082      	sub	sp, #8
 8001b24:	af00      	add	r7, sp, #0
 8001b26:	6078      	str	r0, [r7, #4]
 8001b28:	687b      	ldr	r3, [r7, #4]
 8001b2a:	69db      	ldr	r3, [r3, #28]
 8001b2c:	b29b      	uxth	r3, r3
 8001b2e:	2200      	movs	r2, #0
 8001b30:	4619      	mov	r1, r3
 8001b32:	4807      	ldr	r0, [pc, #28]	@ (8001b50 <shoot_task_state_3_shoot+0x30>)
 8001b34:	f001 fa62 	bl	8002ffc <HAL_GPIO_WritePin>
 8001b38:	687b      	ldr	r3, [r7, #4]
 8001b3a:	689b      	ldr	r3, [r3, #8]
 8001b3c:	2b00      	cmp	r3, #0
 8001b3e:	d102      	bne.n	8001b46 <shoot_task_state_3_shoot+0x26>
 8001b40:	687b      	ldr	r3, [r7, #4]
 8001b42:	2201      	movs	r2, #1
 8001b44:	601a      	str	r2, [r3, #0]
 8001b46:	bf00      	nop
 8001b48:	3708      	adds	r7, #8
 8001b4a:	46bd      	mov	sp, r7
 8001b4c:	bd80      	pop	{r7, pc}
 8001b4e:	bf00      	nop
 8001b50:	40020400 	.word	0x40020400

08001b54 <sound_task_state_0_init>:
}


// A function to initialize the task
void sound_task_state_0_init(SoundTask *sound_task)
{
 8001b54:	b480      	push	{r7}
 8001b56:	b083      	sub	sp, #12
 8001b58:	af00      	add	r7, sp, #0
 8001b5a:	6078      	str	r0, [r7, #4]
    //add init stuff

}
 8001b5c:	bf00      	nop
 8001b5e:	370c      	adds	r7, #12
 8001b60:	46bd      	mov	sp, r7
 8001b62:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001b66:	4770      	bx	lr

08001b68 <sound_task_state_1_wait>:

void sound_task_state_1_wait(SoundTask *sound_task)
{
 8001b68:	b480      	push	{r7}
 8001b6a:	b083      	sub	sp, #12
 8001b6c:	af00      	add	r7, sp, #0
 8001b6e:	6078      	str	r0, [r7, #4]
	if (sound_task->laser_snd == 1){
 8001b70:	687b      	ldr	r3, [r7, #4]
 8001b72:	689b      	ldr	r3, [r3, #8]
 8001b74:	2b01      	cmp	r3, #1
 8001b76:	d103      	bne.n	8001b80 <sound_task_state_1_wait+0x18>
		sound_task->state = 2;
 8001b78:	687b      	ldr	r3, [r7, #4]
 8001b7a:	2202      	movs	r2, #2
 8001b7c:	601a      	str	r2, [r3, #0]
	}
	else if(sound_task->start_snd == 1){
		sound_task->state = 5;
	}

}
 8001b7e:	e016      	b.n	8001bae <sound_task_state_1_wait+0x46>
	else if(sound_task->hit_snd == 1){
 8001b80:	687b      	ldr	r3, [r7, #4]
 8001b82:	68db      	ldr	r3, [r3, #12]
 8001b84:	2b01      	cmp	r3, #1
 8001b86:	d103      	bne.n	8001b90 <sound_task_state_1_wait+0x28>
		sound_task->state = 3;
 8001b88:	687b      	ldr	r3, [r7, #4]
 8001b8a:	2203      	movs	r2, #3
 8001b8c:	601a      	str	r2, [r3, #0]
}
 8001b8e:	e00e      	b.n	8001bae <sound_task_state_1_wait+0x46>
	else if(sound_task->win_snd == 1){
 8001b90:	687b      	ldr	r3, [r7, #4]
 8001b92:	695b      	ldr	r3, [r3, #20]
 8001b94:	2b01      	cmp	r3, #1
 8001b96:	d103      	bne.n	8001ba0 <sound_task_state_1_wait+0x38>
		sound_task->state = 4;
 8001b98:	687b      	ldr	r3, [r7, #4]
 8001b9a:	2204      	movs	r2, #4
 8001b9c:	601a      	str	r2, [r3, #0]
}
 8001b9e:	e006      	b.n	8001bae <sound_task_state_1_wait+0x46>
	else if(sound_task->start_snd == 1){
 8001ba0:	687b      	ldr	r3, [r7, #4]
 8001ba2:	691b      	ldr	r3, [r3, #16]
 8001ba4:	2b01      	cmp	r3, #1
 8001ba6:	d102      	bne.n	8001bae <sound_task_state_1_wait+0x46>
		sound_task->state = 5;
 8001ba8:	687b      	ldr	r3, [r7, #4]
 8001baa:	2205      	movs	r2, #5
 8001bac:	601a      	str	r2, [r3, #0]
}
 8001bae:	bf00      	nop
 8001bb0:	370c      	adds	r7, #12
 8001bb2:	46bd      	mov	sp, r7
 8001bb4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001bb8:	4770      	bx	lr

08001bba <sound_task_state_2_laser>:
void sound_task_state_2_laser(SoundTask *sound_task)
{
 8001bba:	b480      	push	{r7}
 8001bbc:	b083      	sub	sp, #12
 8001bbe:	af00      	add	r7, sp, #0
 8001bc0:	6078      	str	r0, [r7, #4]
    // add sound with associated time (nonblocking, like HAL_Get_Ticks or something like that)
	// if sound done then
	// laser_snd_flg = 0;
	// sound_task.state = 1;

}
 8001bc2:	bf00      	nop
 8001bc4:	370c      	adds	r7, #12
 8001bc6:	46bd      	mov	sp, r7
 8001bc8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001bcc:	4770      	bx	lr

08001bce <sound_task_state_3_hit>:
void sound_task_state_3_hit(SoundTask *sound_task)
{
 8001bce:	b480      	push	{r7}
 8001bd0:	b083      	sub	sp, #12
 8001bd2:	af00      	add	r7, sp, #0
 8001bd4:	6078      	str	r0, [r7, #4]


}
 8001bd6:	bf00      	nop
 8001bd8:	370c      	adds	r7, #12
 8001bda:	46bd      	mov	sp, r7
 8001bdc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001be0:	4770      	bx	lr

08001be2 <sound_task_state_4_win>:
void sound_task_state_4_win(SoundTask *sound_task)
{
 8001be2:	b480      	push	{r7}
 8001be4:	b083      	sub	sp, #12
 8001be6:	af00      	add	r7, sp, #0
 8001be8:	6078      	str	r0, [r7, #4]


}
 8001bea:	bf00      	nop
 8001bec:	370c      	adds	r7, #12
 8001bee:	46bd      	mov	sp, r7
 8001bf0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001bf4:	4770      	bx	lr

08001bf6 <sound_task_state_5_start>:

void sound_task_state_5_start(SoundTask *sound_task)
{
 8001bf6:	b480      	push	{r7}
 8001bf8:	b083      	sub	sp, #12
 8001bfa:	af00      	add	r7, sp, #0
 8001bfc:	6078      	str	r0, [r7, #4]


}
 8001bfe:	bf00      	nop
 8001c00:	370c      	adds	r7, #12
 8001c02:	46bd      	mov	sp, r7
 8001c04:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001c08:	4770      	bx	lr
	...

08001c0c <HAL_MspInit>:
 8001c0c:	b480      	push	{r7}
 8001c0e:	b083      	sub	sp, #12
 8001c10:	af00      	add	r7, sp, #0
 8001c12:	2300      	movs	r3, #0
 8001c14:	607b      	str	r3, [r7, #4]
 8001c16:	4b10      	ldr	r3, [pc, #64]	@ (8001c58 <HAL_MspInit+0x4c>)
 8001c18:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001c1a:	4a0f      	ldr	r2, [pc, #60]	@ (8001c58 <HAL_MspInit+0x4c>)
 8001c1c:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8001c20:	6453      	str	r3, [r2, #68]	@ 0x44
 8001c22:	4b0d      	ldr	r3, [pc, #52]	@ (8001c58 <HAL_MspInit+0x4c>)
 8001c24:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001c26:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8001c2a:	607b      	str	r3, [r7, #4]
 8001c2c:	687b      	ldr	r3, [r7, #4]
 8001c2e:	2300      	movs	r3, #0
 8001c30:	603b      	str	r3, [r7, #0]
 8001c32:	4b09      	ldr	r3, [pc, #36]	@ (8001c58 <HAL_MspInit+0x4c>)
 8001c34:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001c36:	4a08      	ldr	r2, [pc, #32]	@ (8001c58 <HAL_MspInit+0x4c>)
 8001c38:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8001c3c:	6413      	str	r3, [r2, #64]	@ 0x40
 8001c3e:	4b06      	ldr	r3, [pc, #24]	@ (8001c58 <HAL_MspInit+0x4c>)
 8001c40:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001c42:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8001c46:	603b      	str	r3, [r7, #0]
 8001c48:	683b      	ldr	r3, [r7, #0]
 8001c4a:	bf00      	nop
 8001c4c:	370c      	adds	r7, #12
 8001c4e:	46bd      	mov	sp, r7
 8001c50:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001c54:	4770      	bx	lr
 8001c56:	bf00      	nop
 8001c58:	40023800 	.word	0x40023800

08001c5c <HAL_ADC_MspInit>:
 8001c5c:	b580      	push	{r7, lr}
 8001c5e:	b08a      	sub	sp, #40	@ 0x28
 8001c60:	af00      	add	r7, sp, #0
 8001c62:	6078      	str	r0, [r7, #4]
 8001c64:	f107 0314 	add.w	r3, r7, #20
 8001c68:	2200      	movs	r2, #0
 8001c6a:	601a      	str	r2, [r3, #0]
 8001c6c:	605a      	str	r2, [r3, #4]
 8001c6e:	609a      	str	r2, [r3, #8]
 8001c70:	60da      	str	r2, [r3, #12]
 8001c72:	611a      	str	r2, [r3, #16]
 8001c74:	687b      	ldr	r3, [r7, #4]
 8001c76:	681b      	ldr	r3, [r3, #0]
 8001c78:	4a17      	ldr	r2, [pc, #92]	@ (8001cd8 <HAL_ADC_MspInit+0x7c>)
 8001c7a:	4293      	cmp	r3, r2
 8001c7c:	d127      	bne.n	8001cce <HAL_ADC_MspInit+0x72>
 8001c7e:	2300      	movs	r3, #0
 8001c80:	613b      	str	r3, [r7, #16]
 8001c82:	4b16      	ldr	r3, [pc, #88]	@ (8001cdc <HAL_ADC_MspInit+0x80>)
 8001c84:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001c86:	4a15      	ldr	r2, [pc, #84]	@ (8001cdc <HAL_ADC_MspInit+0x80>)
 8001c88:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8001c8c:	6453      	str	r3, [r2, #68]	@ 0x44
 8001c8e:	4b13      	ldr	r3, [pc, #76]	@ (8001cdc <HAL_ADC_MspInit+0x80>)
 8001c90:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001c92:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8001c96:	613b      	str	r3, [r7, #16]
 8001c98:	693b      	ldr	r3, [r7, #16]
 8001c9a:	2300      	movs	r3, #0
 8001c9c:	60fb      	str	r3, [r7, #12]
 8001c9e:	4b0f      	ldr	r3, [pc, #60]	@ (8001cdc <HAL_ADC_MspInit+0x80>)
 8001ca0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001ca2:	4a0e      	ldr	r2, [pc, #56]	@ (8001cdc <HAL_ADC_MspInit+0x80>)
 8001ca4:	f043 0301 	orr.w	r3, r3, #1
 8001ca8:	6313      	str	r3, [r2, #48]	@ 0x30
 8001caa:	4b0c      	ldr	r3, [pc, #48]	@ (8001cdc <HAL_ADC_MspInit+0x80>)
 8001cac:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001cae:	f003 0301 	and.w	r3, r3, #1
 8001cb2:	60fb      	str	r3, [r7, #12]
 8001cb4:	68fb      	ldr	r3, [r7, #12]
 8001cb6:	23c0      	movs	r3, #192	@ 0xc0
 8001cb8:	617b      	str	r3, [r7, #20]
 8001cba:	2303      	movs	r3, #3
 8001cbc:	61bb      	str	r3, [r7, #24]
 8001cbe:	2300      	movs	r3, #0
 8001cc0:	61fb      	str	r3, [r7, #28]
 8001cc2:	f107 0314 	add.w	r3, r7, #20
 8001cc6:	4619      	mov	r1, r3
 8001cc8:	4805      	ldr	r0, [pc, #20]	@ (8001ce0 <HAL_ADC_MspInit+0x84>)
 8001cca:	f000 fffb 	bl	8002cc4 <HAL_GPIO_Init>
 8001cce:	bf00      	nop
 8001cd0:	3728      	adds	r7, #40	@ 0x28
 8001cd2:	46bd      	mov	sp, r7
 8001cd4:	bd80      	pop	{r7, pc}
 8001cd6:	bf00      	nop
 8001cd8:	40012000 	.word	0x40012000
 8001cdc:	40023800 	.word	0x40023800
 8001ce0:	40020000 	.word	0x40020000

08001ce4 <HAL_I2C_MspInit>:
 8001ce4:	b580      	push	{r7, lr}
 8001ce6:	b08a      	sub	sp, #40	@ 0x28
 8001ce8:	af00      	add	r7, sp, #0
 8001cea:	6078      	str	r0, [r7, #4]
 8001cec:	f107 0314 	add.w	r3, r7, #20
 8001cf0:	2200      	movs	r2, #0
 8001cf2:	601a      	str	r2, [r3, #0]
 8001cf4:	605a      	str	r2, [r3, #4]
 8001cf6:	609a      	str	r2, [r3, #8]
 8001cf8:	60da      	str	r2, [r3, #12]
 8001cfa:	611a      	str	r2, [r3, #16]
 8001cfc:	687b      	ldr	r3, [r7, #4]
 8001cfe:	681b      	ldr	r3, [r3, #0]
 8001d00:	4a19      	ldr	r2, [pc, #100]	@ (8001d68 <HAL_I2C_MspInit+0x84>)
 8001d02:	4293      	cmp	r3, r2
 8001d04:	d12c      	bne.n	8001d60 <HAL_I2C_MspInit+0x7c>
 8001d06:	2300      	movs	r3, #0
 8001d08:	613b      	str	r3, [r7, #16]
 8001d0a:	4b18      	ldr	r3, [pc, #96]	@ (8001d6c <HAL_I2C_MspInit+0x88>)
 8001d0c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001d0e:	4a17      	ldr	r2, [pc, #92]	@ (8001d6c <HAL_I2C_MspInit+0x88>)
 8001d10:	f043 0302 	orr.w	r3, r3, #2
 8001d14:	6313      	str	r3, [r2, #48]	@ 0x30
 8001d16:	4b15      	ldr	r3, [pc, #84]	@ (8001d6c <HAL_I2C_MspInit+0x88>)
 8001d18:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001d1a:	f003 0302 	and.w	r3, r3, #2
 8001d1e:	613b      	str	r3, [r7, #16]
 8001d20:	693b      	ldr	r3, [r7, #16]
 8001d22:	f44f 7340 	mov.w	r3, #768	@ 0x300
 8001d26:	617b      	str	r3, [r7, #20]
 8001d28:	2312      	movs	r3, #18
 8001d2a:	61bb      	str	r3, [r7, #24]
 8001d2c:	2300      	movs	r3, #0
 8001d2e:	61fb      	str	r3, [r7, #28]
 8001d30:	2303      	movs	r3, #3
 8001d32:	623b      	str	r3, [r7, #32]
 8001d34:	2304      	movs	r3, #4
 8001d36:	627b      	str	r3, [r7, #36]	@ 0x24
 8001d38:	f107 0314 	add.w	r3, r7, #20
 8001d3c:	4619      	mov	r1, r3
 8001d3e:	480c      	ldr	r0, [pc, #48]	@ (8001d70 <HAL_I2C_MspInit+0x8c>)
 8001d40:	f000 ffc0 	bl	8002cc4 <HAL_GPIO_Init>
 8001d44:	2300      	movs	r3, #0
 8001d46:	60fb      	str	r3, [r7, #12]
 8001d48:	4b08      	ldr	r3, [pc, #32]	@ (8001d6c <HAL_I2C_MspInit+0x88>)
 8001d4a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001d4c:	4a07      	ldr	r2, [pc, #28]	@ (8001d6c <HAL_I2C_MspInit+0x88>)
 8001d4e:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 8001d52:	6413      	str	r3, [r2, #64]	@ 0x40
 8001d54:	4b05      	ldr	r3, [pc, #20]	@ (8001d6c <HAL_I2C_MspInit+0x88>)
 8001d56:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001d58:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8001d5c:	60fb      	str	r3, [r7, #12]
 8001d5e:	68fb      	ldr	r3, [r7, #12]
 8001d60:	bf00      	nop
 8001d62:	3728      	adds	r7, #40	@ 0x28
 8001d64:	46bd      	mov	sp, r7
 8001d66:	bd80      	pop	{r7, pc}
 8001d68:	40005400 	.word	0x40005400
 8001d6c:	40023800 	.word	0x40023800
 8001d70:	40020400 	.word	0x40020400

08001d74 <HAL_TIM_PWM_MspInit>:
 8001d74:	b480      	push	{r7}
 8001d76:	b087      	sub	sp, #28
 8001d78:	af00      	add	r7, sp, #0
 8001d7a:	6078      	str	r0, [r7, #4]
 8001d7c:	687b      	ldr	r3, [r7, #4]
 8001d7e:	681b      	ldr	r3, [r3, #0]
 8001d80:	4a1f      	ldr	r2, [pc, #124]	@ (8001e00 <HAL_TIM_PWM_MspInit+0x8c>)
 8001d82:	4293      	cmp	r3, r2
 8001d84:	d10e      	bne.n	8001da4 <HAL_TIM_PWM_MspInit+0x30>
 8001d86:	2300      	movs	r3, #0
 8001d88:	617b      	str	r3, [r7, #20]
 8001d8a:	4b1e      	ldr	r3, [pc, #120]	@ (8001e04 <HAL_TIM_PWM_MspInit+0x90>)
 8001d8c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001d8e:	4a1d      	ldr	r2, [pc, #116]	@ (8001e04 <HAL_TIM_PWM_MspInit+0x90>)
 8001d90:	f043 0301 	orr.w	r3, r3, #1
 8001d94:	6453      	str	r3, [r2, #68]	@ 0x44
 8001d96:	4b1b      	ldr	r3, [pc, #108]	@ (8001e04 <HAL_TIM_PWM_MspInit+0x90>)
 8001d98:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001d9a:	f003 0301 	and.w	r3, r3, #1
 8001d9e:	617b      	str	r3, [r7, #20]
 8001da0:	697b      	ldr	r3, [r7, #20]
 8001da2:	e026      	b.n	8001df2 <HAL_TIM_PWM_MspInit+0x7e>
 8001da4:	687b      	ldr	r3, [r7, #4]
 8001da6:	681b      	ldr	r3, [r3, #0]
 8001da8:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8001dac:	d10e      	bne.n	8001dcc <HAL_TIM_PWM_MspInit+0x58>
 8001dae:	2300      	movs	r3, #0
 8001db0:	613b      	str	r3, [r7, #16]
 8001db2:	4b14      	ldr	r3, [pc, #80]	@ (8001e04 <HAL_TIM_PWM_MspInit+0x90>)
 8001db4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001db6:	4a13      	ldr	r2, [pc, #76]	@ (8001e04 <HAL_TIM_PWM_MspInit+0x90>)
 8001db8:	f043 0301 	orr.w	r3, r3, #1
 8001dbc:	6413      	str	r3, [r2, #64]	@ 0x40
 8001dbe:	4b11      	ldr	r3, [pc, #68]	@ (8001e04 <HAL_TIM_PWM_MspInit+0x90>)
 8001dc0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001dc2:	f003 0301 	and.w	r3, r3, #1
 8001dc6:	613b      	str	r3, [r7, #16]
 8001dc8:	693b      	ldr	r3, [r7, #16]
 8001dca:	e012      	b.n	8001df2 <HAL_TIM_PWM_MspInit+0x7e>
 8001dcc:	687b      	ldr	r3, [r7, #4]
 8001dce:	681b      	ldr	r3, [r3, #0]
 8001dd0:	4a0d      	ldr	r2, [pc, #52]	@ (8001e08 <HAL_TIM_PWM_MspInit+0x94>)
 8001dd2:	4293      	cmp	r3, r2
 8001dd4:	d10d      	bne.n	8001df2 <HAL_TIM_PWM_MspInit+0x7e>
 8001dd6:	2300      	movs	r3, #0
 8001dd8:	60fb      	str	r3, [r7, #12]
 8001dda:	4b0a      	ldr	r3, [pc, #40]	@ (8001e04 <HAL_TIM_PWM_MspInit+0x90>)
 8001ddc:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001dde:	4a09      	ldr	r2, [pc, #36]	@ (8001e04 <HAL_TIM_PWM_MspInit+0x90>)
 8001de0:	f043 0304 	orr.w	r3, r3, #4
 8001de4:	6413      	str	r3, [r2, #64]	@ 0x40
 8001de6:	4b07      	ldr	r3, [pc, #28]	@ (8001e04 <HAL_TIM_PWM_MspInit+0x90>)
 8001de8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001dea:	f003 0304 	and.w	r3, r3, #4
 8001dee:	60fb      	str	r3, [r7, #12]
 8001df0:	68fb      	ldr	r3, [r7, #12]
 8001df2:	bf00      	nop
 8001df4:	371c      	adds	r7, #28
 8001df6:	46bd      	mov	sp, r7
 8001df8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001dfc:	4770      	bx	lr
 8001dfe:	bf00      	nop
 8001e00:	40010000 	.word	0x40010000
 8001e04:	40023800 	.word	0x40023800
 8001e08:	40000800 	.word	0x40000800

08001e0c <HAL_TIM_Encoder_MspInit>:
 8001e0c:	b580      	push	{r7, lr}
 8001e0e:	b08c      	sub	sp, #48	@ 0x30
 8001e10:	af00      	add	r7, sp, #0
 8001e12:	6078      	str	r0, [r7, #4]
 8001e14:	f107 031c 	add.w	r3, r7, #28
 8001e18:	2200      	movs	r2, #0
 8001e1a:	601a      	str	r2, [r3, #0]
 8001e1c:	605a      	str	r2, [r3, #4]
 8001e1e:	609a      	str	r2, [r3, #8]
 8001e20:	60da      	str	r2, [r3, #12]
 8001e22:	611a      	str	r2, [r3, #16]
 8001e24:	687b      	ldr	r3, [r7, #4]
 8001e26:	681b      	ldr	r3, [r3, #0]
 8001e28:	4a32      	ldr	r2, [pc, #200]	@ (8001ef4 <HAL_TIM_Encoder_MspInit+0xe8>)
 8001e2a:	4293      	cmp	r3, r2
 8001e2c:	d12c      	bne.n	8001e88 <HAL_TIM_Encoder_MspInit+0x7c>
 8001e2e:	2300      	movs	r3, #0
 8001e30:	61bb      	str	r3, [r7, #24]
 8001e32:	4b31      	ldr	r3, [pc, #196]	@ (8001ef8 <HAL_TIM_Encoder_MspInit+0xec>)
 8001e34:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001e36:	4a30      	ldr	r2, [pc, #192]	@ (8001ef8 <HAL_TIM_Encoder_MspInit+0xec>)
 8001e38:	f043 0302 	orr.w	r3, r3, #2
 8001e3c:	6413      	str	r3, [r2, #64]	@ 0x40
 8001e3e:	4b2e      	ldr	r3, [pc, #184]	@ (8001ef8 <HAL_TIM_Encoder_MspInit+0xec>)
 8001e40:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001e42:	f003 0302 	and.w	r3, r3, #2
 8001e46:	61bb      	str	r3, [r7, #24]
 8001e48:	69bb      	ldr	r3, [r7, #24]
 8001e4a:	2300      	movs	r3, #0
 8001e4c:	617b      	str	r3, [r7, #20]
 8001e4e:	4b2a      	ldr	r3, [pc, #168]	@ (8001ef8 <HAL_TIM_Encoder_MspInit+0xec>)
 8001e50:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001e52:	4a29      	ldr	r2, [pc, #164]	@ (8001ef8 <HAL_TIM_Encoder_MspInit+0xec>)
 8001e54:	f043 0302 	orr.w	r3, r3, #2
 8001e58:	6313      	str	r3, [r2, #48]	@ 0x30
 8001e5a:	4b27      	ldr	r3, [pc, #156]	@ (8001ef8 <HAL_TIM_Encoder_MspInit+0xec>)
 8001e5c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001e5e:	f003 0302 	and.w	r3, r3, #2
 8001e62:	617b      	str	r3, [r7, #20]
 8001e64:	697b      	ldr	r3, [r7, #20]
 8001e66:	2330      	movs	r3, #48	@ 0x30
 8001e68:	61fb      	str	r3, [r7, #28]
 8001e6a:	2302      	movs	r3, #2
 8001e6c:	623b      	str	r3, [r7, #32]
 8001e6e:	2300      	movs	r3, #0
 8001e70:	627b      	str	r3, [r7, #36]	@ 0x24
 8001e72:	2300      	movs	r3, #0
 8001e74:	62bb      	str	r3, [r7, #40]	@ 0x28
 8001e76:	2302      	movs	r3, #2
 8001e78:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8001e7a:	f107 031c 	add.w	r3, r7, #28
 8001e7e:	4619      	mov	r1, r3
 8001e80:	481e      	ldr	r0, [pc, #120]	@ (8001efc <HAL_TIM_Encoder_MspInit+0xf0>)
 8001e82:	f000 ff1f 	bl	8002cc4 <HAL_GPIO_Init>
 8001e86:	e030      	b.n	8001eea <HAL_TIM_Encoder_MspInit+0xde>
 8001e88:	687b      	ldr	r3, [r7, #4]
 8001e8a:	681b      	ldr	r3, [r3, #0]
 8001e8c:	4a1c      	ldr	r2, [pc, #112]	@ (8001f00 <HAL_TIM_Encoder_MspInit+0xf4>)
 8001e8e:	4293      	cmp	r3, r2
 8001e90:	d12b      	bne.n	8001eea <HAL_TIM_Encoder_MspInit+0xde>
 8001e92:	2300      	movs	r3, #0
 8001e94:	613b      	str	r3, [r7, #16]
 8001e96:	4b18      	ldr	r3, [pc, #96]	@ (8001ef8 <HAL_TIM_Encoder_MspInit+0xec>)
 8001e98:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001e9a:	4a17      	ldr	r2, [pc, #92]	@ (8001ef8 <HAL_TIM_Encoder_MspInit+0xec>)
 8001e9c:	f043 0308 	orr.w	r3, r3, #8
 8001ea0:	6413      	str	r3, [r2, #64]	@ 0x40
 8001ea2:	4b15      	ldr	r3, [pc, #84]	@ (8001ef8 <HAL_TIM_Encoder_MspInit+0xec>)
 8001ea4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001ea6:	f003 0308 	and.w	r3, r3, #8
 8001eaa:	613b      	str	r3, [r7, #16]
 8001eac:	693b      	ldr	r3, [r7, #16]
 8001eae:	2300      	movs	r3, #0
 8001eb0:	60fb      	str	r3, [r7, #12]
 8001eb2:	4b11      	ldr	r3, [pc, #68]	@ (8001ef8 <HAL_TIM_Encoder_MspInit+0xec>)
 8001eb4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001eb6:	4a10      	ldr	r2, [pc, #64]	@ (8001ef8 <HAL_TIM_Encoder_MspInit+0xec>)
 8001eb8:	f043 0301 	orr.w	r3, r3, #1
 8001ebc:	6313      	str	r3, [r2, #48]	@ 0x30
 8001ebe:	4b0e      	ldr	r3, [pc, #56]	@ (8001ef8 <HAL_TIM_Encoder_MspInit+0xec>)
 8001ec0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001ec2:	f003 0301 	and.w	r3, r3, #1
 8001ec6:	60fb      	str	r3, [r7, #12]
 8001ec8:	68fb      	ldr	r3, [r7, #12]
 8001eca:	2303      	movs	r3, #3
 8001ecc:	61fb      	str	r3, [r7, #28]
 8001ece:	2302      	movs	r3, #2
 8001ed0:	623b      	str	r3, [r7, #32]
 8001ed2:	2300      	movs	r3, #0
 8001ed4:	627b      	str	r3, [r7, #36]	@ 0x24
 8001ed6:	2300      	movs	r3, #0
 8001ed8:	62bb      	str	r3, [r7, #40]	@ 0x28
 8001eda:	2302      	movs	r3, #2
 8001edc:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8001ede:	f107 031c 	add.w	r3, r7, #28
 8001ee2:	4619      	mov	r1, r3
 8001ee4:	4807      	ldr	r0, [pc, #28]	@ (8001f04 <HAL_TIM_Encoder_MspInit+0xf8>)
 8001ee6:	f000 feed 	bl	8002cc4 <HAL_GPIO_Init>
 8001eea:	bf00      	nop
 8001eec:	3730      	adds	r7, #48	@ 0x30
 8001eee:	46bd      	mov	sp, r7
 8001ef0:	bd80      	pop	{r7, pc}
 8001ef2:	bf00      	nop
 8001ef4:	40000400 	.word	0x40000400
 8001ef8:	40023800 	.word	0x40023800
 8001efc:	40020400 	.word	0x40020400
 8001f00:	40000c00 	.word	0x40000c00
 8001f04:	40020000 	.word	0x40020000

08001f08 <HAL_TIM_MspPostInit>:
 8001f08:	b580      	push	{r7, lr}
 8001f0a:	b08a      	sub	sp, #40	@ 0x28
 8001f0c:	af00      	add	r7, sp, #0
 8001f0e:	6078      	str	r0, [r7, #4]
 8001f10:	f107 0314 	add.w	r3, r7, #20
 8001f14:	2200      	movs	r2, #0
 8001f16:	601a      	str	r2, [r3, #0]
 8001f18:	605a      	str	r2, [r3, #4]
 8001f1a:	609a      	str	r2, [r3, #8]
 8001f1c:	60da      	str	r2, [r3, #12]
 8001f1e:	611a      	str	r2, [r3, #16]
 8001f20:	687b      	ldr	r3, [r7, #4]
 8001f22:	681b      	ldr	r3, [r3, #0]
 8001f24:	4a37      	ldr	r2, [pc, #220]	@ (8002004 <HAL_TIM_MspPostInit+0xfc>)
 8001f26:	4293      	cmp	r3, r2
 8001f28:	d11f      	bne.n	8001f6a <HAL_TIM_MspPostInit+0x62>
 8001f2a:	2300      	movs	r3, #0
 8001f2c:	613b      	str	r3, [r7, #16]
 8001f2e:	4b36      	ldr	r3, [pc, #216]	@ (8002008 <HAL_TIM_MspPostInit+0x100>)
 8001f30:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001f32:	4a35      	ldr	r2, [pc, #212]	@ (8002008 <HAL_TIM_MspPostInit+0x100>)
 8001f34:	f043 0301 	orr.w	r3, r3, #1
 8001f38:	6313      	str	r3, [r2, #48]	@ 0x30
 8001f3a:	4b33      	ldr	r3, [pc, #204]	@ (8002008 <HAL_TIM_MspPostInit+0x100>)
 8001f3c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001f3e:	f003 0301 	and.w	r3, r3, #1
 8001f42:	613b      	str	r3, [r7, #16]
 8001f44:	693b      	ldr	r3, [r7, #16]
 8001f46:	f44f 6370 	mov.w	r3, #3840	@ 0xf00
 8001f4a:	617b      	str	r3, [r7, #20]
 8001f4c:	2302      	movs	r3, #2
 8001f4e:	61bb      	str	r3, [r7, #24]
 8001f50:	2300      	movs	r3, #0
 8001f52:	61fb      	str	r3, [r7, #28]
 8001f54:	2300      	movs	r3, #0
 8001f56:	623b      	str	r3, [r7, #32]
 8001f58:	2301      	movs	r3, #1
 8001f5a:	627b      	str	r3, [r7, #36]	@ 0x24
 8001f5c:	f107 0314 	add.w	r3, r7, #20
 8001f60:	4619      	mov	r1, r3
 8001f62:	482a      	ldr	r0, [pc, #168]	@ (800200c <HAL_TIM_MspPostInit+0x104>)
 8001f64:	f000 feae 	bl	8002cc4 <HAL_GPIO_Init>
 8001f68:	e047      	b.n	8001ffa <HAL_TIM_MspPostInit+0xf2>
 8001f6a:	687b      	ldr	r3, [r7, #4]
 8001f6c:	681b      	ldr	r3, [r3, #0]
 8001f6e:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8001f72:	d11f      	bne.n	8001fb4 <HAL_TIM_MspPostInit+0xac>
 8001f74:	2300      	movs	r3, #0
 8001f76:	60fb      	str	r3, [r7, #12]
 8001f78:	4b23      	ldr	r3, [pc, #140]	@ (8002008 <HAL_TIM_MspPostInit+0x100>)
 8001f7a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001f7c:	4a22      	ldr	r2, [pc, #136]	@ (8002008 <HAL_TIM_MspPostInit+0x100>)
 8001f7e:	f043 0301 	orr.w	r3, r3, #1
 8001f82:	6313      	str	r3, [r2, #48]	@ 0x30
 8001f84:	4b20      	ldr	r3, [pc, #128]	@ (8002008 <HAL_TIM_MspPostInit+0x100>)
 8001f86:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001f88:	f003 0301 	and.w	r3, r3, #1
 8001f8c:	60fb      	str	r3, [r7, #12]
 8001f8e:	68fb      	ldr	r3, [r7, #12]
 8001f90:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 8001f94:	617b      	str	r3, [r7, #20]
 8001f96:	2302      	movs	r3, #2
 8001f98:	61bb      	str	r3, [r7, #24]
 8001f9a:	2300      	movs	r3, #0
 8001f9c:	61fb      	str	r3, [r7, #28]
 8001f9e:	2300      	movs	r3, #0
 8001fa0:	623b      	str	r3, [r7, #32]
 8001fa2:	2301      	movs	r3, #1
 8001fa4:	627b      	str	r3, [r7, #36]	@ 0x24
 8001fa6:	f107 0314 	add.w	r3, r7, #20
 8001faa:	4619      	mov	r1, r3
 8001fac:	4817      	ldr	r0, [pc, #92]	@ (800200c <HAL_TIM_MspPostInit+0x104>)
 8001fae:	f000 fe89 	bl	8002cc4 <HAL_GPIO_Init>
 8001fb2:	e022      	b.n	8001ffa <HAL_TIM_MspPostInit+0xf2>
 8001fb4:	687b      	ldr	r3, [r7, #4]
 8001fb6:	681b      	ldr	r3, [r3, #0]
 8001fb8:	4a15      	ldr	r2, [pc, #84]	@ (8002010 <HAL_TIM_MspPostInit+0x108>)
 8001fba:	4293      	cmp	r3, r2
 8001fbc:	d11d      	bne.n	8001ffa <HAL_TIM_MspPostInit+0xf2>
 8001fbe:	2300      	movs	r3, #0
 8001fc0:	60bb      	str	r3, [r7, #8]
 8001fc2:	4b11      	ldr	r3, [pc, #68]	@ (8002008 <HAL_TIM_MspPostInit+0x100>)
 8001fc4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001fc6:	4a10      	ldr	r2, [pc, #64]	@ (8002008 <HAL_TIM_MspPostInit+0x100>)
 8001fc8:	f043 0302 	orr.w	r3, r3, #2
 8001fcc:	6313      	str	r3, [r2, #48]	@ 0x30
 8001fce:	4b0e      	ldr	r3, [pc, #56]	@ (8002008 <HAL_TIM_MspPostInit+0x100>)
 8001fd0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001fd2:	f003 0302 	and.w	r3, r3, #2
 8001fd6:	60bb      	str	r3, [r7, #8]
 8001fd8:	68bb      	ldr	r3, [r7, #8]
 8001fda:	23c0      	movs	r3, #192	@ 0xc0
 8001fdc:	617b      	str	r3, [r7, #20]
 8001fde:	2302      	movs	r3, #2
 8001fe0:	61bb      	str	r3, [r7, #24]
 8001fe2:	2300      	movs	r3, #0
 8001fe4:	61fb      	str	r3, [r7, #28]
 8001fe6:	2300      	movs	r3, #0
 8001fe8:	623b      	str	r3, [r7, #32]
 8001fea:	2302      	movs	r3, #2
 8001fec:	627b      	str	r3, [r7, #36]	@ 0x24
 8001fee:	f107 0314 	add.w	r3, r7, #20
 8001ff2:	4619      	mov	r1, r3
 8001ff4:	4807      	ldr	r0, [pc, #28]	@ (8002014 <HAL_TIM_MspPostInit+0x10c>)
 8001ff6:	f000 fe65 	bl	8002cc4 <HAL_GPIO_Init>
 8001ffa:	bf00      	nop
 8001ffc:	3728      	adds	r7, #40	@ 0x28
 8001ffe:	46bd      	mov	sp, r7
 8002000:	bd80      	pop	{r7, pc}
 8002002:	bf00      	nop
 8002004:	40010000 	.word	0x40010000
 8002008:	40023800 	.word	0x40023800
 800200c:	40020000 	.word	0x40020000
 8002010:	40000800 	.word	0x40000800
 8002014:	40020400 	.word	0x40020400

08002018 <NMI_Handler>:
 8002018:	b480      	push	{r7}
 800201a:	af00      	add	r7, sp, #0
 800201c:	bf00      	nop
 800201e:	e7fd      	b.n	800201c <NMI_Handler+0x4>

08002020 <HardFault_Handler>:
 8002020:	b480      	push	{r7}
 8002022:	af00      	add	r7, sp, #0
 8002024:	bf00      	nop
 8002026:	e7fd      	b.n	8002024 <HardFault_Handler+0x4>

08002028 <MemManage_Handler>:
 8002028:	b480      	push	{r7}
 800202a:	af00      	add	r7, sp, #0
 800202c:	bf00      	nop
 800202e:	e7fd      	b.n	800202c <MemManage_Handler+0x4>

08002030 <BusFault_Handler>:
 8002030:	b480      	push	{r7}
 8002032:	af00      	add	r7, sp, #0
 8002034:	bf00      	nop
 8002036:	e7fd      	b.n	8002034 <BusFault_Handler+0x4>

08002038 <UsageFault_Handler>:
 8002038:	b480      	push	{r7}
 800203a:	af00      	add	r7, sp, #0
 800203c:	bf00      	nop
 800203e:	e7fd      	b.n	800203c <UsageFault_Handler+0x4>

08002040 <SVC_Handler>:
 8002040:	b480      	push	{r7}
 8002042:	af00      	add	r7, sp, #0
 8002044:	bf00      	nop
 8002046:	46bd      	mov	sp, r7
 8002048:	f85d 7b04 	ldr.w	r7, [sp], #4
 800204c:	4770      	bx	lr

0800204e <DebugMon_Handler>:
 800204e:	b480      	push	{r7}
 8002050:	af00      	add	r7, sp, #0
 8002052:	bf00      	nop
 8002054:	46bd      	mov	sp, r7
 8002056:	f85d 7b04 	ldr.w	r7, [sp], #4
 800205a:	4770      	bx	lr

0800205c <PendSV_Handler>:
 800205c:	b480      	push	{r7}
 800205e:	af00      	add	r7, sp, #0
 8002060:	bf00      	nop
 8002062:	46bd      	mov	sp, r7
 8002064:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002068:	4770      	bx	lr

0800206a <SysTick_Handler>:
 800206a:	b580      	push	{r7, lr}
 800206c:	af00      	add	r7, sp, #0
 800206e:	f000 f8e1 	bl	8002234 <HAL_IncTick>
 8002072:	bf00      	nop
 8002074:	bd80      	pop	{r7, pc}

08002076 <EXTI4_IRQHandler>:
 8002076:	b580      	push	{r7, lr}
 8002078:	af00      	add	r7, sp, #0
 800207a:	2010      	movs	r0, #16
 800207c:	f000 ffd8 	bl	8003030 <HAL_GPIO_EXTI_IRQHandler>
 8002080:	bf00      	nop
 8002082:	bd80      	pop	{r7, pc}

08002084 <EXTI9_5_IRQHandler>:
 8002084:	b580      	push	{r7, lr}
 8002086:	af00      	add	r7, sp, #0
 8002088:	2020      	movs	r0, #32
 800208a:	f000 ffd1 	bl	8003030 <HAL_GPIO_EXTI_IRQHandler>
 800208e:	bf00      	nop
 8002090:	bd80      	pop	{r7, pc}

08002092 <EXTI15_10_IRQHandler>:
 8002092:	b580      	push	{r7, lr}
 8002094:	af00      	add	r7, sp, #0
 8002096:	f44f 5080 	mov.w	r0, #4096	@ 0x1000
 800209a:	f000 ffc9 	bl	8003030 <HAL_GPIO_EXTI_IRQHandler>
 800209e:	f44f 5000 	mov.w	r0, #8192	@ 0x2000
 80020a2:	f000 ffc5 	bl	8003030 <HAL_GPIO_EXTI_IRQHandler>
 80020a6:	bf00      	nop
 80020a8:	bd80      	pop	{r7, pc}
	...

080020ac <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80020ac:	b580      	push	{r7, lr}
 80020ae:	b086      	sub	sp, #24
 80020b0:	af00      	add	r7, sp, #0
 80020b2:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80020b4:	4a14      	ldr	r2, [pc, #80]	@ (8002108 <_sbrk+0x5c>)
 80020b6:	4b15      	ldr	r3, [pc, #84]	@ (800210c <_sbrk+0x60>)
 80020b8:	1ad3      	subs	r3, r2, r3
 80020ba:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80020bc:	697b      	ldr	r3, [r7, #20]
 80020be:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80020c0:	4b13      	ldr	r3, [pc, #76]	@ (8002110 <_sbrk+0x64>)
 80020c2:	681b      	ldr	r3, [r3, #0]
 80020c4:	2b00      	cmp	r3, #0
 80020c6:	d102      	bne.n	80020ce <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80020c8:	4b11      	ldr	r3, [pc, #68]	@ (8002110 <_sbrk+0x64>)
 80020ca:	4a12      	ldr	r2, [pc, #72]	@ (8002114 <_sbrk+0x68>)
 80020cc:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80020ce:	4b10      	ldr	r3, [pc, #64]	@ (8002110 <_sbrk+0x64>)
 80020d0:	681a      	ldr	r2, [r3, #0]
 80020d2:	687b      	ldr	r3, [r7, #4]
 80020d4:	4413      	add	r3, r2
 80020d6:	693a      	ldr	r2, [r7, #16]
 80020d8:	429a      	cmp	r2, r3
 80020da:	d207      	bcs.n	80020ec <_sbrk+0x40>
  {
    errno = ENOMEM;
 80020dc:	f002 ff62 	bl	8004fa4 <__errno>
 80020e0:	4603      	mov	r3, r0
 80020e2:	220c      	movs	r2, #12
 80020e4:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 80020e6:	f04f 33ff 	mov.w	r3, #4294967295
 80020ea:	e009      	b.n	8002100 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 80020ec:	4b08      	ldr	r3, [pc, #32]	@ (8002110 <_sbrk+0x64>)
 80020ee:	681b      	ldr	r3, [r3, #0]
 80020f0:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 80020f2:	4b07      	ldr	r3, [pc, #28]	@ (8002110 <_sbrk+0x64>)
 80020f4:	681a      	ldr	r2, [r3, #0]
 80020f6:	687b      	ldr	r3, [r7, #4]
 80020f8:	4413      	add	r3, r2
 80020fa:	4a05      	ldr	r2, [pc, #20]	@ (8002110 <_sbrk+0x64>)
 80020fc:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 80020fe:	68fb      	ldr	r3, [r7, #12]
}
 8002100:	4618      	mov	r0, r3
 8002102:	3718      	adds	r7, #24
 8002104:	46bd      	mov	sp, r7
 8002106:	bd80      	pop	{r7, pc}
 8002108:	20020000 	.word	0x20020000
 800210c:	00000400 	.word	0x00000400
 8002110:	2000047c 	.word	0x2000047c
 8002114:	200005d0 	.word	0x200005d0

08002118 <SystemInit>:
 8002118:	b480      	push	{r7}
 800211a:	af00      	add	r7, sp, #0
 800211c:	4b06      	ldr	r3, [pc, #24]	@ (8002138 <SystemInit+0x20>)
 800211e:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8002122:	4a05      	ldr	r2, [pc, #20]	@ (8002138 <SystemInit+0x20>)
 8002124:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 8002128:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88
 800212c:	bf00      	nop
 800212e:	46bd      	mov	sp, r7
 8002130:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002134:	4770      	bx	lr
 8002136:	bf00      	nop
 8002138:	e000ed00 	.word	0xe000ed00

0800213c <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack    		 /* set stack pointer */
 800213c:	f8df d034 	ldr.w	sp, [pc, #52]	@ 8002174 <LoopFillZerobss+0xe>

/* Call the clock system initialization function.*/
  bl  SystemInit   
 8002140:	f7ff ffea 	bl	8002118 <SystemInit>

/* Copy the data segment initializers from flash to SRAM */  
  ldr r0, =_sdata
 8002144:	480c      	ldr	r0, [pc, #48]	@ (8002178 <LoopFillZerobss+0x12>)
  ldr r1, =_edata
 8002146:	490d      	ldr	r1, [pc, #52]	@ (800217c <LoopFillZerobss+0x16>)
  ldr r2, =_sidata
 8002148:	4a0d      	ldr	r2, [pc, #52]	@ (8002180 <LoopFillZerobss+0x1a>)
  movs r3, #0
 800214a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800214c:	e002      	b.n	8002154 <LoopCopyDataInit>

0800214e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800214e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8002150:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8002152:	3304      	adds	r3, #4

08002154 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8002154:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8002156:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8002158:	d3f9      	bcc.n	800214e <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800215a:	4a0a      	ldr	r2, [pc, #40]	@ (8002184 <LoopFillZerobss+0x1e>)
  ldr r4, =_ebss
 800215c:	4c0a      	ldr	r4, [pc, #40]	@ (8002188 <LoopFillZerobss+0x22>)
  movs r3, #0
 800215e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8002160:	e001      	b.n	8002166 <LoopFillZerobss>

08002162 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8002162:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8002164:	3204      	adds	r2, #4

08002166 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8002166:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8002168:	d3fb      	bcc.n	8002162 <FillZerobss>

/* Call static constructors */
    bl __libc_init_array
 800216a:	f002 ff21 	bl	8004fb0 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 800216e:	f7fe fe0f 	bl	8000d90 <main>
  bx  lr    
 8002172:	4770      	bx	lr
  ldr   sp, =_estack    		 /* set stack pointer */
 8002174:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8002178:	20000000 	.word	0x20000000
  ldr r1, =_edata
 800217c:	2000025c 	.word	0x2000025c
  ldr r2, =_sidata
 8002180:	0800599c 	.word	0x0800599c
  ldr r2, =_sbss
 8002184:	2000025c 	.word	0x2000025c
  ldr r4, =_ebss
 8002188:	200005cc 	.word	0x200005cc

0800218c <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 800218c:	e7fe      	b.n	800218c <ADC_IRQHandler>
	...

08002190 <HAL_Init>:
 8002190:	b580      	push	{r7, lr}
 8002192:	af00      	add	r7, sp, #0
 8002194:	4b0e      	ldr	r3, [pc, #56]	@ (80021d0 <HAL_Init+0x40>)
 8002196:	681b      	ldr	r3, [r3, #0]
 8002198:	4a0d      	ldr	r2, [pc, #52]	@ (80021d0 <HAL_Init+0x40>)
 800219a:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 800219e:	6013      	str	r3, [r2, #0]
 80021a0:	4b0b      	ldr	r3, [pc, #44]	@ (80021d0 <HAL_Init+0x40>)
 80021a2:	681b      	ldr	r3, [r3, #0]
 80021a4:	4a0a      	ldr	r2, [pc, #40]	@ (80021d0 <HAL_Init+0x40>)
 80021a6:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 80021aa:	6013      	str	r3, [r2, #0]
 80021ac:	4b08      	ldr	r3, [pc, #32]	@ (80021d0 <HAL_Init+0x40>)
 80021ae:	681b      	ldr	r3, [r3, #0]
 80021b0:	4a07      	ldr	r2, [pc, #28]	@ (80021d0 <HAL_Init+0x40>)
 80021b2:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80021b6:	6013      	str	r3, [r2, #0]
 80021b8:	2003      	movs	r0, #3
 80021ba:	f000 fd41 	bl	8002c40 <HAL_NVIC_SetPriorityGrouping>
 80021be:	200f      	movs	r0, #15
 80021c0:	f000 f808 	bl	80021d4 <HAL_InitTick>
 80021c4:	f7ff fd22 	bl	8001c0c <HAL_MspInit>
 80021c8:	2300      	movs	r3, #0
 80021ca:	4618      	mov	r0, r3
 80021cc:	bd80      	pop	{r7, pc}
 80021ce:	bf00      	nop
 80021d0:	40023c00 	.word	0x40023c00

080021d4 <HAL_InitTick>:
 80021d4:	b580      	push	{r7, lr}
 80021d6:	b082      	sub	sp, #8
 80021d8:	af00      	add	r7, sp, #0
 80021da:	6078      	str	r0, [r7, #4]
 80021dc:	4b12      	ldr	r3, [pc, #72]	@ (8002228 <HAL_InitTick+0x54>)
 80021de:	681a      	ldr	r2, [r3, #0]
 80021e0:	4b12      	ldr	r3, [pc, #72]	@ (800222c <HAL_InitTick+0x58>)
 80021e2:	781b      	ldrb	r3, [r3, #0]
 80021e4:	4619      	mov	r1, r3
 80021e6:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 80021ea:	fbb3 f3f1 	udiv	r3, r3, r1
 80021ee:	fbb2 f3f3 	udiv	r3, r2, r3
 80021f2:	4618      	mov	r0, r3
 80021f4:	f000 fd59 	bl	8002caa <HAL_SYSTICK_Config>
 80021f8:	4603      	mov	r3, r0
 80021fa:	2b00      	cmp	r3, #0
 80021fc:	d001      	beq.n	8002202 <HAL_InitTick+0x2e>
 80021fe:	2301      	movs	r3, #1
 8002200:	e00e      	b.n	8002220 <HAL_InitTick+0x4c>
 8002202:	687b      	ldr	r3, [r7, #4]
 8002204:	2b0f      	cmp	r3, #15
 8002206:	d80a      	bhi.n	800221e <HAL_InitTick+0x4a>
 8002208:	2200      	movs	r2, #0
 800220a:	6879      	ldr	r1, [r7, #4]
 800220c:	f04f 30ff 	mov.w	r0, #4294967295
 8002210:	f000 fd21 	bl	8002c56 <HAL_NVIC_SetPriority>
 8002214:	4a06      	ldr	r2, [pc, #24]	@ (8002230 <HAL_InitTick+0x5c>)
 8002216:	687b      	ldr	r3, [r7, #4]
 8002218:	6013      	str	r3, [r2, #0]
 800221a:	2300      	movs	r3, #0
 800221c:	e000      	b.n	8002220 <HAL_InitTick+0x4c>
 800221e:	2301      	movs	r3, #1
 8002220:	4618      	mov	r0, r3
 8002222:	3708      	adds	r7, #8
 8002224:	46bd      	mov	sp, r7
 8002226:	bd80      	pop	{r7, pc}
 8002228:	20000200 	.word	0x20000200
 800222c:	20000208 	.word	0x20000208
 8002230:	20000204 	.word	0x20000204

08002234 <HAL_IncTick>:
 8002234:	b480      	push	{r7}
 8002236:	af00      	add	r7, sp, #0
 8002238:	4b06      	ldr	r3, [pc, #24]	@ (8002254 <HAL_IncTick+0x20>)
 800223a:	781b      	ldrb	r3, [r3, #0]
 800223c:	461a      	mov	r2, r3
 800223e:	4b06      	ldr	r3, [pc, #24]	@ (8002258 <HAL_IncTick+0x24>)
 8002240:	681b      	ldr	r3, [r3, #0]
 8002242:	4413      	add	r3, r2
 8002244:	4a04      	ldr	r2, [pc, #16]	@ (8002258 <HAL_IncTick+0x24>)
 8002246:	6013      	str	r3, [r2, #0]
 8002248:	bf00      	nop
 800224a:	46bd      	mov	sp, r7
 800224c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002250:	4770      	bx	lr
 8002252:	bf00      	nop
 8002254:	20000208 	.word	0x20000208
 8002258:	20000480 	.word	0x20000480

0800225c <HAL_GetTick>:
 800225c:	b480      	push	{r7}
 800225e:	af00      	add	r7, sp, #0
 8002260:	4b03      	ldr	r3, [pc, #12]	@ (8002270 <HAL_GetTick+0x14>)
 8002262:	681b      	ldr	r3, [r3, #0]
 8002264:	4618      	mov	r0, r3
 8002266:	46bd      	mov	sp, r7
 8002268:	f85d 7b04 	ldr.w	r7, [sp], #4
 800226c:	4770      	bx	lr
 800226e:	bf00      	nop
 8002270:	20000480 	.word	0x20000480

08002274 <HAL_Delay>:
 8002274:	b580      	push	{r7, lr}
 8002276:	b084      	sub	sp, #16
 8002278:	af00      	add	r7, sp, #0
 800227a:	6078      	str	r0, [r7, #4]
 800227c:	f7ff ffee 	bl	800225c <HAL_GetTick>
 8002280:	60b8      	str	r0, [r7, #8]
 8002282:	687b      	ldr	r3, [r7, #4]
 8002284:	60fb      	str	r3, [r7, #12]
 8002286:	68fb      	ldr	r3, [r7, #12]
 8002288:	f1b3 3fff 	cmp.w	r3, #4294967295
 800228c:	d005      	beq.n	800229a <HAL_Delay+0x26>
 800228e:	4b0a      	ldr	r3, [pc, #40]	@ (80022b8 <HAL_Delay+0x44>)
 8002290:	781b      	ldrb	r3, [r3, #0]
 8002292:	461a      	mov	r2, r3
 8002294:	68fb      	ldr	r3, [r7, #12]
 8002296:	4413      	add	r3, r2
 8002298:	60fb      	str	r3, [r7, #12]
 800229a:	bf00      	nop
 800229c:	f7ff ffde 	bl	800225c <HAL_GetTick>
 80022a0:	4602      	mov	r2, r0
 80022a2:	68bb      	ldr	r3, [r7, #8]
 80022a4:	1ad3      	subs	r3, r2, r3
 80022a6:	68fa      	ldr	r2, [r7, #12]
 80022a8:	429a      	cmp	r2, r3
 80022aa:	d8f7      	bhi.n	800229c <HAL_Delay+0x28>
 80022ac:	bf00      	nop
 80022ae:	bf00      	nop
 80022b0:	3710      	adds	r7, #16
 80022b2:	46bd      	mov	sp, r7
 80022b4:	bd80      	pop	{r7, pc}
 80022b6:	bf00      	nop
 80022b8:	20000208 	.word	0x20000208

080022bc <HAL_ADC_Init>:
 80022bc:	b580      	push	{r7, lr}
 80022be:	b084      	sub	sp, #16
 80022c0:	af00      	add	r7, sp, #0
 80022c2:	6078      	str	r0, [r7, #4]
 80022c4:	2300      	movs	r3, #0
 80022c6:	73fb      	strb	r3, [r7, #15]
 80022c8:	687b      	ldr	r3, [r7, #4]
 80022ca:	2b00      	cmp	r3, #0
 80022cc:	d101      	bne.n	80022d2 <HAL_ADC_Init+0x16>
 80022ce:	2301      	movs	r3, #1
 80022d0:	e033      	b.n	800233a <HAL_ADC_Init+0x7e>
 80022d2:	687b      	ldr	r3, [r7, #4]
 80022d4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80022d6:	2b00      	cmp	r3, #0
 80022d8:	d109      	bne.n	80022ee <HAL_ADC_Init+0x32>
 80022da:	6878      	ldr	r0, [r7, #4]
 80022dc:	f7ff fcbe 	bl	8001c5c <HAL_ADC_MspInit>
 80022e0:	687b      	ldr	r3, [r7, #4]
 80022e2:	2200      	movs	r2, #0
 80022e4:	645a      	str	r2, [r3, #68]	@ 0x44
 80022e6:	687b      	ldr	r3, [r7, #4]
 80022e8:	2200      	movs	r2, #0
 80022ea:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80022ee:	687b      	ldr	r3, [r7, #4]
 80022f0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80022f2:	f003 0310 	and.w	r3, r3, #16
 80022f6:	2b00      	cmp	r3, #0
 80022f8:	d118      	bne.n	800232c <HAL_ADC_Init+0x70>
 80022fa:	687b      	ldr	r3, [r7, #4]
 80022fc:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80022fe:	f423 5388 	bic.w	r3, r3, #4352	@ 0x1100
 8002302:	f023 0302 	bic.w	r3, r3, #2
 8002306:	f043 0202 	orr.w	r2, r3, #2
 800230a:	687b      	ldr	r3, [r7, #4]
 800230c:	641a      	str	r2, [r3, #64]	@ 0x40
 800230e:	6878      	ldr	r0, [r7, #4]
 8002310:	f000 faca 	bl	80028a8 <ADC_Init>
 8002314:	687b      	ldr	r3, [r7, #4]
 8002316:	2200      	movs	r2, #0
 8002318:	645a      	str	r2, [r3, #68]	@ 0x44
 800231a:	687b      	ldr	r3, [r7, #4]
 800231c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800231e:	f023 0303 	bic.w	r3, r3, #3
 8002322:	f043 0201 	orr.w	r2, r3, #1
 8002326:	687b      	ldr	r3, [r7, #4]
 8002328:	641a      	str	r2, [r3, #64]	@ 0x40
 800232a:	e001      	b.n	8002330 <HAL_ADC_Init+0x74>
 800232c:	2301      	movs	r3, #1
 800232e:	73fb      	strb	r3, [r7, #15]
 8002330:	687b      	ldr	r3, [r7, #4]
 8002332:	2200      	movs	r2, #0
 8002334:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8002338:	7bfb      	ldrb	r3, [r7, #15]
 800233a:	4618      	mov	r0, r3
 800233c:	3710      	adds	r7, #16
 800233e:	46bd      	mov	sp, r7
 8002340:	bd80      	pop	{r7, pc}
	...

08002344 <HAL_ADC_Start>:
 8002344:	b480      	push	{r7}
 8002346:	b085      	sub	sp, #20
 8002348:	af00      	add	r7, sp, #0
 800234a:	6078      	str	r0, [r7, #4]
 800234c:	2300      	movs	r3, #0
 800234e:	60bb      	str	r3, [r7, #8]
 8002350:	687b      	ldr	r3, [r7, #4]
 8002352:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8002356:	2b01      	cmp	r3, #1
 8002358:	d101      	bne.n	800235e <HAL_ADC_Start+0x1a>
 800235a:	2302      	movs	r3, #2
 800235c:	e097      	b.n	800248e <HAL_ADC_Start+0x14a>
 800235e:	687b      	ldr	r3, [r7, #4]
 8002360:	2201      	movs	r2, #1
 8002362:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8002366:	687b      	ldr	r3, [r7, #4]
 8002368:	681b      	ldr	r3, [r3, #0]
 800236a:	689b      	ldr	r3, [r3, #8]
 800236c:	f003 0301 	and.w	r3, r3, #1
 8002370:	2b01      	cmp	r3, #1
 8002372:	d018      	beq.n	80023a6 <HAL_ADC_Start+0x62>
 8002374:	687b      	ldr	r3, [r7, #4]
 8002376:	681b      	ldr	r3, [r3, #0]
 8002378:	689a      	ldr	r2, [r3, #8]
 800237a:	687b      	ldr	r3, [r7, #4]
 800237c:	681b      	ldr	r3, [r3, #0]
 800237e:	f042 0201 	orr.w	r2, r2, #1
 8002382:	609a      	str	r2, [r3, #8]
 8002384:	4b45      	ldr	r3, [pc, #276]	@ (800249c <HAL_ADC_Start+0x158>)
 8002386:	681b      	ldr	r3, [r3, #0]
 8002388:	4a45      	ldr	r2, [pc, #276]	@ (80024a0 <HAL_ADC_Start+0x15c>)
 800238a:	fba2 2303 	umull	r2, r3, r2, r3
 800238e:	0c9a      	lsrs	r2, r3, #18
 8002390:	4613      	mov	r3, r2
 8002392:	005b      	lsls	r3, r3, #1
 8002394:	4413      	add	r3, r2
 8002396:	60bb      	str	r3, [r7, #8]
 8002398:	e002      	b.n	80023a0 <HAL_ADC_Start+0x5c>
 800239a:	68bb      	ldr	r3, [r7, #8]
 800239c:	3b01      	subs	r3, #1
 800239e:	60bb      	str	r3, [r7, #8]
 80023a0:	68bb      	ldr	r3, [r7, #8]
 80023a2:	2b00      	cmp	r3, #0
 80023a4:	d1f9      	bne.n	800239a <HAL_ADC_Start+0x56>
 80023a6:	687b      	ldr	r3, [r7, #4]
 80023a8:	681b      	ldr	r3, [r3, #0]
 80023aa:	689b      	ldr	r3, [r3, #8]
 80023ac:	f003 0301 	and.w	r3, r3, #1
 80023b0:	2b01      	cmp	r3, #1
 80023b2:	d15f      	bne.n	8002474 <HAL_ADC_Start+0x130>
 80023b4:	687b      	ldr	r3, [r7, #4]
 80023b6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80023b8:	f423 63e0 	bic.w	r3, r3, #1792	@ 0x700
 80023bc:	f023 0301 	bic.w	r3, r3, #1
 80023c0:	f443 7280 	orr.w	r2, r3, #256	@ 0x100
 80023c4:	687b      	ldr	r3, [r7, #4]
 80023c6:	641a      	str	r2, [r3, #64]	@ 0x40
 80023c8:	687b      	ldr	r3, [r7, #4]
 80023ca:	681b      	ldr	r3, [r3, #0]
 80023cc:	685b      	ldr	r3, [r3, #4]
 80023ce:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 80023d2:	2b00      	cmp	r3, #0
 80023d4:	d007      	beq.n	80023e6 <HAL_ADC_Start+0xa2>
 80023d6:	687b      	ldr	r3, [r7, #4]
 80023d8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80023da:	f423 5340 	bic.w	r3, r3, #12288	@ 0x3000
 80023de:	f443 5280 	orr.w	r2, r3, #4096	@ 0x1000
 80023e2:	687b      	ldr	r3, [r7, #4]
 80023e4:	641a      	str	r2, [r3, #64]	@ 0x40
 80023e6:	687b      	ldr	r3, [r7, #4]
 80023e8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80023ea:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 80023ee:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 80023f2:	d106      	bne.n	8002402 <HAL_ADC_Start+0xbe>
 80023f4:	687b      	ldr	r3, [r7, #4]
 80023f6:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80023f8:	f023 0206 	bic.w	r2, r3, #6
 80023fc:	687b      	ldr	r3, [r7, #4]
 80023fe:	645a      	str	r2, [r3, #68]	@ 0x44
 8002400:	e002      	b.n	8002408 <HAL_ADC_Start+0xc4>
 8002402:	687b      	ldr	r3, [r7, #4]
 8002404:	2200      	movs	r2, #0
 8002406:	645a      	str	r2, [r3, #68]	@ 0x44
 8002408:	687b      	ldr	r3, [r7, #4]
 800240a:	2200      	movs	r2, #0
 800240c:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8002410:	4b24      	ldr	r3, [pc, #144]	@ (80024a4 <HAL_ADC_Start+0x160>)
 8002412:	60fb      	str	r3, [r7, #12]
 8002414:	687b      	ldr	r3, [r7, #4]
 8002416:	681b      	ldr	r3, [r3, #0]
 8002418:	f06f 0222 	mvn.w	r2, #34	@ 0x22
 800241c:	601a      	str	r2, [r3, #0]
 800241e:	68fb      	ldr	r3, [r7, #12]
 8002420:	685b      	ldr	r3, [r3, #4]
 8002422:	f003 031f 	and.w	r3, r3, #31
 8002426:	2b00      	cmp	r3, #0
 8002428:	d10f      	bne.n	800244a <HAL_ADC_Start+0x106>
 800242a:	687b      	ldr	r3, [r7, #4]
 800242c:	681b      	ldr	r3, [r3, #0]
 800242e:	689b      	ldr	r3, [r3, #8]
 8002430:	f003 5340 	and.w	r3, r3, #805306368	@ 0x30000000
 8002434:	2b00      	cmp	r3, #0
 8002436:	d129      	bne.n	800248c <HAL_ADC_Start+0x148>
 8002438:	687b      	ldr	r3, [r7, #4]
 800243a:	681b      	ldr	r3, [r3, #0]
 800243c:	689a      	ldr	r2, [r3, #8]
 800243e:	687b      	ldr	r3, [r7, #4]
 8002440:	681b      	ldr	r3, [r3, #0]
 8002442:	f042 4280 	orr.w	r2, r2, #1073741824	@ 0x40000000
 8002446:	609a      	str	r2, [r3, #8]
 8002448:	e020      	b.n	800248c <HAL_ADC_Start+0x148>
 800244a:	687b      	ldr	r3, [r7, #4]
 800244c:	681b      	ldr	r3, [r3, #0]
 800244e:	4a16      	ldr	r2, [pc, #88]	@ (80024a8 <HAL_ADC_Start+0x164>)
 8002450:	4293      	cmp	r3, r2
 8002452:	d11b      	bne.n	800248c <HAL_ADC_Start+0x148>
 8002454:	687b      	ldr	r3, [r7, #4]
 8002456:	681b      	ldr	r3, [r3, #0]
 8002458:	689b      	ldr	r3, [r3, #8]
 800245a:	f003 5340 	and.w	r3, r3, #805306368	@ 0x30000000
 800245e:	2b00      	cmp	r3, #0
 8002460:	d114      	bne.n	800248c <HAL_ADC_Start+0x148>
 8002462:	687b      	ldr	r3, [r7, #4]
 8002464:	681b      	ldr	r3, [r3, #0]
 8002466:	689a      	ldr	r2, [r3, #8]
 8002468:	687b      	ldr	r3, [r7, #4]
 800246a:	681b      	ldr	r3, [r3, #0]
 800246c:	f042 4280 	orr.w	r2, r2, #1073741824	@ 0x40000000
 8002470:	609a      	str	r2, [r3, #8]
 8002472:	e00b      	b.n	800248c <HAL_ADC_Start+0x148>
 8002474:	687b      	ldr	r3, [r7, #4]
 8002476:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002478:	f043 0210 	orr.w	r2, r3, #16
 800247c:	687b      	ldr	r3, [r7, #4]
 800247e:	641a      	str	r2, [r3, #64]	@ 0x40
 8002480:	687b      	ldr	r3, [r7, #4]
 8002482:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002484:	f043 0201 	orr.w	r2, r3, #1
 8002488:	687b      	ldr	r3, [r7, #4]
 800248a:	645a      	str	r2, [r3, #68]	@ 0x44
 800248c:	2300      	movs	r3, #0
 800248e:	4618      	mov	r0, r3
 8002490:	3714      	adds	r7, #20
 8002492:	46bd      	mov	sp, r7
 8002494:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002498:	4770      	bx	lr
 800249a:	bf00      	nop
 800249c:	20000200 	.word	0x20000200
 80024a0:	431bde83 	.word	0x431bde83
 80024a4:	40012300 	.word	0x40012300
 80024a8:	40012000 	.word	0x40012000

080024ac <HAL_ADC_Stop>:
 80024ac:	b480      	push	{r7}
 80024ae:	b083      	sub	sp, #12
 80024b0:	af00      	add	r7, sp, #0
 80024b2:	6078      	str	r0, [r7, #4]
 80024b4:	687b      	ldr	r3, [r7, #4]
 80024b6:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 80024ba:	2b01      	cmp	r3, #1
 80024bc:	d101      	bne.n	80024c2 <HAL_ADC_Stop+0x16>
 80024be:	2302      	movs	r3, #2
 80024c0:	e021      	b.n	8002506 <HAL_ADC_Stop+0x5a>
 80024c2:	687b      	ldr	r3, [r7, #4]
 80024c4:	2201      	movs	r2, #1
 80024c6:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80024ca:	687b      	ldr	r3, [r7, #4]
 80024cc:	681b      	ldr	r3, [r3, #0]
 80024ce:	689a      	ldr	r2, [r3, #8]
 80024d0:	687b      	ldr	r3, [r7, #4]
 80024d2:	681b      	ldr	r3, [r3, #0]
 80024d4:	f022 0201 	bic.w	r2, r2, #1
 80024d8:	609a      	str	r2, [r3, #8]
 80024da:	687b      	ldr	r3, [r7, #4]
 80024dc:	681b      	ldr	r3, [r3, #0]
 80024de:	689b      	ldr	r3, [r3, #8]
 80024e0:	f003 0301 	and.w	r3, r3, #1
 80024e4:	2b00      	cmp	r3, #0
 80024e6:	d109      	bne.n	80024fc <HAL_ADC_Stop+0x50>
 80024e8:	687b      	ldr	r3, [r7, #4]
 80024ea:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80024ec:	f423 5388 	bic.w	r3, r3, #4352	@ 0x1100
 80024f0:	f023 0301 	bic.w	r3, r3, #1
 80024f4:	f043 0201 	orr.w	r2, r3, #1
 80024f8:	687b      	ldr	r3, [r7, #4]
 80024fa:	641a      	str	r2, [r3, #64]	@ 0x40
 80024fc:	687b      	ldr	r3, [r7, #4]
 80024fe:	2200      	movs	r2, #0
 8002500:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8002504:	2300      	movs	r3, #0
 8002506:	4618      	mov	r0, r3
 8002508:	370c      	adds	r7, #12
 800250a:	46bd      	mov	sp, r7
 800250c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002510:	4770      	bx	lr

08002512 <HAL_ADC_PollForConversion>:
 8002512:	b580      	push	{r7, lr}
 8002514:	b084      	sub	sp, #16
 8002516:	af00      	add	r7, sp, #0
 8002518:	6078      	str	r0, [r7, #4]
 800251a:	6039      	str	r1, [r7, #0]
 800251c:	2300      	movs	r3, #0
 800251e:	60fb      	str	r3, [r7, #12]
 8002520:	687b      	ldr	r3, [r7, #4]
 8002522:	681b      	ldr	r3, [r3, #0]
 8002524:	689b      	ldr	r3, [r3, #8]
 8002526:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 800252a:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 800252e:	d113      	bne.n	8002558 <HAL_ADC_PollForConversion+0x46>
 8002530:	687b      	ldr	r3, [r7, #4]
 8002532:	681b      	ldr	r3, [r3, #0]
 8002534:	689b      	ldr	r3, [r3, #8]
 8002536:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800253a:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 800253e:	d10b      	bne.n	8002558 <HAL_ADC_PollForConversion+0x46>
 8002540:	687b      	ldr	r3, [r7, #4]
 8002542:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002544:	f043 0220 	orr.w	r2, r3, #32
 8002548:	687b      	ldr	r3, [r7, #4]
 800254a:	641a      	str	r2, [r3, #64]	@ 0x40
 800254c:	687b      	ldr	r3, [r7, #4]
 800254e:	2200      	movs	r2, #0
 8002550:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8002554:	2301      	movs	r3, #1
 8002556:	e063      	b.n	8002620 <HAL_ADC_PollForConversion+0x10e>
 8002558:	f7ff fe80 	bl	800225c <HAL_GetTick>
 800255c:	60f8      	str	r0, [r7, #12]
 800255e:	e021      	b.n	80025a4 <HAL_ADC_PollForConversion+0x92>
 8002560:	683b      	ldr	r3, [r7, #0]
 8002562:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002566:	d01d      	beq.n	80025a4 <HAL_ADC_PollForConversion+0x92>
 8002568:	683b      	ldr	r3, [r7, #0]
 800256a:	2b00      	cmp	r3, #0
 800256c:	d007      	beq.n	800257e <HAL_ADC_PollForConversion+0x6c>
 800256e:	f7ff fe75 	bl	800225c <HAL_GetTick>
 8002572:	4602      	mov	r2, r0
 8002574:	68fb      	ldr	r3, [r7, #12]
 8002576:	1ad3      	subs	r3, r2, r3
 8002578:	683a      	ldr	r2, [r7, #0]
 800257a:	429a      	cmp	r2, r3
 800257c:	d212      	bcs.n	80025a4 <HAL_ADC_PollForConversion+0x92>
 800257e:	687b      	ldr	r3, [r7, #4]
 8002580:	681b      	ldr	r3, [r3, #0]
 8002582:	681b      	ldr	r3, [r3, #0]
 8002584:	f003 0302 	and.w	r3, r3, #2
 8002588:	2b02      	cmp	r3, #2
 800258a:	d00b      	beq.n	80025a4 <HAL_ADC_PollForConversion+0x92>
 800258c:	687b      	ldr	r3, [r7, #4]
 800258e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002590:	f043 0204 	orr.w	r2, r3, #4
 8002594:	687b      	ldr	r3, [r7, #4]
 8002596:	641a      	str	r2, [r3, #64]	@ 0x40
 8002598:	687b      	ldr	r3, [r7, #4]
 800259a:	2200      	movs	r2, #0
 800259c:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80025a0:	2303      	movs	r3, #3
 80025a2:	e03d      	b.n	8002620 <HAL_ADC_PollForConversion+0x10e>
 80025a4:	687b      	ldr	r3, [r7, #4]
 80025a6:	681b      	ldr	r3, [r3, #0]
 80025a8:	681b      	ldr	r3, [r3, #0]
 80025aa:	f003 0302 	and.w	r3, r3, #2
 80025ae:	2b02      	cmp	r3, #2
 80025b0:	d1d6      	bne.n	8002560 <HAL_ADC_PollForConversion+0x4e>
 80025b2:	687b      	ldr	r3, [r7, #4]
 80025b4:	681b      	ldr	r3, [r3, #0]
 80025b6:	f06f 0212 	mvn.w	r2, #18
 80025ba:	601a      	str	r2, [r3, #0]
 80025bc:	687b      	ldr	r3, [r7, #4]
 80025be:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80025c0:	f443 7200 	orr.w	r2, r3, #512	@ 0x200
 80025c4:	687b      	ldr	r3, [r7, #4]
 80025c6:	641a      	str	r2, [r3, #64]	@ 0x40
 80025c8:	687b      	ldr	r3, [r7, #4]
 80025ca:	681b      	ldr	r3, [r3, #0]
 80025cc:	689b      	ldr	r3, [r3, #8]
 80025ce:	f003 5340 	and.w	r3, r3, #805306368	@ 0x30000000
 80025d2:	2b00      	cmp	r3, #0
 80025d4:	d123      	bne.n	800261e <HAL_ADC_PollForConversion+0x10c>
 80025d6:	687b      	ldr	r3, [r7, #4]
 80025d8:	7e1b      	ldrb	r3, [r3, #24]
 80025da:	2b00      	cmp	r3, #0
 80025dc:	d11f      	bne.n	800261e <HAL_ADC_PollForConversion+0x10c>
 80025de:	687b      	ldr	r3, [r7, #4]
 80025e0:	681b      	ldr	r3, [r3, #0]
 80025e2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80025e4:	f403 0370 	and.w	r3, r3, #15728640	@ 0xf00000
 80025e8:	2b00      	cmp	r3, #0
 80025ea:	d006      	beq.n	80025fa <HAL_ADC_PollForConversion+0xe8>
 80025ec:	687b      	ldr	r3, [r7, #4]
 80025ee:	681b      	ldr	r3, [r3, #0]
 80025f0:	689b      	ldr	r3, [r3, #8]
 80025f2:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 80025f6:	2b00      	cmp	r3, #0
 80025f8:	d111      	bne.n	800261e <HAL_ADC_PollForConversion+0x10c>
 80025fa:	687b      	ldr	r3, [r7, #4]
 80025fc:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80025fe:	f423 7280 	bic.w	r2, r3, #256	@ 0x100
 8002602:	687b      	ldr	r3, [r7, #4]
 8002604:	641a      	str	r2, [r3, #64]	@ 0x40
 8002606:	687b      	ldr	r3, [r7, #4]
 8002608:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800260a:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 800260e:	2b00      	cmp	r3, #0
 8002610:	d105      	bne.n	800261e <HAL_ADC_PollForConversion+0x10c>
 8002612:	687b      	ldr	r3, [r7, #4]
 8002614:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002616:	f043 0201 	orr.w	r2, r3, #1
 800261a:	687b      	ldr	r3, [r7, #4]
 800261c:	641a      	str	r2, [r3, #64]	@ 0x40
 800261e:	2300      	movs	r3, #0
 8002620:	4618      	mov	r0, r3
 8002622:	3710      	adds	r7, #16
 8002624:	46bd      	mov	sp, r7
 8002626:	bd80      	pop	{r7, pc}

08002628 <HAL_ADC_GetValue>:
 8002628:	b480      	push	{r7}
 800262a:	b083      	sub	sp, #12
 800262c:	af00      	add	r7, sp, #0
 800262e:	6078      	str	r0, [r7, #4]
 8002630:	687b      	ldr	r3, [r7, #4]
 8002632:	681b      	ldr	r3, [r3, #0]
 8002634:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8002636:	4618      	mov	r0, r3
 8002638:	370c      	adds	r7, #12
 800263a:	46bd      	mov	sp, r7
 800263c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002640:	4770      	bx	lr
	...

08002644 <HAL_ADC_ConfigChannel>:
 8002644:	b480      	push	{r7}
 8002646:	b085      	sub	sp, #20
 8002648:	af00      	add	r7, sp, #0
 800264a:	6078      	str	r0, [r7, #4]
 800264c:	6039      	str	r1, [r7, #0]
 800264e:	2300      	movs	r3, #0
 8002650:	60bb      	str	r3, [r7, #8]
 8002652:	687b      	ldr	r3, [r7, #4]
 8002654:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8002658:	2b01      	cmp	r3, #1
 800265a:	d101      	bne.n	8002660 <HAL_ADC_ConfigChannel+0x1c>
 800265c:	2302      	movs	r3, #2
 800265e:	e113      	b.n	8002888 <HAL_ADC_ConfigChannel+0x244>
 8002660:	687b      	ldr	r3, [r7, #4]
 8002662:	2201      	movs	r2, #1
 8002664:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8002668:	683b      	ldr	r3, [r7, #0]
 800266a:	681b      	ldr	r3, [r3, #0]
 800266c:	2b09      	cmp	r3, #9
 800266e:	d925      	bls.n	80026bc <HAL_ADC_ConfigChannel+0x78>
 8002670:	687b      	ldr	r3, [r7, #4]
 8002672:	681b      	ldr	r3, [r3, #0]
 8002674:	68d9      	ldr	r1, [r3, #12]
 8002676:	683b      	ldr	r3, [r7, #0]
 8002678:	681b      	ldr	r3, [r3, #0]
 800267a:	b29b      	uxth	r3, r3
 800267c:	461a      	mov	r2, r3
 800267e:	4613      	mov	r3, r2
 8002680:	005b      	lsls	r3, r3, #1
 8002682:	4413      	add	r3, r2
 8002684:	3b1e      	subs	r3, #30
 8002686:	2207      	movs	r2, #7
 8002688:	fa02 f303 	lsl.w	r3, r2, r3
 800268c:	43da      	mvns	r2, r3
 800268e:	687b      	ldr	r3, [r7, #4]
 8002690:	681b      	ldr	r3, [r3, #0]
 8002692:	400a      	ands	r2, r1
 8002694:	60da      	str	r2, [r3, #12]
 8002696:	687b      	ldr	r3, [r7, #4]
 8002698:	681b      	ldr	r3, [r3, #0]
 800269a:	68d9      	ldr	r1, [r3, #12]
 800269c:	683b      	ldr	r3, [r7, #0]
 800269e:	689a      	ldr	r2, [r3, #8]
 80026a0:	683b      	ldr	r3, [r7, #0]
 80026a2:	681b      	ldr	r3, [r3, #0]
 80026a4:	b29b      	uxth	r3, r3
 80026a6:	4618      	mov	r0, r3
 80026a8:	4603      	mov	r3, r0
 80026aa:	005b      	lsls	r3, r3, #1
 80026ac:	4403      	add	r3, r0
 80026ae:	3b1e      	subs	r3, #30
 80026b0:	409a      	lsls	r2, r3
 80026b2:	687b      	ldr	r3, [r7, #4]
 80026b4:	681b      	ldr	r3, [r3, #0]
 80026b6:	430a      	orrs	r2, r1
 80026b8:	60da      	str	r2, [r3, #12]
 80026ba:	e022      	b.n	8002702 <HAL_ADC_ConfigChannel+0xbe>
 80026bc:	687b      	ldr	r3, [r7, #4]
 80026be:	681b      	ldr	r3, [r3, #0]
 80026c0:	6919      	ldr	r1, [r3, #16]
 80026c2:	683b      	ldr	r3, [r7, #0]
 80026c4:	681b      	ldr	r3, [r3, #0]
 80026c6:	b29b      	uxth	r3, r3
 80026c8:	461a      	mov	r2, r3
 80026ca:	4613      	mov	r3, r2
 80026cc:	005b      	lsls	r3, r3, #1
 80026ce:	4413      	add	r3, r2
 80026d0:	2207      	movs	r2, #7
 80026d2:	fa02 f303 	lsl.w	r3, r2, r3
 80026d6:	43da      	mvns	r2, r3
 80026d8:	687b      	ldr	r3, [r7, #4]
 80026da:	681b      	ldr	r3, [r3, #0]
 80026dc:	400a      	ands	r2, r1
 80026de:	611a      	str	r2, [r3, #16]
 80026e0:	687b      	ldr	r3, [r7, #4]
 80026e2:	681b      	ldr	r3, [r3, #0]
 80026e4:	6919      	ldr	r1, [r3, #16]
 80026e6:	683b      	ldr	r3, [r7, #0]
 80026e8:	689a      	ldr	r2, [r3, #8]
 80026ea:	683b      	ldr	r3, [r7, #0]
 80026ec:	681b      	ldr	r3, [r3, #0]
 80026ee:	b29b      	uxth	r3, r3
 80026f0:	4618      	mov	r0, r3
 80026f2:	4603      	mov	r3, r0
 80026f4:	005b      	lsls	r3, r3, #1
 80026f6:	4403      	add	r3, r0
 80026f8:	409a      	lsls	r2, r3
 80026fa:	687b      	ldr	r3, [r7, #4]
 80026fc:	681b      	ldr	r3, [r3, #0]
 80026fe:	430a      	orrs	r2, r1
 8002700:	611a      	str	r2, [r3, #16]
 8002702:	683b      	ldr	r3, [r7, #0]
 8002704:	685b      	ldr	r3, [r3, #4]
 8002706:	2b06      	cmp	r3, #6
 8002708:	d824      	bhi.n	8002754 <HAL_ADC_ConfigChannel+0x110>
 800270a:	687b      	ldr	r3, [r7, #4]
 800270c:	681b      	ldr	r3, [r3, #0]
 800270e:	6b59      	ldr	r1, [r3, #52]	@ 0x34
 8002710:	683b      	ldr	r3, [r7, #0]
 8002712:	685a      	ldr	r2, [r3, #4]
 8002714:	4613      	mov	r3, r2
 8002716:	009b      	lsls	r3, r3, #2
 8002718:	4413      	add	r3, r2
 800271a:	3b05      	subs	r3, #5
 800271c:	221f      	movs	r2, #31
 800271e:	fa02 f303 	lsl.w	r3, r2, r3
 8002722:	43da      	mvns	r2, r3
 8002724:	687b      	ldr	r3, [r7, #4]
 8002726:	681b      	ldr	r3, [r3, #0]
 8002728:	400a      	ands	r2, r1
 800272a:	635a      	str	r2, [r3, #52]	@ 0x34
 800272c:	687b      	ldr	r3, [r7, #4]
 800272e:	681b      	ldr	r3, [r3, #0]
 8002730:	6b59      	ldr	r1, [r3, #52]	@ 0x34
 8002732:	683b      	ldr	r3, [r7, #0]
 8002734:	681b      	ldr	r3, [r3, #0]
 8002736:	b29b      	uxth	r3, r3
 8002738:	4618      	mov	r0, r3
 800273a:	683b      	ldr	r3, [r7, #0]
 800273c:	685a      	ldr	r2, [r3, #4]
 800273e:	4613      	mov	r3, r2
 8002740:	009b      	lsls	r3, r3, #2
 8002742:	4413      	add	r3, r2
 8002744:	3b05      	subs	r3, #5
 8002746:	fa00 f203 	lsl.w	r2, r0, r3
 800274a:	687b      	ldr	r3, [r7, #4]
 800274c:	681b      	ldr	r3, [r3, #0]
 800274e:	430a      	orrs	r2, r1
 8002750:	635a      	str	r2, [r3, #52]	@ 0x34
 8002752:	e04c      	b.n	80027ee <HAL_ADC_ConfigChannel+0x1aa>
 8002754:	683b      	ldr	r3, [r7, #0]
 8002756:	685b      	ldr	r3, [r3, #4]
 8002758:	2b0c      	cmp	r3, #12
 800275a:	d824      	bhi.n	80027a6 <HAL_ADC_ConfigChannel+0x162>
 800275c:	687b      	ldr	r3, [r7, #4]
 800275e:	681b      	ldr	r3, [r3, #0]
 8002760:	6b19      	ldr	r1, [r3, #48]	@ 0x30
 8002762:	683b      	ldr	r3, [r7, #0]
 8002764:	685a      	ldr	r2, [r3, #4]
 8002766:	4613      	mov	r3, r2
 8002768:	009b      	lsls	r3, r3, #2
 800276a:	4413      	add	r3, r2
 800276c:	3b23      	subs	r3, #35	@ 0x23
 800276e:	221f      	movs	r2, #31
 8002770:	fa02 f303 	lsl.w	r3, r2, r3
 8002774:	43da      	mvns	r2, r3
 8002776:	687b      	ldr	r3, [r7, #4]
 8002778:	681b      	ldr	r3, [r3, #0]
 800277a:	400a      	ands	r2, r1
 800277c:	631a      	str	r2, [r3, #48]	@ 0x30
 800277e:	687b      	ldr	r3, [r7, #4]
 8002780:	681b      	ldr	r3, [r3, #0]
 8002782:	6b19      	ldr	r1, [r3, #48]	@ 0x30
 8002784:	683b      	ldr	r3, [r7, #0]
 8002786:	681b      	ldr	r3, [r3, #0]
 8002788:	b29b      	uxth	r3, r3
 800278a:	4618      	mov	r0, r3
 800278c:	683b      	ldr	r3, [r7, #0]
 800278e:	685a      	ldr	r2, [r3, #4]
 8002790:	4613      	mov	r3, r2
 8002792:	009b      	lsls	r3, r3, #2
 8002794:	4413      	add	r3, r2
 8002796:	3b23      	subs	r3, #35	@ 0x23
 8002798:	fa00 f203 	lsl.w	r2, r0, r3
 800279c:	687b      	ldr	r3, [r7, #4]
 800279e:	681b      	ldr	r3, [r3, #0]
 80027a0:	430a      	orrs	r2, r1
 80027a2:	631a      	str	r2, [r3, #48]	@ 0x30
 80027a4:	e023      	b.n	80027ee <HAL_ADC_ConfigChannel+0x1aa>
 80027a6:	687b      	ldr	r3, [r7, #4]
 80027a8:	681b      	ldr	r3, [r3, #0]
 80027aa:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 80027ac:	683b      	ldr	r3, [r7, #0]
 80027ae:	685a      	ldr	r2, [r3, #4]
 80027b0:	4613      	mov	r3, r2
 80027b2:	009b      	lsls	r3, r3, #2
 80027b4:	4413      	add	r3, r2
 80027b6:	3b41      	subs	r3, #65	@ 0x41
 80027b8:	221f      	movs	r2, #31
 80027ba:	fa02 f303 	lsl.w	r3, r2, r3
 80027be:	43da      	mvns	r2, r3
 80027c0:	687b      	ldr	r3, [r7, #4]
 80027c2:	681b      	ldr	r3, [r3, #0]
 80027c4:	400a      	ands	r2, r1
 80027c6:	62da      	str	r2, [r3, #44]	@ 0x2c
 80027c8:	687b      	ldr	r3, [r7, #4]
 80027ca:	681b      	ldr	r3, [r3, #0]
 80027cc:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 80027ce:	683b      	ldr	r3, [r7, #0]
 80027d0:	681b      	ldr	r3, [r3, #0]
 80027d2:	b29b      	uxth	r3, r3
 80027d4:	4618      	mov	r0, r3
 80027d6:	683b      	ldr	r3, [r7, #0]
 80027d8:	685a      	ldr	r2, [r3, #4]
 80027da:	4613      	mov	r3, r2
 80027dc:	009b      	lsls	r3, r3, #2
 80027de:	4413      	add	r3, r2
 80027e0:	3b41      	subs	r3, #65	@ 0x41
 80027e2:	fa00 f203 	lsl.w	r2, r0, r3
 80027e6:	687b      	ldr	r3, [r7, #4]
 80027e8:	681b      	ldr	r3, [r3, #0]
 80027ea:	430a      	orrs	r2, r1
 80027ec:	62da      	str	r2, [r3, #44]	@ 0x2c
 80027ee:	4b29      	ldr	r3, [pc, #164]	@ (8002894 <HAL_ADC_ConfigChannel+0x250>)
 80027f0:	60fb      	str	r3, [r7, #12]
 80027f2:	687b      	ldr	r3, [r7, #4]
 80027f4:	681b      	ldr	r3, [r3, #0]
 80027f6:	4a28      	ldr	r2, [pc, #160]	@ (8002898 <HAL_ADC_ConfigChannel+0x254>)
 80027f8:	4293      	cmp	r3, r2
 80027fa:	d10f      	bne.n	800281c <HAL_ADC_ConfigChannel+0x1d8>
 80027fc:	683b      	ldr	r3, [r7, #0]
 80027fe:	681b      	ldr	r3, [r3, #0]
 8002800:	2b12      	cmp	r3, #18
 8002802:	d10b      	bne.n	800281c <HAL_ADC_ConfigChannel+0x1d8>
 8002804:	68fb      	ldr	r3, [r7, #12]
 8002806:	685b      	ldr	r3, [r3, #4]
 8002808:	f423 0200 	bic.w	r2, r3, #8388608	@ 0x800000
 800280c:	68fb      	ldr	r3, [r7, #12]
 800280e:	605a      	str	r2, [r3, #4]
 8002810:	68fb      	ldr	r3, [r7, #12]
 8002812:	685b      	ldr	r3, [r3, #4]
 8002814:	f443 0280 	orr.w	r2, r3, #4194304	@ 0x400000
 8002818:	68fb      	ldr	r3, [r7, #12]
 800281a:	605a      	str	r2, [r3, #4]
 800281c:	687b      	ldr	r3, [r7, #4]
 800281e:	681b      	ldr	r3, [r3, #0]
 8002820:	4a1d      	ldr	r2, [pc, #116]	@ (8002898 <HAL_ADC_ConfigChannel+0x254>)
 8002822:	4293      	cmp	r3, r2
 8002824:	d12b      	bne.n	800287e <HAL_ADC_ConfigChannel+0x23a>
 8002826:	683b      	ldr	r3, [r7, #0]
 8002828:	681b      	ldr	r3, [r3, #0]
 800282a:	4a1c      	ldr	r2, [pc, #112]	@ (800289c <HAL_ADC_ConfigChannel+0x258>)
 800282c:	4293      	cmp	r3, r2
 800282e:	d003      	beq.n	8002838 <HAL_ADC_ConfigChannel+0x1f4>
 8002830:	683b      	ldr	r3, [r7, #0]
 8002832:	681b      	ldr	r3, [r3, #0]
 8002834:	2b11      	cmp	r3, #17
 8002836:	d122      	bne.n	800287e <HAL_ADC_ConfigChannel+0x23a>
 8002838:	68fb      	ldr	r3, [r7, #12]
 800283a:	685b      	ldr	r3, [r3, #4]
 800283c:	f423 0280 	bic.w	r2, r3, #4194304	@ 0x400000
 8002840:	68fb      	ldr	r3, [r7, #12]
 8002842:	605a      	str	r2, [r3, #4]
 8002844:	68fb      	ldr	r3, [r7, #12]
 8002846:	685b      	ldr	r3, [r3, #4]
 8002848:	f443 0200 	orr.w	r2, r3, #8388608	@ 0x800000
 800284c:	68fb      	ldr	r3, [r7, #12]
 800284e:	605a      	str	r2, [r3, #4]
 8002850:	683b      	ldr	r3, [r7, #0]
 8002852:	681b      	ldr	r3, [r3, #0]
 8002854:	4a11      	ldr	r2, [pc, #68]	@ (800289c <HAL_ADC_ConfigChannel+0x258>)
 8002856:	4293      	cmp	r3, r2
 8002858:	d111      	bne.n	800287e <HAL_ADC_ConfigChannel+0x23a>
 800285a:	4b11      	ldr	r3, [pc, #68]	@ (80028a0 <HAL_ADC_ConfigChannel+0x25c>)
 800285c:	681b      	ldr	r3, [r3, #0]
 800285e:	4a11      	ldr	r2, [pc, #68]	@ (80028a4 <HAL_ADC_ConfigChannel+0x260>)
 8002860:	fba2 2303 	umull	r2, r3, r2, r3
 8002864:	0c9a      	lsrs	r2, r3, #18
 8002866:	4613      	mov	r3, r2
 8002868:	009b      	lsls	r3, r3, #2
 800286a:	4413      	add	r3, r2
 800286c:	005b      	lsls	r3, r3, #1
 800286e:	60bb      	str	r3, [r7, #8]
 8002870:	e002      	b.n	8002878 <HAL_ADC_ConfigChannel+0x234>
 8002872:	68bb      	ldr	r3, [r7, #8]
 8002874:	3b01      	subs	r3, #1
 8002876:	60bb      	str	r3, [r7, #8]
 8002878:	68bb      	ldr	r3, [r7, #8]
 800287a:	2b00      	cmp	r3, #0
 800287c:	d1f9      	bne.n	8002872 <HAL_ADC_ConfigChannel+0x22e>
 800287e:	687b      	ldr	r3, [r7, #4]
 8002880:	2200      	movs	r2, #0
 8002882:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8002886:	2300      	movs	r3, #0
 8002888:	4618      	mov	r0, r3
 800288a:	3714      	adds	r7, #20
 800288c:	46bd      	mov	sp, r7
 800288e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002892:	4770      	bx	lr
 8002894:	40012300 	.word	0x40012300
 8002898:	40012000 	.word	0x40012000
 800289c:	10000012 	.word	0x10000012
 80028a0:	20000200 	.word	0x20000200
 80028a4:	431bde83 	.word	0x431bde83

080028a8 <ADC_Init>:
 80028a8:	b480      	push	{r7}
 80028aa:	b085      	sub	sp, #20
 80028ac:	af00      	add	r7, sp, #0
 80028ae:	6078      	str	r0, [r7, #4]
 80028b0:	4b79      	ldr	r3, [pc, #484]	@ (8002a98 <ADC_Init+0x1f0>)
 80028b2:	60fb      	str	r3, [r7, #12]
 80028b4:	68fb      	ldr	r3, [r7, #12]
 80028b6:	685b      	ldr	r3, [r3, #4]
 80028b8:	f423 3240 	bic.w	r2, r3, #196608	@ 0x30000
 80028bc:	68fb      	ldr	r3, [r7, #12]
 80028be:	605a      	str	r2, [r3, #4]
 80028c0:	68fb      	ldr	r3, [r7, #12]
 80028c2:	685a      	ldr	r2, [r3, #4]
 80028c4:	687b      	ldr	r3, [r7, #4]
 80028c6:	685b      	ldr	r3, [r3, #4]
 80028c8:	431a      	orrs	r2, r3
 80028ca:	68fb      	ldr	r3, [r7, #12]
 80028cc:	605a      	str	r2, [r3, #4]
 80028ce:	687b      	ldr	r3, [r7, #4]
 80028d0:	681b      	ldr	r3, [r3, #0]
 80028d2:	685a      	ldr	r2, [r3, #4]
 80028d4:	687b      	ldr	r3, [r7, #4]
 80028d6:	681b      	ldr	r3, [r3, #0]
 80028d8:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 80028dc:	605a      	str	r2, [r3, #4]
 80028de:	687b      	ldr	r3, [r7, #4]
 80028e0:	681b      	ldr	r3, [r3, #0]
 80028e2:	6859      	ldr	r1, [r3, #4]
 80028e4:	687b      	ldr	r3, [r7, #4]
 80028e6:	691b      	ldr	r3, [r3, #16]
 80028e8:	021a      	lsls	r2, r3, #8
 80028ea:	687b      	ldr	r3, [r7, #4]
 80028ec:	681b      	ldr	r3, [r3, #0]
 80028ee:	430a      	orrs	r2, r1
 80028f0:	605a      	str	r2, [r3, #4]
 80028f2:	687b      	ldr	r3, [r7, #4]
 80028f4:	681b      	ldr	r3, [r3, #0]
 80028f6:	685a      	ldr	r2, [r3, #4]
 80028f8:	687b      	ldr	r3, [r7, #4]
 80028fa:	681b      	ldr	r3, [r3, #0]
 80028fc:	f022 7240 	bic.w	r2, r2, #50331648	@ 0x3000000
 8002900:	605a      	str	r2, [r3, #4]
 8002902:	687b      	ldr	r3, [r7, #4]
 8002904:	681b      	ldr	r3, [r3, #0]
 8002906:	6859      	ldr	r1, [r3, #4]
 8002908:	687b      	ldr	r3, [r7, #4]
 800290a:	689a      	ldr	r2, [r3, #8]
 800290c:	687b      	ldr	r3, [r7, #4]
 800290e:	681b      	ldr	r3, [r3, #0]
 8002910:	430a      	orrs	r2, r1
 8002912:	605a      	str	r2, [r3, #4]
 8002914:	687b      	ldr	r3, [r7, #4]
 8002916:	681b      	ldr	r3, [r3, #0]
 8002918:	689a      	ldr	r2, [r3, #8]
 800291a:	687b      	ldr	r3, [r7, #4]
 800291c:	681b      	ldr	r3, [r3, #0]
 800291e:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8002922:	609a      	str	r2, [r3, #8]
 8002924:	687b      	ldr	r3, [r7, #4]
 8002926:	681b      	ldr	r3, [r3, #0]
 8002928:	6899      	ldr	r1, [r3, #8]
 800292a:	687b      	ldr	r3, [r7, #4]
 800292c:	68da      	ldr	r2, [r3, #12]
 800292e:	687b      	ldr	r3, [r7, #4]
 8002930:	681b      	ldr	r3, [r3, #0]
 8002932:	430a      	orrs	r2, r1
 8002934:	609a      	str	r2, [r3, #8]
 8002936:	687b      	ldr	r3, [r7, #4]
 8002938:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800293a:	4a58      	ldr	r2, [pc, #352]	@ (8002a9c <ADC_Init+0x1f4>)
 800293c:	4293      	cmp	r3, r2
 800293e:	d022      	beq.n	8002986 <ADC_Init+0xde>
 8002940:	687b      	ldr	r3, [r7, #4]
 8002942:	681b      	ldr	r3, [r3, #0]
 8002944:	689a      	ldr	r2, [r3, #8]
 8002946:	687b      	ldr	r3, [r7, #4]
 8002948:	681b      	ldr	r3, [r3, #0]
 800294a:	f022 6270 	bic.w	r2, r2, #251658240	@ 0xf000000
 800294e:	609a      	str	r2, [r3, #8]
 8002950:	687b      	ldr	r3, [r7, #4]
 8002952:	681b      	ldr	r3, [r3, #0]
 8002954:	6899      	ldr	r1, [r3, #8]
 8002956:	687b      	ldr	r3, [r7, #4]
 8002958:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 800295a:	687b      	ldr	r3, [r7, #4]
 800295c:	681b      	ldr	r3, [r3, #0]
 800295e:	430a      	orrs	r2, r1
 8002960:	609a      	str	r2, [r3, #8]
 8002962:	687b      	ldr	r3, [r7, #4]
 8002964:	681b      	ldr	r3, [r3, #0]
 8002966:	689a      	ldr	r2, [r3, #8]
 8002968:	687b      	ldr	r3, [r7, #4]
 800296a:	681b      	ldr	r3, [r3, #0]
 800296c:	f022 5240 	bic.w	r2, r2, #805306368	@ 0x30000000
 8002970:	609a      	str	r2, [r3, #8]
 8002972:	687b      	ldr	r3, [r7, #4]
 8002974:	681b      	ldr	r3, [r3, #0]
 8002976:	6899      	ldr	r1, [r3, #8]
 8002978:	687b      	ldr	r3, [r7, #4]
 800297a:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800297c:	687b      	ldr	r3, [r7, #4]
 800297e:	681b      	ldr	r3, [r3, #0]
 8002980:	430a      	orrs	r2, r1
 8002982:	609a      	str	r2, [r3, #8]
 8002984:	e00f      	b.n	80029a6 <ADC_Init+0xfe>
 8002986:	687b      	ldr	r3, [r7, #4]
 8002988:	681b      	ldr	r3, [r3, #0]
 800298a:	689a      	ldr	r2, [r3, #8]
 800298c:	687b      	ldr	r3, [r7, #4]
 800298e:	681b      	ldr	r3, [r3, #0]
 8002990:	f022 6270 	bic.w	r2, r2, #251658240	@ 0xf000000
 8002994:	609a      	str	r2, [r3, #8]
 8002996:	687b      	ldr	r3, [r7, #4]
 8002998:	681b      	ldr	r3, [r3, #0]
 800299a:	689a      	ldr	r2, [r3, #8]
 800299c:	687b      	ldr	r3, [r7, #4]
 800299e:	681b      	ldr	r3, [r3, #0]
 80029a0:	f022 5240 	bic.w	r2, r2, #805306368	@ 0x30000000
 80029a4:	609a      	str	r2, [r3, #8]
 80029a6:	687b      	ldr	r3, [r7, #4]
 80029a8:	681b      	ldr	r3, [r3, #0]
 80029aa:	689a      	ldr	r2, [r3, #8]
 80029ac:	687b      	ldr	r3, [r7, #4]
 80029ae:	681b      	ldr	r3, [r3, #0]
 80029b0:	f022 0202 	bic.w	r2, r2, #2
 80029b4:	609a      	str	r2, [r3, #8]
 80029b6:	687b      	ldr	r3, [r7, #4]
 80029b8:	681b      	ldr	r3, [r3, #0]
 80029ba:	6899      	ldr	r1, [r3, #8]
 80029bc:	687b      	ldr	r3, [r7, #4]
 80029be:	7e1b      	ldrb	r3, [r3, #24]
 80029c0:	005a      	lsls	r2, r3, #1
 80029c2:	687b      	ldr	r3, [r7, #4]
 80029c4:	681b      	ldr	r3, [r3, #0]
 80029c6:	430a      	orrs	r2, r1
 80029c8:	609a      	str	r2, [r3, #8]
 80029ca:	687b      	ldr	r3, [r7, #4]
 80029cc:	f893 3020 	ldrb.w	r3, [r3, #32]
 80029d0:	2b00      	cmp	r3, #0
 80029d2:	d01b      	beq.n	8002a0c <ADC_Init+0x164>
 80029d4:	687b      	ldr	r3, [r7, #4]
 80029d6:	681b      	ldr	r3, [r3, #0]
 80029d8:	685a      	ldr	r2, [r3, #4]
 80029da:	687b      	ldr	r3, [r7, #4]
 80029dc:	681b      	ldr	r3, [r3, #0]
 80029de:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 80029e2:	605a      	str	r2, [r3, #4]
 80029e4:	687b      	ldr	r3, [r7, #4]
 80029e6:	681b      	ldr	r3, [r3, #0]
 80029e8:	685a      	ldr	r2, [r3, #4]
 80029ea:	687b      	ldr	r3, [r7, #4]
 80029ec:	681b      	ldr	r3, [r3, #0]
 80029ee:	f422 4260 	bic.w	r2, r2, #57344	@ 0xe000
 80029f2:	605a      	str	r2, [r3, #4]
 80029f4:	687b      	ldr	r3, [r7, #4]
 80029f6:	681b      	ldr	r3, [r3, #0]
 80029f8:	6859      	ldr	r1, [r3, #4]
 80029fa:	687b      	ldr	r3, [r7, #4]
 80029fc:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80029fe:	3b01      	subs	r3, #1
 8002a00:	035a      	lsls	r2, r3, #13
 8002a02:	687b      	ldr	r3, [r7, #4]
 8002a04:	681b      	ldr	r3, [r3, #0]
 8002a06:	430a      	orrs	r2, r1
 8002a08:	605a      	str	r2, [r3, #4]
 8002a0a:	e007      	b.n	8002a1c <ADC_Init+0x174>
 8002a0c:	687b      	ldr	r3, [r7, #4]
 8002a0e:	681b      	ldr	r3, [r3, #0]
 8002a10:	685a      	ldr	r2, [r3, #4]
 8002a12:	687b      	ldr	r3, [r7, #4]
 8002a14:	681b      	ldr	r3, [r3, #0]
 8002a16:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8002a1a:	605a      	str	r2, [r3, #4]
 8002a1c:	687b      	ldr	r3, [r7, #4]
 8002a1e:	681b      	ldr	r3, [r3, #0]
 8002a20:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8002a22:	687b      	ldr	r3, [r7, #4]
 8002a24:	681b      	ldr	r3, [r3, #0]
 8002a26:	f422 0270 	bic.w	r2, r2, #15728640	@ 0xf00000
 8002a2a:	62da      	str	r2, [r3, #44]	@ 0x2c
 8002a2c:	687b      	ldr	r3, [r7, #4]
 8002a2e:	681b      	ldr	r3, [r3, #0]
 8002a30:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 8002a32:	687b      	ldr	r3, [r7, #4]
 8002a34:	69db      	ldr	r3, [r3, #28]
 8002a36:	3b01      	subs	r3, #1
 8002a38:	051a      	lsls	r2, r3, #20
 8002a3a:	687b      	ldr	r3, [r7, #4]
 8002a3c:	681b      	ldr	r3, [r3, #0]
 8002a3e:	430a      	orrs	r2, r1
 8002a40:	62da      	str	r2, [r3, #44]	@ 0x2c
 8002a42:	687b      	ldr	r3, [r7, #4]
 8002a44:	681b      	ldr	r3, [r3, #0]
 8002a46:	689a      	ldr	r2, [r3, #8]
 8002a48:	687b      	ldr	r3, [r7, #4]
 8002a4a:	681b      	ldr	r3, [r3, #0]
 8002a4c:	f422 7200 	bic.w	r2, r2, #512	@ 0x200
 8002a50:	609a      	str	r2, [r3, #8]
 8002a52:	687b      	ldr	r3, [r7, #4]
 8002a54:	681b      	ldr	r3, [r3, #0]
 8002a56:	6899      	ldr	r1, [r3, #8]
 8002a58:	687b      	ldr	r3, [r7, #4]
 8002a5a:	f893 3030 	ldrb.w	r3, [r3, #48]	@ 0x30
 8002a5e:	025a      	lsls	r2, r3, #9
 8002a60:	687b      	ldr	r3, [r7, #4]
 8002a62:	681b      	ldr	r3, [r3, #0]
 8002a64:	430a      	orrs	r2, r1
 8002a66:	609a      	str	r2, [r3, #8]
 8002a68:	687b      	ldr	r3, [r7, #4]
 8002a6a:	681b      	ldr	r3, [r3, #0]
 8002a6c:	689a      	ldr	r2, [r3, #8]
 8002a6e:	687b      	ldr	r3, [r7, #4]
 8002a70:	681b      	ldr	r3, [r3, #0]
 8002a72:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8002a76:	609a      	str	r2, [r3, #8]
 8002a78:	687b      	ldr	r3, [r7, #4]
 8002a7a:	681b      	ldr	r3, [r3, #0]
 8002a7c:	6899      	ldr	r1, [r3, #8]
 8002a7e:	687b      	ldr	r3, [r7, #4]
 8002a80:	695b      	ldr	r3, [r3, #20]
 8002a82:	029a      	lsls	r2, r3, #10
 8002a84:	687b      	ldr	r3, [r7, #4]
 8002a86:	681b      	ldr	r3, [r3, #0]
 8002a88:	430a      	orrs	r2, r1
 8002a8a:	609a      	str	r2, [r3, #8]
 8002a8c:	bf00      	nop
 8002a8e:	3714      	adds	r7, #20
 8002a90:	46bd      	mov	sp, r7
 8002a92:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002a96:	4770      	bx	lr
 8002a98:	40012300 	.word	0x40012300
 8002a9c:	0f000001 	.word	0x0f000001

08002aa0 <__NVIC_SetPriorityGrouping>:
 8002aa0:	b480      	push	{r7}
 8002aa2:	b085      	sub	sp, #20
 8002aa4:	af00      	add	r7, sp, #0
 8002aa6:	6078      	str	r0, [r7, #4]
 8002aa8:	687b      	ldr	r3, [r7, #4]
 8002aaa:	f003 0307 	and.w	r3, r3, #7
 8002aae:	60fb      	str	r3, [r7, #12]
 8002ab0:	4b0c      	ldr	r3, [pc, #48]	@ (8002ae4 <__NVIC_SetPriorityGrouping+0x44>)
 8002ab2:	68db      	ldr	r3, [r3, #12]
 8002ab4:	60bb      	str	r3, [r7, #8]
 8002ab6:	68ba      	ldr	r2, [r7, #8]
 8002ab8:	f64f 03ff 	movw	r3, #63743	@ 0xf8ff
 8002abc:	4013      	ands	r3, r2
 8002abe:	60bb      	str	r3, [r7, #8]
 8002ac0:	68fb      	ldr	r3, [r7, #12]
 8002ac2:	021a      	lsls	r2, r3, #8
 8002ac4:	68bb      	ldr	r3, [r7, #8]
 8002ac6:	4313      	orrs	r3, r2
 8002ac8:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 8002acc:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8002ad0:	60bb      	str	r3, [r7, #8]
 8002ad2:	4a04      	ldr	r2, [pc, #16]	@ (8002ae4 <__NVIC_SetPriorityGrouping+0x44>)
 8002ad4:	68bb      	ldr	r3, [r7, #8]
 8002ad6:	60d3      	str	r3, [r2, #12]
 8002ad8:	bf00      	nop
 8002ada:	3714      	adds	r7, #20
 8002adc:	46bd      	mov	sp, r7
 8002ade:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002ae2:	4770      	bx	lr
 8002ae4:	e000ed00 	.word	0xe000ed00

08002ae8 <__NVIC_GetPriorityGrouping>:
 8002ae8:	b480      	push	{r7}
 8002aea:	af00      	add	r7, sp, #0
 8002aec:	4b04      	ldr	r3, [pc, #16]	@ (8002b00 <__NVIC_GetPriorityGrouping+0x18>)
 8002aee:	68db      	ldr	r3, [r3, #12]
 8002af0:	0a1b      	lsrs	r3, r3, #8
 8002af2:	f003 0307 	and.w	r3, r3, #7
 8002af6:	4618      	mov	r0, r3
 8002af8:	46bd      	mov	sp, r7
 8002afa:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002afe:	4770      	bx	lr
 8002b00:	e000ed00 	.word	0xe000ed00

08002b04 <__NVIC_EnableIRQ>:
 8002b04:	b480      	push	{r7}
 8002b06:	b083      	sub	sp, #12
 8002b08:	af00      	add	r7, sp, #0
 8002b0a:	4603      	mov	r3, r0
 8002b0c:	71fb      	strb	r3, [r7, #7]
 8002b0e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002b12:	2b00      	cmp	r3, #0
 8002b14:	db0b      	blt.n	8002b2e <__NVIC_EnableIRQ+0x2a>
 8002b16:	79fb      	ldrb	r3, [r7, #7]
 8002b18:	f003 021f 	and.w	r2, r3, #31
 8002b1c:	4907      	ldr	r1, [pc, #28]	@ (8002b3c <__NVIC_EnableIRQ+0x38>)
 8002b1e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002b22:	095b      	lsrs	r3, r3, #5
 8002b24:	2001      	movs	r0, #1
 8002b26:	fa00 f202 	lsl.w	r2, r0, r2
 8002b2a:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8002b2e:	bf00      	nop
 8002b30:	370c      	adds	r7, #12
 8002b32:	46bd      	mov	sp, r7
 8002b34:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002b38:	4770      	bx	lr
 8002b3a:	bf00      	nop
 8002b3c:	e000e100 	.word	0xe000e100

08002b40 <__NVIC_SetPriority>:
 8002b40:	b480      	push	{r7}
 8002b42:	b083      	sub	sp, #12
 8002b44:	af00      	add	r7, sp, #0
 8002b46:	4603      	mov	r3, r0
 8002b48:	6039      	str	r1, [r7, #0]
 8002b4a:	71fb      	strb	r3, [r7, #7]
 8002b4c:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002b50:	2b00      	cmp	r3, #0
 8002b52:	db0a      	blt.n	8002b6a <__NVIC_SetPriority+0x2a>
 8002b54:	683b      	ldr	r3, [r7, #0]
 8002b56:	b2da      	uxtb	r2, r3
 8002b58:	490c      	ldr	r1, [pc, #48]	@ (8002b8c <__NVIC_SetPriority+0x4c>)
 8002b5a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002b5e:	0112      	lsls	r2, r2, #4
 8002b60:	b2d2      	uxtb	r2, r2
 8002b62:	440b      	add	r3, r1
 8002b64:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
 8002b68:	e00a      	b.n	8002b80 <__NVIC_SetPriority+0x40>
 8002b6a:	683b      	ldr	r3, [r7, #0]
 8002b6c:	b2da      	uxtb	r2, r3
 8002b6e:	4908      	ldr	r1, [pc, #32]	@ (8002b90 <__NVIC_SetPriority+0x50>)
 8002b70:	79fb      	ldrb	r3, [r7, #7]
 8002b72:	f003 030f 	and.w	r3, r3, #15
 8002b76:	3b04      	subs	r3, #4
 8002b78:	0112      	lsls	r2, r2, #4
 8002b7a:	b2d2      	uxtb	r2, r2
 8002b7c:	440b      	add	r3, r1
 8002b7e:	761a      	strb	r2, [r3, #24]
 8002b80:	bf00      	nop
 8002b82:	370c      	adds	r7, #12
 8002b84:	46bd      	mov	sp, r7
 8002b86:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002b8a:	4770      	bx	lr
 8002b8c:	e000e100 	.word	0xe000e100
 8002b90:	e000ed00 	.word	0xe000ed00

08002b94 <NVIC_EncodePriority>:
 8002b94:	b480      	push	{r7}
 8002b96:	b089      	sub	sp, #36	@ 0x24
 8002b98:	af00      	add	r7, sp, #0
 8002b9a:	60f8      	str	r0, [r7, #12]
 8002b9c:	60b9      	str	r1, [r7, #8]
 8002b9e:	607a      	str	r2, [r7, #4]
 8002ba0:	68fb      	ldr	r3, [r7, #12]
 8002ba2:	f003 0307 	and.w	r3, r3, #7
 8002ba6:	61fb      	str	r3, [r7, #28]
 8002ba8:	69fb      	ldr	r3, [r7, #28]
 8002baa:	f1c3 0307 	rsb	r3, r3, #7
 8002bae:	2b04      	cmp	r3, #4
 8002bb0:	bf28      	it	cs
 8002bb2:	2304      	movcs	r3, #4
 8002bb4:	61bb      	str	r3, [r7, #24]
 8002bb6:	69fb      	ldr	r3, [r7, #28]
 8002bb8:	3304      	adds	r3, #4
 8002bba:	2b06      	cmp	r3, #6
 8002bbc:	d902      	bls.n	8002bc4 <NVIC_EncodePriority+0x30>
 8002bbe:	69fb      	ldr	r3, [r7, #28]
 8002bc0:	3b03      	subs	r3, #3
 8002bc2:	e000      	b.n	8002bc6 <NVIC_EncodePriority+0x32>
 8002bc4:	2300      	movs	r3, #0
 8002bc6:	617b      	str	r3, [r7, #20]
 8002bc8:	f04f 32ff 	mov.w	r2, #4294967295
 8002bcc:	69bb      	ldr	r3, [r7, #24]
 8002bce:	fa02 f303 	lsl.w	r3, r2, r3
 8002bd2:	43da      	mvns	r2, r3
 8002bd4:	68bb      	ldr	r3, [r7, #8]
 8002bd6:	401a      	ands	r2, r3
 8002bd8:	697b      	ldr	r3, [r7, #20]
 8002bda:	409a      	lsls	r2, r3
 8002bdc:	f04f 31ff 	mov.w	r1, #4294967295
 8002be0:	697b      	ldr	r3, [r7, #20]
 8002be2:	fa01 f303 	lsl.w	r3, r1, r3
 8002be6:	43d9      	mvns	r1, r3
 8002be8:	687b      	ldr	r3, [r7, #4]
 8002bea:	400b      	ands	r3, r1
 8002bec:	4313      	orrs	r3, r2
 8002bee:	4618      	mov	r0, r3
 8002bf0:	3724      	adds	r7, #36	@ 0x24
 8002bf2:	46bd      	mov	sp, r7
 8002bf4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002bf8:	4770      	bx	lr
	...

08002bfc <SysTick_Config>:
 8002bfc:	b580      	push	{r7, lr}
 8002bfe:	b082      	sub	sp, #8
 8002c00:	af00      	add	r7, sp, #0
 8002c02:	6078      	str	r0, [r7, #4]
 8002c04:	687b      	ldr	r3, [r7, #4]
 8002c06:	3b01      	subs	r3, #1
 8002c08:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8002c0c:	d301      	bcc.n	8002c12 <SysTick_Config+0x16>
 8002c0e:	2301      	movs	r3, #1
 8002c10:	e00f      	b.n	8002c32 <SysTick_Config+0x36>
 8002c12:	4a0a      	ldr	r2, [pc, #40]	@ (8002c3c <SysTick_Config+0x40>)
 8002c14:	687b      	ldr	r3, [r7, #4]
 8002c16:	3b01      	subs	r3, #1
 8002c18:	6053      	str	r3, [r2, #4]
 8002c1a:	210f      	movs	r1, #15
 8002c1c:	f04f 30ff 	mov.w	r0, #4294967295
 8002c20:	f7ff ff8e 	bl	8002b40 <__NVIC_SetPriority>
 8002c24:	4b05      	ldr	r3, [pc, #20]	@ (8002c3c <SysTick_Config+0x40>)
 8002c26:	2200      	movs	r2, #0
 8002c28:	609a      	str	r2, [r3, #8]
 8002c2a:	4b04      	ldr	r3, [pc, #16]	@ (8002c3c <SysTick_Config+0x40>)
 8002c2c:	2207      	movs	r2, #7
 8002c2e:	601a      	str	r2, [r3, #0]
 8002c30:	2300      	movs	r3, #0
 8002c32:	4618      	mov	r0, r3
 8002c34:	3708      	adds	r7, #8
 8002c36:	46bd      	mov	sp, r7
 8002c38:	bd80      	pop	{r7, pc}
 8002c3a:	bf00      	nop
 8002c3c:	e000e010 	.word	0xe000e010

08002c40 <HAL_NVIC_SetPriorityGrouping>:
 8002c40:	b580      	push	{r7, lr}
 8002c42:	b082      	sub	sp, #8
 8002c44:	af00      	add	r7, sp, #0
 8002c46:	6078      	str	r0, [r7, #4]
 8002c48:	6878      	ldr	r0, [r7, #4]
 8002c4a:	f7ff ff29 	bl	8002aa0 <__NVIC_SetPriorityGrouping>
 8002c4e:	bf00      	nop
 8002c50:	3708      	adds	r7, #8
 8002c52:	46bd      	mov	sp, r7
 8002c54:	bd80      	pop	{r7, pc}

08002c56 <HAL_NVIC_SetPriority>:
 8002c56:	b580      	push	{r7, lr}
 8002c58:	b086      	sub	sp, #24
 8002c5a:	af00      	add	r7, sp, #0
 8002c5c:	4603      	mov	r3, r0
 8002c5e:	60b9      	str	r1, [r7, #8]
 8002c60:	607a      	str	r2, [r7, #4]
 8002c62:	73fb      	strb	r3, [r7, #15]
 8002c64:	2300      	movs	r3, #0
 8002c66:	617b      	str	r3, [r7, #20]
 8002c68:	f7ff ff3e 	bl	8002ae8 <__NVIC_GetPriorityGrouping>
 8002c6c:	6178      	str	r0, [r7, #20]
 8002c6e:	687a      	ldr	r2, [r7, #4]
 8002c70:	68b9      	ldr	r1, [r7, #8]
 8002c72:	6978      	ldr	r0, [r7, #20]
 8002c74:	f7ff ff8e 	bl	8002b94 <NVIC_EncodePriority>
 8002c78:	4602      	mov	r2, r0
 8002c7a:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8002c7e:	4611      	mov	r1, r2
 8002c80:	4618      	mov	r0, r3
 8002c82:	f7ff ff5d 	bl	8002b40 <__NVIC_SetPriority>
 8002c86:	bf00      	nop
 8002c88:	3718      	adds	r7, #24
 8002c8a:	46bd      	mov	sp, r7
 8002c8c:	bd80      	pop	{r7, pc}

08002c8e <HAL_NVIC_EnableIRQ>:
 8002c8e:	b580      	push	{r7, lr}
 8002c90:	b082      	sub	sp, #8
 8002c92:	af00      	add	r7, sp, #0
 8002c94:	4603      	mov	r3, r0
 8002c96:	71fb      	strb	r3, [r7, #7]
 8002c98:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002c9c:	4618      	mov	r0, r3
 8002c9e:	f7ff ff31 	bl	8002b04 <__NVIC_EnableIRQ>
 8002ca2:	bf00      	nop
 8002ca4:	3708      	adds	r7, #8
 8002ca6:	46bd      	mov	sp, r7
 8002ca8:	bd80      	pop	{r7, pc}

08002caa <HAL_SYSTICK_Config>:
 8002caa:	b580      	push	{r7, lr}
 8002cac:	b082      	sub	sp, #8
 8002cae:	af00      	add	r7, sp, #0
 8002cb0:	6078      	str	r0, [r7, #4]
 8002cb2:	6878      	ldr	r0, [r7, #4]
 8002cb4:	f7ff ffa2 	bl	8002bfc <SysTick_Config>
 8002cb8:	4603      	mov	r3, r0
 8002cba:	4618      	mov	r0, r3
 8002cbc:	3708      	adds	r7, #8
 8002cbe:	46bd      	mov	sp, r7
 8002cc0:	bd80      	pop	{r7, pc}
	...

08002cc4 <HAL_GPIO_Init>:
 8002cc4:	b480      	push	{r7}
 8002cc6:	b089      	sub	sp, #36	@ 0x24
 8002cc8:	af00      	add	r7, sp, #0
 8002cca:	6078      	str	r0, [r7, #4]
 8002ccc:	6039      	str	r1, [r7, #0]
 8002cce:	2300      	movs	r3, #0
 8002cd0:	617b      	str	r3, [r7, #20]
 8002cd2:	2300      	movs	r3, #0
 8002cd4:	613b      	str	r3, [r7, #16]
 8002cd6:	2300      	movs	r3, #0
 8002cd8:	61bb      	str	r3, [r7, #24]
 8002cda:	2300      	movs	r3, #0
 8002cdc:	61fb      	str	r3, [r7, #28]
 8002cde:	e159      	b.n	8002f94 <HAL_GPIO_Init+0x2d0>
 8002ce0:	2201      	movs	r2, #1
 8002ce2:	69fb      	ldr	r3, [r7, #28]
 8002ce4:	fa02 f303 	lsl.w	r3, r2, r3
 8002ce8:	617b      	str	r3, [r7, #20]
 8002cea:	683b      	ldr	r3, [r7, #0]
 8002cec:	681b      	ldr	r3, [r3, #0]
 8002cee:	697a      	ldr	r2, [r7, #20]
 8002cf0:	4013      	ands	r3, r2
 8002cf2:	613b      	str	r3, [r7, #16]
 8002cf4:	693a      	ldr	r2, [r7, #16]
 8002cf6:	697b      	ldr	r3, [r7, #20]
 8002cf8:	429a      	cmp	r2, r3
 8002cfa:	f040 8148 	bne.w	8002f8e <HAL_GPIO_Init+0x2ca>
 8002cfe:	683b      	ldr	r3, [r7, #0]
 8002d00:	685b      	ldr	r3, [r3, #4]
 8002d02:	f003 0303 	and.w	r3, r3, #3
 8002d06:	2b01      	cmp	r3, #1
 8002d08:	d005      	beq.n	8002d16 <HAL_GPIO_Init+0x52>
 8002d0a:	683b      	ldr	r3, [r7, #0]
 8002d0c:	685b      	ldr	r3, [r3, #4]
 8002d0e:	f003 0303 	and.w	r3, r3, #3
 8002d12:	2b02      	cmp	r3, #2
 8002d14:	d130      	bne.n	8002d78 <HAL_GPIO_Init+0xb4>
 8002d16:	687b      	ldr	r3, [r7, #4]
 8002d18:	689b      	ldr	r3, [r3, #8]
 8002d1a:	61bb      	str	r3, [r7, #24]
 8002d1c:	69fb      	ldr	r3, [r7, #28]
 8002d1e:	005b      	lsls	r3, r3, #1
 8002d20:	2203      	movs	r2, #3
 8002d22:	fa02 f303 	lsl.w	r3, r2, r3
 8002d26:	43db      	mvns	r3, r3
 8002d28:	69ba      	ldr	r2, [r7, #24]
 8002d2a:	4013      	ands	r3, r2
 8002d2c:	61bb      	str	r3, [r7, #24]
 8002d2e:	683b      	ldr	r3, [r7, #0]
 8002d30:	68da      	ldr	r2, [r3, #12]
 8002d32:	69fb      	ldr	r3, [r7, #28]
 8002d34:	005b      	lsls	r3, r3, #1
 8002d36:	fa02 f303 	lsl.w	r3, r2, r3
 8002d3a:	69ba      	ldr	r2, [r7, #24]
 8002d3c:	4313      	orrs	r3, r2
 8002d3e:	61bb      	str	r3, [r7, #24]
 8002d40:	687b      	ldr	r3, [r7, #4]
 8002d42:	69ba      	ldr	r2, [r7, #24]
 8002d44:	609a      	str	r2, [r3, #8]
 8002d46:	687b      	ldr	r3, [r7, #4]
 8002d48:	685b      	ldr	r3, [r3, #4]
 8002d4a:	61bb      	str	r3, [r7, #24]
 8002d4c:	2201      	movs	r2, #1
 8002d4e:	69fb      	ldr	r3, [r7, #28]
 8002d50:	fa02 f303 	lsl.w	r3, r2, r3
 8002d54:	43db      	mvns	r3, r3
 8002d56:	69ba      	ldr	r2, [r7, #24]
 8002d58:	4013      	ands	r3, r2
 8002d5a:	61bb      	str	r3, [r7, #24]
 8002d5c:	683b      	ldr	r3, [r7, #0]
 8002d5e:	685b      	ldr	r3, [r3, #4]
 8002d60:	091b      	lsrs	r3, r3, #4
 8002d62:	f003 0201 	and.w	r2, r3, #1
 8002d66:	69fb      	ldr	r3, [r7, #28]
 8002d68:	fa02 f303 	lsl.w	r3, r2, r3
 8002d6c:	69ba      	ldr	r2, [r7, #24]
 8002d6e:	4313      	orrs	r3, r2
 8002d70:	61bb      	str	r3, [r7, #24]
 8002d72:	687b      	ldr	r3, [r7, #4]
 8002d74:	69ba      	ldr	r2, [r7, #24]
 8002d76:	605a      	str	r2, [r3, #4]
 8002d78:	683b      	ldr	r3, [r7, #0]
 8002d7a:	685b      	ldr	r3, [r3, #4]
 8002d7c:	f003 0303 	and.w	r3, r3, #3
 8002d80:	2b03      	cmp	r3, #3
 8002d82:	d017      	beq.n	8002db4 <HAL_GPIO_Init+0xf0>
 8002d84:	687b      	ldr	r3, [r7, #4]
 8002d86:	68db      	ldr	r3, [r3, #12]
 8002d88:	61bb      	str	r3, [r7, #24]
 8002d8a:	69fb      	ldr	r3, [r7, #28]
 8002d8c:	005b      	lsls	r3, r3, #1
 8002d8e:	2203      	movs	r2, #3
 8002d90:	fa02 f303 	lsl.w	r3, r2, r3
 8002d94:	43db      	mvns	r3, r3
 8002d96:	69ba      	ldr	r2, [r7, #24]
 8002d98:	4013      	ands	r3, r2
 8002d9a:	61bb      	str	r3, [r7, #24]
 8002d9c:	683b      	ldr	r3, [r7, #0]
 8002d9e:	689a      	ldr	r2, [r3, #8]
 8002da0:	69fb      	ldr	r3, [r7, #28]
 8002da2:	005b      	lsls	r3, r3, #1
 8002da4:	fa02 f303 	lsl.w	r3, r2, r3
 8002da8:	69ba      	ldr	r2, [r7, #24]
 8002daa:	4313      	orrs	r3, r2
 8002dac:	61bb      	str	r3, [r7, #24]
 8002dae:	687b      	ldr	r3, [r7, #4]
 8002db0:	69ba      	ldr	r2, [r7, #24]
 8002db2:	60da      	str	r2, [r3, #12]
 8002db4:	683b      	ldr	r3, [r7, #0]
 8002db6:	685b      	ldr	r3, [r3, #4]
 8002db8:	f003 0303 	and.w	r3, r3, #3
 8002dbc:	2b02      	cmp	r3, #2
 8002dbe:	d123      	bne.n	8002e08 <HAL_GPIO_Init+0x144>
 8002dc0:	69fb      	ldr	r3, [r7, #28]
 8002dc2:	08da      	lsrs	r2, r3, #3
 8002dc4:	687b      	ldr	r3, [r7, #4]
 8002dc6:	3208      	adds	r2, #8
 8002dc8:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8002dcc:	61bb      	str	r3, [r7, #24]
 8002dce:	69fb      	ldr	r3, [r7, #28]
 8002dd0:	f003 0307 	and.w	r3, r3, #7
 8002dd4:	009b      	lsls	r3, r3, #2
 8002dd6:	220f      	movs	r2, #15
 8002dd8:	fa02 f303 	lsl.w	r3, r2, r3
 8002ddc:	43db      	mvns	r3, r3
 8002dde:	69ba      	ldr	r2, [r7, #24]
 8002de0:	4013      	ands	r3, r2
 8002de2:	61bb      	str	r3, [r7, #24]
 8002de4:	683b      	ldr	r3, [r7, #0]
 8002de6:	691a      	ldr	r2, [r3, #16]
 8002de8:	69fb      	ldr	r3, [r7, #28]
 8002dea:	f003 0307 	and.w	r3, r3, #7
 8002dee:	009b      	lsls	r3, r3, #2
 8002df0:	fa02 f303 	lsl.w	r3, r2, r3
 8002df4:	69ba      	ldr	r2, [r7, #24]
 8002df6:	4313      	orrs	r3, r2
 8002df8:	61bb      	str	r3, [r7, #24]
 8002dfa:	69fb      	ldr	r3, [r7, #28]
 8002dfc:	08da      	lsrs	r2, r3, #3
 8002dfe:	687b      	ldr	r3, [r7, #4]
 8002e00:	3208      	adds	r2, #8
 8002e02:	69b9      	ldr	r1, [r7, #24]
 8002e04:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8002e08:	687b      	ldr	r3, [r7, #4]
 8002e0a:	681b      	ldr	r3, [r3, #0]
 8002e0c:	61bb      	str	r3, [r7, #24]
 8002e0e:	69fb      	ldr	r3, [r7, #28]
 8002e10:	005b      	lsls	r3, r3, #1
 8002e12:	2203      	movs	r2, #3
 8002e14:	fa02 f303 	lsl.w	r3, r2, r3
 8002e18:	43db      	mvns	r3, r3
 8002e1a:	69ba      	ldr	r2, [r7, #24]
 8002e1c:	4013      	ands	r3, r2
 8002e1e:	61bb      	str	r3, [r7, #24]
 8002e20:	683b      	ldr	r3, [r7, #0]
 8002e22:	685b      	ldr	r3, [r3, #4]
 8002e24:	f003 0203 	and.w	r2, r3, #3
 8002e28:	69fb      	ldr	r3, [r7, #28]
 8002e2a:	005b      	lsls	r3, r3, #1
 8002e2c:	fa02 f303 	lsl.w	r3, r2, r3
 8002e30:	69ba      	ldr	r2, [r7, #24]
 8002e32:	4313      	orrs	r3, r2
 8002e34:	61bb      	str	r3, [r7, #24]
 8002e36:	687b      	ldr	r3, [r7, #4]
 8002e38:	69ba      	ldr	r2, [r7, #24]
 8002e3a:	601a      	str	r2, [r3, #0]
 8002e3c:	683b      	ldr	r3, [r7, #0]
 8002e3e:	685b      	ldr	r3, [r3, #4]
 8002e40:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 8002e44:	2b00      	cmp	r3, #0
 8002e46:	f000 80a2 	beq.w	8002f8e <HAL_GPIO_Init+0x2ca>
 8002e4a:	2300      	movs	r3, #0
 8002e4c:	60fb      	str	r3, [r7, #12]
 8002e4e:	4b57      	ldr	r3, [pc, #348]	@ (8002fac <HAL_GPIO_Init+0x2e8>)
 8002e50:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002e52:	4a56      	ldr	r2, [pc, #344]	@ (8002fac <HAL_GPIO_Init+0x2e8>)
 8002e54:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8002e58:	6453      	str	r3, [r2, #68]	@ 0x44
 8002e5a:	4b54      	ldr	r3, [pc, #336]	@ (8002fac <HAL_GPIO_Init+0x2e8>)
 8002e5c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002e5e:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8002e62:	60fb      	str	r3, [r7, #12]
 8002e64:	68fb      	ldr	r3, [r7, #12]
 8002e66:	4a52      	ldr	r2, [pc, #328]	@ (8002fb0 <HAL_GPIO_Init+0x2ec>)
 8002e68:	69fb      	ldr	r3, [r7, #28]
 8002e6a:	089b      	lsrs	r3, r3, #2
 8002e6c:	3302      	adds	r3, #2
 8002e6e:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8002e72:	61bb      	str	r3, [r7, #24]
 8002e74:	69fb      	ldr	r3, [r7, #28]
 8002e76:	f003 0303 	and.w	r3, r3, #3
 8002e7a:	009b      	lsls	r3, r3, #2
 8002e7c:	220f      	movs	r2, #15
 8002e7e:	fa02 f303 	lsl.w	r3, r2, r3
 8002e82:	43db      	mvns	r3, r3
 8002e84:	69ba      	ldr	r2, [r7, #24]
 8002e86:	4013      	ands	r3, r2
 8002e88:	61bb      	str	r3, [r7, #24]
 8002e8a:	687b      	ldr	r3, [r7, #4]
 8002e8c:	4a49      	ldr	r2, [pc, #292]	@ (8002fb4 <HAL_GPIO_Init+0x2f0>)
 8002e8e:	4293      	cmp	r3, r2
 8002e90:	d019      	beq.n	8002ec6 <HAL_GPIO_Init+0x202>
 8002e92:	687b      	ldr	r3, [r7, #4]
 8002e94:	4a48      	ldr	r2, [pc, #288]	@ (8002fb8 <HAL_GPIO_Init+0x2f4>)
 8002e96:	4293      	cmp	r3, r2
 8002e98:	d013      	beq.n	8002ec2 <HAL_GPIO_Init+0x1fe>
 8002e9a:	687b      	ldr	r3, [r7, #4]
 8002e9c:	4a47      	ldr	r2, [pc, #284]	@ (8002fbc <HAL_GPIO_Init+0x2f8>)
 8002e9e:	4293      	cmp	r3, r2
 8002ea0:	d00d      	beq.n	8002ebe <HAL_GPIO_Init+0x1fa>
 8002ea2:	687b      	ldr	r3, [r7, #4]
 8002ea4:	4a46      	ldr	r2, [pc, #280]	@ (8002fc0 <HAL_GPIO_Init+0x2fc>)
 8002ea6:	4293      	cmp	r3, r2
 8002ea8:	d007      	beq.n	8002eba <HAL_GPIO_Init+0x1f6>
 8002eaa:	687b      	ldr	r3, [r7, #4]
 8002eac:	4a45      	ldr	r2, [pc, #276]	@ (8002fc4 <HAL_GPIO_Init+0x300>)
 8002eae:	4293      	cmp	r3, r2
 8002eb0:	d101      	bne.n	8002eb6 <HAL_GPIO_Init+0x1f2>
 8002eb2:	2304      	movs	r3, #4
 8002eb4:	e008      	b.n	8002ec8 <HAL_GPIO_Init+0x204>
 8002eb6:	2307      	movs	r3, #7
 8002eb8:	e006      	b.n	8002ec8 <HAL_GPIO_Init+0x204>
 8002eba:	2303      	movs	r3, #3
 8002ebc:	e004      	b.n	8002ec8 <HAL_GPIO_Init+0x204>
 8002ebe:	2302      	movs	r3, #2
 8002ec0:	e002      	b.n	8002ec8 <HAL_GPIO_Init+0x204>
 8002ec2:	2301      	movs	r3, #1
 8002ec4:	e000      	b.n	8002ec8 <HAL_GPIO_Init+0x204>
 8002ec6:	2300      	movs	r3, #0
 8002ec8:	69fa      	ldr	r2, [r7, #28]
 8002eca:	f002 0203 	and.w	r2, r2, #3
 8002ece:	0092      	lsls	r2, r2, #2
 8002ed0:	4093      	lsls	r3, r2
 8002ed2:	69ba      	ldr	r2, [r7, #24]
 8002ed4:	4313      	orrs	r3, r2
 8002ed6:	61bb      	str	r3, [r7, #24]
 8002ed8:	4935      	ldr	r1, [pc, #212]	@ (8002fb0 <HAL_GPIO_Init+0x2ec>)
 8002eda:	69fb      	ldr	r3, [r7, #28]
 8002edc:	089b      	lsrs	r3, r3, #2
 8002ede:	3302      	adds	r3, #2
 8002ee0:	69ba      	ldr	r2, [r7, #24]
 8002ee2:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8002ee6:	4b38      	ldr	r3, [pc, #224]	@ (8002fc8 <HAL_GPIO_Init+0x304>)
 8002ee8:	689b      	ldr	r3, [r3, #8]
 8002eea:	61bb      	str	r3, [r7, #24]
 8002eec:	693b      	ldr	r3, [r7, #16]
 8002eee:	43db      	mvns	r3, r3
 8002ef0:	69ba      	ldr	r2, [r7, #24]
 8002ef2:	4013      	ands	r3, r2
 8002ef4:	61bb      	str	r3, [r7, #24]
 8002ef6:	683b      	ldr	r3, [r7, #0]
 8002ef8:	685b      	ldr	r3, [r3, #4]
 8002efa:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 8002efe:	2b00      	cmp	r3, #0
 8002f00:	d003      	beq.n	8002f0a <HAL_GPIO_Init+0x246>
 8002f02:	69ba      	ldr	r2, [r7, #24]
 8002f04:	693b      	ldr	r3, [r7, #16]
 8002f06:	4313      	orrs	r3, r2
 8002f08:	61bb      	str	r3, [r7, #24]
 8002f0a:	4a2f      	ldr	r2, [pc, #188]	@ (8002fc8 <HAL_GPIO_Init+0x304>)
 8002f0c:	69bb      	ldr	r3, [r7, #24]
 8002f0e:	6093      	str	r3, [r2, #8]
 8002f10:	4b2d      	ldr	r3, [pc, #180]	@ (8002fc8 <HAL_GPIO_Init+0x304>)
 8002f12:	68db      	ldr	r3, [r3, #12]
 8002f14:	61bb      	str	r3, [r7, #24]
 8002f16:	693b      	ldr	r3, [r7, #16]
 8002f18:	43db      	mvns	r3, r3
 8002f1a:	69ba      	ldr	r2, [r7, #24]
 8002f1c:	4013      	ands	r3, r2
 8002f1e:	61bb      	str	r3, [r7, #24]
 8002f20:	683b      	ldr	r3, [r7, #0]
 8002f22:	685b      	ldr	r3, [r3, #4]
 8002f24:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8002f28:	2b00      	cmp	r3, #0
 8002f2a:	d003      	beq.n	8002f34 <HAL_GPIO_Init+0x270>
 8002f2c:	69ba      	ldr	r2, [r7, #24]
 8002f2e:	693b      	ldr	r3, [r7, #16]
 8002f30:	4313      	orrs	r3, r2
 8002f32:	61bb      	str	r3, [r7, #24]
 8002f34:	4a24      	ldr	r2, [pc, #144]	@ (8002fc8 <HAL_GPIO_Init+0x304>)
 8002f36:	69bb      	ldr	r3, [r7, #24]
 8002f38:	60d3      	str	r3, [r2, #12]
 8002f3a:	4b23      	ldr	r3, [pc, #140]	@ (8002fc8 <HAL_GPIO_Init+0x304>)
 8002f3c:	685b      	ldr	r3, [r3, #4]
 8002f3e:	61bb      	str	r3, [r7, #24]
 8002f40:	693b      	ldr	r3, [r7, #16]
 8002f42:	43db      	mvns	r3, r3
 8002f44:	69ba      	ldr	r2, [r7, #24]
 8002f46:	4013      	ands	r3, r2
 8002f48:	61bb      	str	r3, [r7, #24]
 8002f4a:	683b      	ldr	r3, [r7, #0]
 8002f4c:	685b      	ldr	r3, [r3, #4]
 8002f4e:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8002f52:	2b00      	cmp	r3, #0
 8002f54:	d003      	beq.n	8002f5e <HAL_GPIO_Init+0x29a>
 8002f56:	69ba      	ldr	r2, [r7, #24]
 8002f58:	693b      	ldr	r3, [r7, #16]
 8002f5a:	4313      	orrs	r3, r2
 8002f5c:	61bb      	str	r3, [r7, #24]
 8002f5e:	4a1a      	ldr	r2, [pc, #104]	@ (8002fc8 <HAL_GPIO_Init+0x304>)
 8002f60:	69bb      	ldr	r3, [r7, #24]
 8002f62:	6053      	str	r3, [r2, #4]
 8002f64:	4b18      	ldr	r3, [pc, #96]	@ (8002fc8 <HAL_GPIO_Init+0x304>)
 8002f66:	681b      	ldr	r3, [r3, #0]
 8002f68:	61bb      	str	r3, [r7, #24]
 8002f6a:	693b      	ldr	r3, [r7, #16]
 8002f6c:	43db      	mvns	r3, r3
 8002f6e:	69ba      	ldr	r2, [r7, #24]
 8002f70:	4013      	ands	r3, r2
 8002f72:	61bb      	str	r3, [r7, #24]
 8002f74:	683b      	ldr	r3, [r7, #0]
 8002f76:	685b      	ldr	r3, [r3, #4]
 8002f78:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8002f7c:	2b00      	cmp	r3, #0
 8002f7e:	d003      	beq.n	8002f88 <HAL_GPIO_Init+0x2c4>
 8002f80:	69ba      	ldr	r2, [r7, #24]
 8002f82:	693b      	ldr	r3, [r7, #16]
 8002f84:	4313      	orrs	r3, r2
 8002f86:	61bb      	str	r3, [r7, #24]
 8002f88:	4a0f      	ldr	r2, [pc, #60]	@ (8002fc8 <HAL_GPIO_Init+0x304>)
 8002f8a:	69bb      	ldr	r3, [r7, #24]
 8002f8c:	6013      	str	r3, [r2, #0]
 8002f8e:	69fb      	ldr	r3, [r7, #28]
 8002f90:	3301      	adds	r3, #1
 8002f92:	61fb      	str	r3, [r7, #28]
 8002f94:	69fb      	ldr	r3, [r7, #28]
 8002f96:	2b0f      	cmp	r3, #15
 8002f98:	f67f aea2 	bls.w	8002ce0 <HAL_GPIO_Init+0x1c>
 8002f9c:	bf00      	nop
 8002f9e:	bf00      	nop
 8002fa0:	3724      	adds	r7, #36	@ 0x24
 8002fa2:	46bd      	mov	sp, r7
 8002fa4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002fa8:	4770      	bx	lr
 8002faa:	bf00      	nop
 8002fac:	40023800 	.word	0x40023800
 8002fb0:	40013800 	.word	0x40013800
 8002fb4:	40020000 	.word	0x40020000
 8002fb8:	40020400 	.word	0x40020400
 8002fbc:	40020800 	.word	0x40020800
 8002fc0:	40020c00 	.word	0x40020c00
 8002fc4:	40021000 	.word	0x40021000
 8002fc8:	40013c00 	.word	0x40013c00

08002fcc <HAL_GPIO_ReadPin>:
 8002fcc:	b480      	push	{r7}
 8002fce:	b085      	sub	sp, #20
 8002fd0:	af00      	add	r7, sp, #0
 8002fd2:	6078      	str	r0, [r7, #4]
 8002fd4:	460b      	mov	r3, r1
 8002fd6:	807b      	strh	r3, [r7, #2]
 8002fd8:	687b      	ldr	r3, [r7, #4]
 8002fda:	691a      	ldr	r2, [r3, #16]
 8002fdc:	887b      	ldrh	r3, [r7, #2]
 8002fde:	4013      	ands	r3, r2
 8002fe0:	2b00      	cmp	r3, #0
 8002fe2:	d002      	beq.n	8002fea <HAL_GPIO_ReadPin+0x1e>
 8002fe4:	2301      	movs	r3, #1
 8002fe6:	73fb      	strb	r3, [r7, #15]
 8002fe8:	e001      	b.n	8002fee <HAL_GPIO_ReadPin+0x22>
 8002fea:	2300      	movs	r3, #0
 8002fec:	73fb      	strb	r3, [r7, #15]
 8002fee:	7bfb      	ldrb	r3, [r7, #15]
 8002ff0:	4618      	mov	r0, r3
 8002ff2:	3714      	adds	r7, #20
 8002ff4:	46bd      	mov	sp, r7
 8002ff6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002ffa:	4770      	bx	lr

08002ffc <HAL_GPIO_WritePin>:
 8002ffc:	b480      	push	{r7}
 8002ffe:	b083      	sub	sp, #12
 8003000:	af00      	add	r7, sp, #0
 8003002:	6078      	str	r0, [r7, #4]
 8003004:	460b      	mov	r3, r1
 8003006:	807b      	strh	r3, [r7, #2]
 8003008:	4613      	mov	r3, r2
 800300a:	707b      	strb	r3, [r7, #1]
 800300c:	787b      	ldrb	r3, [r7, #1]
 800300e:	2b00      	cmp	r3, #0
 8003010:	d003      	beq.n	800301a <HAL_GPIO_WritePin+0x1e>
 8003012:	887a      	ldrh	r2, [r7, #2]
 8003014:	687b      	ldr	r3, [r7, #4]
 8003016:	619a      	str	r2, [r3, #24]
 8003018:	e003      	b.n	8003022 <HAL_GPIO_WritePin+0x26>
 800301a:	887b      	ldrh	r3, [r7, #2]
 800301c:	041a      	lsls	r2, r3, #16
 800301e:	687b      	ldr	r3, [r7, #4]
 8003020:	619a      	str	r2, [r3, #24]
 8003022:	bf00      	nop
 8003024:	370c      	adds	r7, #12
 8003026:	46bd      	mov	sp, r7
 8003028:	f85d 7b04 	ldr.w	r7, [sp], #4
 800302c:	4770      	bx	lr
	...

08003030 <HAL_GPIO_EXTI_IRQHandler>:
 8003030:	b580      	push	{r7, lr}
 8003032:	b082      	sub	sp, #8
 8003034:	af00      	add	r7, sp, #0
 8003036:	4603      	mov	r3, r0
 8003038:	80fb      	strh	r3, [r7, #6]
 800303a:	4b08      	ldr	r3, [pc, #32]	@ (800305c <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 800303c:	695a      	ldr	r2, [r3, #20]
 800303e:	88fb      	ldrh	r3, [r7, #6]
 8003040:	4013      	ands	r3, r2
 8003042:	2b00      	cmp	r3, #0
 8003044:	d006      	beq.n	8003054 <HAL_GPIO_EXTI_IRQHandler+0x24>
 8003046:	4a05      	ldr	r2, [pc, #20]	@ (800305c <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 8003048:	88fb      	ldrh	r3, [r7, #6]
 800304a:	6153      	str	r3, [r2, #20]
 800304c:	88fb      	ldrh	r3, [r7, #6]
 800304e:	4618      	mov	r0, r3
 8003050:	f7fe fae2 	bl	8001618 <HAL_GPIO_EXTI_Callback>
 8003054:	bf00      	nop
 8003056:	3708      	adds	r7, #8
 8003058:	46bd      	mov	sp, r7
 800305a:	bd80      	pop	{r7, pc}
 800305c:	40013c00 	.word	0x40013c00

08003060 <HAL_I2C_Init>:
 8003060:	b580      	push	{r7, lr}
 8003062:	b084      	sub	sp, #16
 8003064:	af00      	add	r7, sp, #0
 8003066:	6078      	str	r0, [r7, #4]
 8003068:	687b      	ldr	r3, [r7, #4]
 800306a:	2b00      	cmp	r3, #0
 800306c:	d101      	bne.n	8003072 <HAL_I2C_Init+0x12>
 800306e:	2301      	movs	r3, #1
 8003070:	e12b      	b.n	80032ca <HAL_I2C_Init+0x26a>
 8003072:	687b      	ldr	r3, [r7, #4]
 8003074:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8003078:	b2db      	uxtb	r3, r3
 800307a:	2b00      	cmp	r3, #0
 800307c:	d106      	bne.n	800308c <HAL_I2C_Init+0x2c>
 800307e:	687b      	ldr	r3, [r7, #4]
 8003080:	2200      	movs	r2, #0
 8003082:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8003086:	6878      	ldr	r0, [r7, #4]
 8003088:	f7fe fe2c 	bl	8001ce4 <HAL_I2C_MspInit>
 800308c:	687b      	ldr	r3, [r7, #4]
 800308e:	2224      	movs	r2, #36	@ 0x24
 8003090:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003094:	687b      	ldr	r3, [r7, #4]
 8003096:	681b      	ldr	r3, [r3, #0]
 8003098:	681a      	ldr	r2, [r3, #0]
 800309a:	687b      	ldr	r3, [r7, #4]
 800309c:	681b      	ldr	r3, [r3, #0]
 800309e:	f022 0201 	bic.w	r2, r2, #1
 80030a2:	601a      	str	r2, [r3, #0]
 80030a4:	687b      	ldr	r3, [r7, #4]
 80030a6:	681b      	ldr	r3, [r3, #0]
 80030a8:	681a      	ldr	r2, [r3, #0]
 80030aa:	687b      	ldr	r3, [r7, #4]
 80030ac:	681b      	ldr	r3, [r3, #0]
 80030ae:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 80030b2:	601a      	str	r2, [r3, #0]
 80030b4:	687b      	ldr	r3, [r7, #4]
 80030b6:	681b      	ldr	r3, [r3, #0]
 80030b8:	681a      	ldr	r2, [r3, #0]
 80030ba:	687b      	ldr	r3, [r7, #4]
 80030bc:	681b      	ldr	r3, [r3, #0]
 80030be:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 80030c2:	601a      	str	r2, [r3, #0]
 80030c4:	f001 f89a 	bl	80041fc <HAL_RCC_GetPCLK1Freq>
 80030c8:	60f8      	str	r0, [r7, #12]
 80030ca:	687b      	ldr	r3, [r7, #4]
 80030cc:	685b      	ldr	r3, [r3, #4]
 80030ce:	4a81      	ldr	r2, [pc, #516]	@ (80032d4 <HAL_I2C_Init+0x274>)
 80030d0:	4293      	cmp	r3, r2
 80030d2:	d807      	bhi.n	80030e4 <HAL_I2C_Init+0x84>
 80030d4:	68fb      	ldr	r3, [r7, #12]
 80030d6:	4a80      	ldr	r2, [pc, #512]	@ (80032d8 <HAL_I2C_Init+0x278>)
 80030d8:	4293      	cmp	r3, r2
 80030da:	bf94      	ite	ls
 80030dc:	2301      	movls	r3, #1
 80030de:	2300      	movhi	r3, #0
 80030e0:	b2db      	uxtb	r3, r3
 80030e2:	e006      	b.n	80030f2 <HAL_I2C_Init+0x92>
 80030e4:	68fb      	ldr	r3, [r7, #12]
 80030e6:	4a7d      	ldr	r2, [pc, #500]	@ (80032dc <HAL_I2C_Init+0x27c>)
 80030e8:	4293      	cmp	r3, r2
 80030ea:	bf94      	ite	ls
 80030ec:	2301      	movls	r3, #1
 80030ee:	2300      	movhi	r3, #0
 80030f0:	b2db      	uxtb	r3, r3
 80030f2:	2b00      	cmp	r3, #0
 80030f4:	d001      	beq.n	80030fa <HAL_I2C_Init+0x9a>
 80030f6:	2301      	movs	r3, #1
 80030f8:	e0e7      	b.n	80032ca <HAL_I2C_Init+0x26a>
 80030fa:	68fb      	ldr	r3, [r7, #12]
 80030fc:	4a78      	ldr	r2, [pc, #480]	@ (80032e0 <HAL_I2C_Init+0x280>)
 80030fe:	fba2 2303 	umull	r2, r3, r2, r3
 8003102:	0c9b      	lsrs	r3, r3, #18
 8003104:	60bb      	str	r3, [r7, #8]
 8003106:	687b      	ldr	r3, [r7, #4]
 8003108:	681b      	ldr	r3, [r3, #0]
 800310a:	685b      	ldr	r3, [r3, #4]
 800310c:	f023 013f 	bic.w	r1, r3, #63	@ 0x3f
 8003110:	687b      	ldr	r3, [r7, #4]
 8003112:	681b      	ldr	r3, [r3, #0]
 8003114:	68ba      	ldr	r2, [r7, #8]
 8003116:	430a      	orrs	r2, r1
 8003118:	605a      	str	r2, [r3, #4]
 800311a:	687b      	ldr	r3, [r7, #4]
 800311c:	681b      	ldr	r3, [r3, #0]
 800311e:	6a1b      	ldr	r3, [r3, #32]
 8003120:	f023 013f 	bic.w	r1, r3, #63	@ 0x3f
 8003124:	687b      	ldr	r3, [r7, #4]
 8003126:	685b      	ldr	r3, [r3, #4]
 8003128:	4a6a      	ldr	r2, [pc, #424]	@ (80032d4 <HAL_I2C_Init+0x274>)
 800312a:	4293      	cmp	r3, r2
 800312c:	d802      	bhi.n	8003134 <HAL_I2C_Init+0xd4>
 800312e:	68bb      	ldr	r3, [r7, #8]
 8003130:	3301      	adds	r3, #1
 8003132:	e009      	b.n	8003148 <HAL_I2C_Init+0xe8>
 8003134:	68bb      	ldr	r3, [r7, #8]
 8003136:	f44f 7296 	mov.w	r2, #300	@ 0x12c
 800313a:	fb02 f303 	mul.w	r3, r2, r3
 800313e:	4a69      	ldr	r2, [pc, #420]	@ (80032e4 <HAL_I2C_Init+0x284>)
 8003140:	fba2 2303 	umull	r2, r3, r2, r3
 8003144:	099b      	lsrs	r3, r3, #6
 8003146:	3301      	adds	r3, #1
 8003148:	687a      	ldr	r2, [r7, #4]
 800314a:	6812      	ldr	r2, [r2, #0]
 800314c:	430b      	orrs	r3, r1
 800314e:	6213      	str	r3, [r2, #32]
 8003150:	687b      	ldr	r3, [r7, #4]
 8003152:	681b      	ldr	r3, [r3, #0]
 8003154:	69db      	ldr	r3, [r3, #28]
 8003156:	f423 424f 	bic.w	r2, r3, #52992	@ 0xcf00
 800315a:	f022 02ff 	bic.w	r2, r2, #255	@ 0xff
 800315e:	687b      	ldr	r3, [r7, #4]
 8003160:	685b      	ldr	r3, [r3, #4]
 8003162:	495c      	ldr	r1, [pc, #368]	@ (80032d4 <HAL_I2C_Init+0x274>)
 8003164:	428b      	cmp	r3, r1
 8003166:	d819      	bhi.n	800319c <HAL_I2C_Init+0x13c>
 8003168:	68fb      	ldr	r3, [r7, #12]
 800316a:	1e59      	subs	r1, r3, #1
 800316c:	687b      	ldr	r3, [r7, #4]
 800316e:	685b      	ldr	r3, [r3, #4]
 8003170:	005b      	lsls	r3, r3, #1
 8003172:	fbb1 f3f3 	udiv	r3, r1, r3
 8003176:	1c59      	adds	r1, r3, #1
 8003178:	f640 73fc 	movw	r3, #4092	@ 0xffc
 800317c:	400b      	ands	r3, r1
 800317e:	2b00      	cmp	r3, #0
 8003180:	d00a      	beq.n	8003198 <HAL_I2C_Init+0x138>
 8003182:	68fb      	ldr	r3, [r7, #12]
 8003184:	1e59      	subs	r1, r3, #1
 8003186:	687b      	ldr	r3, [r7, #4]
 8003188:	685b      	ldr	r3, [r3, #4]
 800318a:	005b      	lsls	r3, r3, #1
 800318c:	fbb1 f3f3 	udiv	r3, r1, r3
 8003190:	3301      	adds	r3, #1
 8003192:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8003196:	e051      	b.n	800323c <HAL_I2C_Init+0x1dc>
 8003198:	2304      	movs	r3, #4
 800319a:	e04f      	b.n	800323c <HAL_I2C_Init+0x1dc>
 800319c:	687b      	ldr	r3, [r7, #4]
 800319e:	689b      	ldr	r3, [r3, #8]
 80031a0:	2b00      	cmp	r3, #0
 80031a2:	d111      	bne.n	80031c8 <HAL_I2C_Init+0x168>
 80031a4:	68fb      	ldr	r3, [r7, #12]
 80031a6:	1e58      	subs	r0, r3, #1
 80031a8:	687b      	ldr	r3, [r7, #4]
 80031aa:	6859      	ldr	r1, [r3, #4]
 80031ac:	460b      	mov	r3, r1
 80031ae:	005b      	lsls	r3, r3, #1
 80031b0:	440b      	add	r3, r1
 80031b2:	fbb0 f3f3 	udiv	r3, r0, r3
 80031b6:	3301      	adds	r3, #1
 80031b8:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80031bc:	2b00      	cmp	r3, #0
 80031be:	bf0c      	ite	eq
 80031c0:	2301      	moveq	r3, #1
 80031c2:	2300      	movne	r3, #0
 80031c4:	b2db      	uxtb	r3, r3
 80031c6:	e012      	b.n	80031ee <HAL_I2C_Init+0x18e>
 80031c8:	68fb      	ldr	r3, [r7, #12]
 80031ca:	1e58      	subs	r0, r3, #1
 80031cc:	687b      	ldr	r3, [r7, #4]
 80031ce:	6859      	ldr	r1, [r3, #4]
 80031d0:	460b      	mov	r3, r1
 80031d2:	009b      	lsls	r3, r3, #2
 80031d4:	440b      	add	r3, r1
 80031d6:	0099      	lsls	r1, r3, #2
 80031d8:	440b      	add	r3, r1
 80031da:	fbb0 f3f3 	udiv	r3, r0, r3
 80031de:	3301      	adds	r3, #1
 80031e0:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80031e4:	2b00      	cmp	r3, #0
 80031e6:	bf0c      	ite	eq
 80031e8:	2301      	moveq	r3, #1
 80031ea:	2300      	movne	r3, #0
 80031ec:	b2db      	uxtb	r3, r3
 80031ee:	2b00      	cmp	r3, #0
 80031f0:	d001      	beq.n	80031f6 <HAL_I2C_Init+0x196>
 80031f2:	2301      	movs	r3, #1
 80031f4:	e022      	b.n	800323c <HAL_I2C_Init+0x1dc>
 80031f6:	687b      	ldr	r3, [r7, #4]
 80031f8:	689b      	ldr	r3, [r3, #8]
 80031fa:	2b00      	cmp	r3, #0
 80031fc:	d10e      	bne.n	800321c <HAL_I2C_Init+0x1bc>
 80031fe:	68fb      	ldr	r3, [r7, #12]
 8003200:	1e58      	subs	r0, r3, #1
 8003202:	687b      	ldr	r3, [r7, #4]
 8003204:	6859      	ldr	r1, [r3, #4]
 8003206:	460b      	mov	r3, r1
 8003208:	005b      	lsls	r3, r3, #1
 800320a:	440b      	add	r3, r1
 800320c:	fbb0 f3f3 	udiv	r3, r0, r3
 8003210:	3301      	adds	r3, #1
 8003212:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8003216:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 800321a:	e00f      	b.n	800323c <HAL_I2C_Init+0x1dc>
 800321c:	68fb      	ldr	r3, [r7, #12]
 800321e:	1e58      	subs	r0, r3, #1
 8003220:	687b      	ldr	r3, [r7, #4]
 8003222:	6859      	ldr	r1, [r3, #4]
 8003224:	460b      	mov	r3, r1
 8003226:	009b      	lsls	r3, r3, #2
 8003228:	440b      	add	r3, r1
 800322a:	0099      	lsls	r1, r3, #2
 800322c:	440b      	add	r3, r1
 800322e:	fbb0 f3f3 	udiv	r3, r0, r3
 8003232:	3301      	adds	r3, #1
 8003234:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8003238:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 800323c:	6879      	ldr	r1, [r7, #4]
 800323e:	6809      	ldr	r1, [r1, #0]
 8003240:	4313      	orrs	r3, r2
 8003242:	61cb      	str	r3, [r1, #28]
 8003244:	687b      	ldr	r3, [r7, #4]
 8003246:	681b      	ldr	r3, [r3, #0]
 8003248:	681b      	ldr	r3, [r3, #0]
 800324a:	f023 01c0 	bic.w	r1, r3, #192	@ 0xc0
 800324e:	687b      	ldr	r3, [r7, #4]
 8003250:	69da      	ldr	r2, [r3, #28]
 8003252:	687b      	ldr	r3, [r7, #4]
 8003254:	6a1b      	ldr	r3, [r3, #32]
 8003256:	431a      	orrs	r2, r3
 8003258:	687b      	ldr	r3, [r7, #4]
 800325a:	681b      	ldr	r3, [r3, #0]
 800325c:	430a      	orrs	r2, r1
 800325e:	601a      	str	r2, [r3, #0]
 8003260:	687b      	ldr	r3, [r7, #4]
 8003262:	681b      	ldr	r3, [r3, #0]
 8003264:	689b      	ldr	r3, [r3, #8]
 8003266:	f423 4303 	bic.w	r3, r3, #33536	@ 0x8300
 800326a:	f023 03ff 	bic.w	r3, r3, #255	@ 0xff
 800326e:	687a      	ldr	r2, [r7, #4]
 8003270:	6911      	ldr	r1, [r2, #16]
 8003272:	687a      	ldr	r2, [r7, #4]
 8003274:	68d2      	ldr	r2, [r2, #12]
 8003276:	4311      	orrs	r1, r2
 8003278:	687a      	ldr	r2, [r7, #4]
 800327a:	6812      	ldr	r2, [r2, #0]
 800327c:	430b      	orrs	r3, r1
 800327e:	6093      	str	r3, [r2, #8]
 8003280:	687b      	ldr	r3, [r7, #4]
 8003282:	681b      	ldr	r3, [r3, #0]
 8003284:	68db      	ldr	r3, [r3, #12]
 8003286:	f023 01ff 	bic.w	r1, r3, #255	@ 0xff
 800328a:	687b      	ldr	r3, [r7, #4]
 800328c:	695a      	ldr	r2, [r3, #20]
 800328e:	687b      	ldr	r3, [r7, #4]
 8003290:	699b      	ldr	r3, [r3, #24]
 8003292:	431a      	orrs	r2, r3
 8003294:	687b      	ldr	r3, [r7, #4]
 8003296:	681b      	ldr	r3, [r3, #0]
 8003298:	430a      	orrs	r2, r1
 800329a:	60da      	str	r2, [r3, #12]
 800329c:	687b      	ldr	r3, [r7, #4]
 800329e:	681b      	ldr	r3, [r3, #0]
 80032a0:	681a      	ldr	r2, [r3, #0]
 80032a2:	687b      	ldr	r3, [r7, #4]
 80032a4:	681b      	ldr	r3, [r3, #0]
 80032a6:	f042 0201 	orr.w	r2, r2, #1
 80032aa:	601a      	str	r2, [r3, #0]
 80032ac:	687b      	ldr	r3, [r7, #4]
 80032ae:	2200      	movs	r2, #0
 80032b0:	641a      	str	r2, [r3, #64]	@ 0x40
 80032b2:	687b      	ldr	r3, [r7, #4]
 80032b4:	2220      	movs	r2, #32
 80032b6:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80032ba:	687b      	ldr	r3, [r7, #4]
 80032bc:	2200      	movs	r2, #0
 80032be:	631a      	str	r2, [r3, #48]	@ 0x30
 80032c0:	687b      	ldr	r3, [r7, #4]
 80032c2:	2200      	movs	r2, #0
 80032c4:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 80032c8:	2300      	movs	r3, #0
 80032ca:	4618      	mov	r0, r3
 80032cc:	3710      	adds	r7, #16
 80032ce:	46bd      	mov	sp, r7
 80032d0:	bd80      	pop	{r7, pc}
 80032d2:	bf00      	nop
 80032d4:	000186a0 	.word	0x000186a0
 80032d8:	001e847f 	.word	0x001e847f
 80032dc:	003d08ff 	.word	0x003d08ff
 80032e0:	431bde83 	.word	0x431bde83
 80032e4:	10624dd3 	.word	0x10624dd3

080032e8 <HAL_I2C_Master_Transmit>:
 80032e8:	b580      	push	{r7, lr}
 80032ea:	b088      	sub	sp, #32
 80032ec:	af02      	add	r7, sp, #8
 80032ee:	60f8      	str	r0, [r7, #12]
 80032f0:	607a      	str	r2, [r7, #4]
 80032f2:	461a      	mov	r2, r3
 80032f4:	460b      	mov	r3, r1
 80032f6:	817b      	strh	r3, [r7, #10]
 80032f8:	4613      	mov	r3, r2
 80032fa:	813b      	strh	r3, [r7, #8]
 80032fc:	f7fe ffae 	bl	800225c <HAL_GetTick>
 8003300:	6178      	str	r0, [r7, #20]
 8003302:	68fb      	ldr	r3, [r7, #12]
 8003304:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8003308:	b2db      	uxtb	r3, r3
 800330a:	2b20      	cmp	r3, #32
 800330c:	f040 80e0 	bne.w	80034d0 <HAL_I2C_Master_Transmit+0x1e8>
 8003310:	697b      	ldr	r3, [r7, #20]
 8003312:	9300      	str	r3, [sp, #0]
 8003314:	2319      	movs	r3, #25
 8003316:	2201      	movs	r2, #1
 8003318:	4970      	ldr	r1, [pc, #448]	@ (80034dc <HAL_I2C_Master_Transmit+0x1f4>)
 800331a:	68f8      	ldr	r0, [r7, #12]
 800331c:	f000 f964 	bl	80035e8 <I2C_WaitOnFlagUntilTimeout>
 8003320:	4603      	mov	r3, r0
 8003322:	2b00      	cmp	r3, #0
 8003324:	d001      	beq.n	800332a <HAL_I2C_Master_Transmit+0x42>
 8003326:	2302      	movs	r3, #2
 8003328:	e0d3      	b.n	80034d2 <HAL_I2C_Master_Transmit+0x1ea>
 800332a:	68fb      	ldr	r3, [r7, #12]
 800332c:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8003330:	2b01      	cmp	r3, #1
 8003332:	d101      	bne.n	8003338 <HAL_I2C_Master_Transmit+0x50>
 8003334:	2302      	movs	r3, #2
 8003336:	e0cc      	b.n	80034d2 <HAL_I2C_Master_Transmit+0x1ea>
 8003338:	68fb      	ldr	r3, [r7, #12]
 800333a:	2201      	movs	r2, #1
 800333c:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8003340:	68fb      	ldr	r3, [r7, #12]
 8003342:	681b      	ldr	r3, [r3, #0]
 8003344:	681b      	ldr	r3, [r3, #0]
 8003346:	f003 0301 	and.w	r3, r3, #1
 800334a:	2b01      	cmp	r3, #1
 800334c:	d007      	beq.n	800335e <HAL_I2C_Master_Transmit+0x76>
 800334e:	68fb      	ldr	r3, [r7, #12]
 8003350:	681b      	ldr	r3, [r3, #0]
 8003352:	681a      	ldr	r2, [r3, #0]
 8003354:	68fb      	ldr	r3, [r7, #12]
 8003356:	681b      	ldr	r3, [r3, #0]
 8003358:	f042 0201 	orr.w	r2, r2, #1
 800335c:	601a      	str	r2, [r3, #0]
 800335e:	68fb      	ldr	r3, [r7, #12]
 8003360:	681b      	ldr	r3, [r3, #0]
 8003362:	681a      	ldr	r2, [r3, #0]
 8003364:	68fb      	ldr	r3, [r7, #12]
 8003366:	681b      	ldr	r3, [r3, #0]
 8003368:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 800336c:	601a      	str	r2, [r3, #0]
 800336e:	68fb      	ldr	r3, [r7, #12]
 8003370:	2221      	movs	r2, #33	@ 0x21
 8003372:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003376:	68fb      	ldr	r3, [r7, #12]
 8003378:	2210      	movs	r2, #16
 800337a:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800337e:	68fb      	ldr	r3, [r7, #12]
 8003380:	2200      	movs	r2, #0
 8003382:	641a      	str	r2, [r3, #64]	@ 0x40
 8003384:	68fb      	ldr	r3, [r7, #12]
 8003386:	687a      	ldr	r2, [r7, #4]
 8003388:	625a      	str	r2, [r3, #36]	@ 0x24
 800338a:	68fb      	ldr	r3, [r7, #12]
 800338c:	893a      	ldrh	r2, [r7, #8]
 800338e:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8003390:	68fb      	ldr	r3, [r7, #12]
 8003392:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8003394:	b29a      	uxth	r2, r3
 8003396:	68fb      	ldr	r3, [r7, #12]
 8003398:	851a      	strh	r2, [r3, #40]	@ 0x28
 800339a:	68fb      	ldr	r3, [r7, #12]
 800339c:	4a50      	ldr	r2, [pc, #320]	@ (80034e0 <HAL_I2C_Master_Transmit+0x1f8>)
 800339e:	62da      	str	r2, [r3, #44]	@ 0x2c
 80033a0:	8979      	ldrh	r1, [r7, #10]
 80033a2:	697b      	ldr	r3, [r7, #20]
 80033a4:	6a3a      	ldr	r2, [r7, #32]
 80033a6:	68f8      	ldr	r0, [r7, #12]
 80033a8:	f000 f89c 	bl	80034e4 <I2C_MasterRequestWrite>
 80033ac:	4603      	mov	r3, r0
 80033ae:	2b00      	cmp	r3, #0
 80033b0:	d001      	beq.n	80033b6 <HAL_I2C_Master_Transmit+0xce>
 80033b2:	2301      	movs	r3, #1
 80033b4:	e08d      	b.n	80034d2 <HAL_I2C_Master_Transmit+0x1ea>
 80033b6:	2300      	movs	r3, #0
 80033b8:	613b      	str	r3, [r7, #16]
 80033ba:	68fb      	ldr	r3, [r7, #12]
 80033bc:	681b      	ldr	r3, [r3, #0]
 80033be:	695b      	ldr	r3, [r3, #20]
 80033c0:	613b      	str	r3, [r7, #16]
 80033c2:	68fb      	ldr	r3, [r7, #12]
 80033c4:	681b      	ldr	r3, [r3, #0]
 80033c6:	699b      	ldr	r3, [r3, #24]
 80033c8:	613b      	str	r3, [r7, #16]
 80033ca:	693b      	ldr	r3, [r7, #16]
 80033cc:	e066      	b.n	800349c <HAL_I2C_Master_Transmit+0x1b4>
 80033ce:	697a      	ldr	r2, [r7, #20]
 80033d0:	6a39      	ldr	r1, [r7, #32]
 80033d2:	68f8      	ldr	r0, [r7, #12]
 80033d4:	f000 fa22 	bl	800381c <I2C_WaitOnTXEFlagUntilTimeout>
 80033d8:	4603      	mov	r3, r0
 80033da:	2b00      	cmp	r3, #0
 80033dc:	d00d      	beq.n	80033fa <HAL_I2C_Master_Transmit+0x112>
 80033de:	68fb      	ldr	r3, [r7, #12]
 80033e0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80033e2:	2b04      	cmp	r3, #4
 80033e4:	d107      	bne.n	80033f6 <HAL_I2C_Master_Transmit+0x10e>
 80033e6:	68fb      	ldr	r3, [r7, #12]
 80033e8:	681b      	ldr	r3, [r3, #0]
 80033ea:	681a      	ldr	r2, [r3, #0]
 80033ec:	68fb      	ldr	r3, [r7, #12]
 80033ee:	681b      	ldr	r3, [r3, #0]
 80033f0:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 80033f4:	601a      	str	r2, [r3, #0]
 80033f6:	2301      	movs	r3, #1
 80033f8:	e06b      	b.n	80034d2 <HAL_I2C_Master_Transmit+0x1ea>
 80033fa:	68fb      	ldr	r3, [r7, #12]
 80033fc:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80033fe:	781a      	ldrb	r2, [r3, #0]
 8003400:	68fb      	ldr	r3, [r7, #12]
 8003402:	681b      	ldr	r3, [r3, #0]
 8003404:	611a      	str	r2, [r3, #16]
 8003406:	68fb      	ldr	r3, [r7, #12]
 8003408:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800340a:	1c5a      	adds	r2, r3, #1
 800340c:	68fb      	ldr	r3, [r7, #12]
 800340e:	625a      	str	r2, [r3, #36]	@ 0x24
 8003410:	68fb      	ldr	r3, [r7, #12]
 8003412:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8003414:	b29b      	uxth	r3, r3
 8003416:	3b01      	subs	r3, #1
 8003418:	b29a      	uxth	r2, r3
 800341a:	68fb      	ldr	r3, [r7, #12]
 800341c:	855a      	strh	r2, [r3, #42]	@ 0x2a
 800341e:	68fb      	ldr	r3, [r7, #12]
 8003420:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8003422:	3b01      	subs	r3, #1
 8003424:	b29a      	uxth	r2, r3
 8003426:	68fb      	ldr	r3, [r7, #12]
 8003428:	851a      	strh	r2, [r3, #40]	@ 0x28
 800342a:	68fb      	ldr	r3, [r7, #12]
 800342c:	681b      	ldr	r3, [r3, #0]
 800342e:	695b      	ldr	r3, [r3, #20]
 8003430:	f003 0304 	and.w	r3, r3, #4
 8003434:	2b04      	cmp	r3, #4
 8003436:	d11b      	bne.n	8003470 <HAL_I2C_Master_Transmit+0x188>
 8003438:	68fb      	ldr	r3, [r7, #12]
 800343a:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800343c:	2b00      	cmp	r3, #0
 800343e:	d017      	beq.n	8003470 <HAL_I2C_Master_Transmit+0x188>
 8003440:	68fb      	ldr	r3, [r7, #12]
 8003442:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003444:	781a      	ldrb	r2, [r3, #0]
 8003446:	68fb      	ldr	r3, [r7, #12]
 8003448:	681b      	ldr	r3, [r3, #0]
 800344a:	611a      	str	r2, [r3, #16]
 800344c:	68fb      	ldr	r3, [r7, #12]
 800344e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003450:	1c5a      	adds	r2, r3, #1
 8003452:	68fb      	ldr	r3, [r7, #12]
 8003454:	625a      	str	r2, [r3, #36]	@ 0x24
 8003456:	68fb      	ldr	r3, [r7, #12]
 8003458:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800345a:	b29b      	uxth	r3, r3
 800345c:	3b01      	subs	r3, #1
 800345e:	b29a      	uxth	r2, r3
 8003460:	68fb      	ldr	r3, [r7, #12]
 8003462:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8003464:	68fb      	ldr	r3, [r7, #12]
 8003466:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8003468:	3b01      	subs	r3, #1
 800346a:	b29a      	uxth	r2, r3
 800346c:	68fb      	ldr	r3, [r7, #12]
 800346e:	851a      	strh	r2, [r3, #40]	@ 0x28
 8003470:	697a      	ldr	r2, [r7, #20]
 8003472:	6a39      	ldr	r1, [r7, #32]
 8003474:	68f8      	ldr	r0, [r7, #12]
 8003476:	f000 fa19 	bl	80038ac <I2C_WaitOnBTFFlagUntilTimeout>
 800347a:	4603      	mov	r3, r0
 800347c:	2b00      	cmp	r3, #0
 800347e:	d00d      	beq.n	800349c <HAL_I2C_Master_Transmit+0x1b4>
 8003480:	68fb      	ldr	r3, [r7, #12]
 8003482:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003484:	2b04      	cmp	r3, #4
 8003486:	d107      	bne.n	8003498 <HAL_I2C_Master_Transmit+0x1b0>
 8003488:	68fb      	ldr	r3, [r7, #12]
 800348a:	681b      	ldr	r3, [r3, #0]
 800348c:	681a      	ldr	r2, [r3, #0]
 800348e:	68fb      	ldr	r3, [r7, #12]
 8003490:	681b      	ldr	r3, [r3, #0]
 8003492:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8003496:	601a      	str	r2, [r3, #0]
 8003498:	2301      	movs	r3, #1
 800349a:	e01a      	b.n	80034d2 <HAL_I2C_Master_Transmit+0x1ea>
 800349c:	68fb      	ldr	r3, [r7, #12]
 800349e:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80034a0:	2b00      	cmp	r3, #0
 80034a2:	d194      	bne.n	80033ce <HAL_I2C_Master_Transmit+0xe6>
 80034a4:	68fb      	ldr	r3, [r7, #12]
 80034a6:	681b      	ldr	r3, [r3, #0]
 80034a8:	681a      	ldr	r2, [r3, #0]
 80034aa:	68fb      	ldr	r3, [r7, #12]
 80034ac:	681b      	ldr	r3, [r3, #0]
 80034ae:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 80034b2:	601a      	str	r2, [r3, #0]
 80034b4:	68fb      	ldr	r3, [r7, #12]
 80034b6:	2220      	movs	r2, #32
 80034b8:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80034bc:	68fb      	ldr	r3, [r7, #12]
 80034be:	2200      	movs	r2, #0
 80034c0:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 80034c4:	68fb      	ldr	r3, [r7, #12]
 80034c6:	2200      	movs	r2, #0
 80034c8:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80034cc:	2300      	movs	r3, #0
 80034ce:	e000      	b.n	80034d2 <HAL_I2C_Master_Transmit+0x1ea>
 80034d0:	2302      	movs	r3, #2
 80034d2:	4618      	mov	r0, r3
 80034d4:	3718      	adds	r7, #24
 80034d6:	46bd      	mov	sp, r7
 80034d8:	bd80      	pop	{r7, pc}
 80034da:	bf00      	nop
 80034dc:	00100002 	.word	0x00100002
 80034e0:	ffff0000 	.word	0xffff0000

080034e4 <I2C_MasterRequestWrite>:
 80034e4:	b580      	push	{r7, lr}
 80034e6:	b088      	sub	sp, #32
 80034e8:	af02      	add	r7, sp, #8
 80034ea:	60f8      	str	r0, [r7, #12]
 80034ec:	607a      	str	r2, [r7, #4]
 80034ee:	603b      	str	r3, [r7, #0]
 80034f0:	460b      	mov	r3, r1
 80034f2:	817b      	strh	r3, [r7, #10]
 80034f4:	68fb      	ldr	r3, [r7, #12]
 80034f6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80034f8:	617b      	str	r3, [r7, #20]
 80034fa:	697b      	ldr	r3, [r7, #20]
 80034fc:	2b08      	cmp	r3, #8
 80034fe:	d006      	beq.n	800350e <I2C_MasterRequestWrite+0x2a>
 8003500:	697b      	ldr	r3, [r7, #20]
 8003502:	2b01      	cmp	r3, #1
 8003504:	d003      	beq.n	800350e <I2C_MasterRequestWrite+0x2a>
 8003506:	697b      	ldr	r3, [r7, #20]
 8003508:	f513 3f80 	cmn.w	r3, #65536	@ 0x10000
 800350c:	d108      	bne.n	8003520 <I2C_MasterRequestWrite+0x3c>
 800350e:	68fb      	ldr	r3, [r7, #12]
 8003510:	681b      	ldr	r3, [r3, #0]
 8003512:	681a      	ldr	r2, [r3, #0]
 8003514:	68fb      	ldr	r3, [r7, #12]
 8003516:	681b      	ldr	r3, [r3, #0]
 8003518:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 800351c:	601a      	str	r2, [r3, #0]
 800351e:	e00b      	b.n	8003538 <I2C_MasterRequestWrite+0x54>
 8003520:	68fb      	ldr	r3, [r7, #12]
 8003522:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003524:	2b12      	cmp	r3, #18
 8003526:	d107      	bne.n	8003538 <I2C_MasterRequestWrite+0x54>
 8003528:	68fb      	ldr	r3, [r7, #12]
 800352a:	681b      	ldr	r3, [r3, #0]
 800352c:	681a      	ldr	r2, [r3, #0]
 800352e:	68fb      	ldr	r3, [r7, #12]
 8003530:	681b      	ldr	r3, [r3, #0]
 8003532:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8003536:	601a      	str	r2, [r3, #0]
 8003538:	683b      	ldr	r3, [r7, #0]
 800353a:	9300      	str	r3, [sp, #0]
 800353c:	687b      	ldr	r3, [r7, #4]
 800353e:	2200      	movs	r2, #0
 8003540:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
 8003544:	68f8      	ldr	r0, [r7, #12]
 8003546:	f000 f84f 	bl	80035e8 <I2C_WaitOnFlagUntilTimeout>
 800354a:	4603      	mov	r3, r0
 800354c:	2b00      	cmp	r3, #0
 800354e:	d00d      	beq.n	800356c <I2C_MasterRequestWrite+0x88>
 8003550:	68fb      	ldr	r3, [r7, #12]
 8003552:	681b      	ldr	r3, [r3, #0]
 8003554:	681b      	ldr	r3, [r3, #0]
 8003556:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800355a:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 800355e:	d103      	bne.n	8003568 <I2C_MasterRequestWrite+0x84>
 8003560:	68fb      	ldr	r3, [r7, #12]
 8003562:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8003566:	641a      	str	r2, [r3, #64]	@ 0x40
 8003568:	2303      	movs	r3, #3
 800356a:	e035      	b.n	80035d8 <I2C_MasterRequestWrite+0xf4>
 800356c:	68fb      	ldr	r3, [r7, #12]
 800356e:	691b      	ldr	r3, [r3, #16]
 8003570:	f5b3 4f80 	cmp.w	r3, #16384	@ 0x4000
 8003574:	d108      	bne.n	8003588 <I2C_MasterRequestWrite+0xa4>
 8003576:	897b      	ldrh	r3, [r7, #10]
 8003578:	b2db      	uxtb	r3, r3
 800357a:	461a      	mov	r2, r3
 800357c:	68fb      	ldr	r3, [r7, #12]
 800357e:	681b      	ldr	r3, [r3, #0]
 8003580:	f002 02fe 	and.w	r2, r2, #254	@ 0xfe
 8003584:	611a      	str	r2, [r3, #16]
 8003586:	e01b      	b.n	80035c0 <I2C_MasterRequestWrite+0xdc>
 8003588:	897b      	ldrh	r3, [r7, #10]
 800358a:	11db      	asrs	r3, r3, #7
 800358c:	b2db      	uxtb	r3, r3
 800358e:	f003 0306 	and.w	r3, r3, #6
 8003592:	b2db      	uxtb	r3, r3
 8003594:	f063 030f 	orn	r3, r3, #15
 8003598:	b2da      	uxtb	r2, r3
 800359a:	68fb      	ldr	r3, [r7, #12]
 800359c:	681b      	ldr	r3, [r3, #0]
 800359e:	611a      	str	r2, [r3, #16]
 80035a0:	683b      	ldr	r3, [r7, #0]
 80035a2:	687a      	ldr	r2, [r7, #4]
 80035a4:	490e      	ldr	r1, [pc, #56]	@ (80035e0 <I2C_MasterRequestWrite+0xfc>)
 80035a6:	68f8      	ldr	r0, [r7, #12]
 80035a8:	f000 f898 	bl	80036dc <I2C_WaitOnMasterAddressFlagUntilTimeout>
 80035ac:	4603      	mov	r3, r0
 80035ae:	2b00      	cmp	r3, #0
 80035b0:	d001      	beq.n	80035b6 <I2C_MasterRequestWrite+0xd2>
 80035b2:	2301      	movs	r3, #1
 80035b4:	e010      	b.n	80035d8 <I2C_MasterRequestWrite+0xf4>
 80035b6:	897b      	ldrh	r3, [r7, #10]
 80035b8:	b2da      	uxtb	r2, r3
 80035ba:	68fb      	ldr	r3, [r7, #12]
 80035bc:	681b      	ldr	r3, [r3, #0]
 80035be:	611a      	str	r2, [r3, #16]
 80035c0:	683b      	ldr	r3, [r7, #0]
 80035c2:	687a      	ldr	r2, [r7, #4]
 80035c4:	4907      	ldr	r1, [pc, #28]	@ (80035e4 <I2C_MasterRequestWrite+0x100>)
 80035c6:	68f8      	ldr	r0, [r7, #12]
 80035c8:	f000 f888 	bl	80036dc <I2C_WaitOnMasterAddressFlagUntilTimeout>
 80035cc:	4603      	mov	r3, r0
 80035ce:	2b00      	cmp	r3, #0
 80035d0:	d001      	beq.n	80035d6 <I2C_MasterRequestWrite+0xf2>
 80035d2:	2301      	movs	r3, #1
 80035d4:	e000      	b.n	80035d8 <I2C_MasterRequestWrite+0xf4>
 80035d6:	2300      	movs	r3, #0
 80035d8:	4618      	mov	r0, r3
 80035da:	3718      	adds	r7, #24
 80035dc:	46bd      	mov	sp, r7
 80035de:	bd80      	pop	{r7, pc}
 80035e0:	00010008 	.word	0x00010008
 80035e4:	00010002 	.word	0x00010002

080035e8 <I2C_WaitOnFlagUntilTimeout>:
 80035e8:	b580      	push	{r7, lr}
 80035ea:	b084      	sub	sp, #16
 80035ec:	af00      	add	r7, sp, #0
 80035ee:	60f8      	str	r0, [r7, #12]
 80035f0:	60b9      	str	r1, [r7, #8]
 80035f2:	603b      	str	r3, [r7, #0]
 80035f4:	4613      	mov	r3, r2
 80035f6:	71fb      	strb	r3, [r7, #7]
 80035f8:	e048      	b.n	800368c <I2C_WaitOnFlagUntilTimeout+0xa4>
 80035fa:	683b      	ldr	r3, [r7, #0]
 80035fc:	f1b3 3fff 	cmp.w	r3, #4294967295
 8003600:	d044      	beq.n	800368c <I2C_WaitOnFlagUntilTimeout+0xa4>
 8003602:	f7fe fe2b 	bl	800225c <HAL_GetTick>
 8003606:	4602      	mov	r2, r0
 8003608:	69bb      	ldr	r3, [r7, #24]
 800360a:	1ad3      	subs	r3, r2, r3
 800360c:	683a      	ldr	r2, [r7, #0]
 800360e:	429a      	cmp	r2, r3
 8003610:	d302      	bcc.n	8003618 <I2C_WaitOnFlagUntilTimeout+0x30>
 8003612:	683b      	ldr	r3, [r7, #0]
 8003614:	2b00      	cmp	r3, #0
 8003616:	d139      	bne.n	800368c <I2C_WaitOnFlagUntilTimeout+0xa4>
 8003618:	68bb      	ldr	r3, [r7, #8]
 800361a:	0c1b      	lsrs	r3, r3, #16
 800361c:	b2db      	uxtb	r3, r3
 800361e:	2b01      	cmp	r3, #1
 8003620:	d10d      	bne.n	800363e <I2C_WaitOnFlagUntilTimeout+0x56>
 8003622:	68fb      	ldr	r3, [r7, #12]
 8003624:	681b      	ldr	r3, [r3, #0]
 8003626:	695b      	ldr	r3, [r3, #20]
 8003628:	43da      	mvns	r2, r3
 800362a:	68bb      	ldr	r3, [r7, #8]
 800362c:	4013      	ands	r3, r2
 800362e:	b29b      	uxth	r3, r3
 8003630:	2b00      	cmp	r3, #0
 8003632:	bf0c      	ite	eq
 8003634:	2301      	moveq	r3, #1
 8003636:	2300      	movne	r3, #0
 8003638:	b2db      	uxtb	r3, r3
 800363a:	461a      	mov	r2, r3
 800363c:	e00c      	b.n	8003658 <I2C_WaitOnFlagUntilTimeout+0x70>
 800363e:	68fb      	ldr	r3, [r7, #12]
 8003640:	681b      	ldr	r3, [r3, #0]
 8003642:	699b      	ldr	r3, [r3, #24]
 8003644:	43da      	mvns	r2, r3
 8003646:	68bb      	ldr	r3, [r7, #8]
 8003648:	4013      	ands	r3, r2
 800364a:	b29b      	uxth	r3, r3
 800364c:	2b00      	cmp	r3, #0
 800364e:	bf0c      	ite	eq
 8003650:	2301      	moveq	r3, #1
 8003652:	2300      	movne	r3, #0
 8003654:	b2db      	uxtb	r3, r3
 8003656:	461a      	mov	r2, r3
 8003658:	79fb      	ldrb	r3, [r7, #7]
 800365a:	429a      	cmp	r2, r3
 800365c:	d116      	bne.n	800368c <I2C_WaitOnFlagUntilTimeout+0xa4>
 800365e:	68fb      	ldr	r3, [r7, #12]
 8003660:	2200      	movs	r2, #0
 8003662:	631a      	str	r2, [r3, #48]	@ 0x30
 8003664:	68fb      	ldr	r3, [r7, #12]
 8003666:	2220      	movs	r2, #32
 8003668:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800366c:	68fb      	ldr	r3, [r7, #12]
 800366e:	2200      	movs	r2, #0
 8003670:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8003674:	68fb      	ldr	r3, [r7, #12]
 8003676:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003678:	f043 0220 	orr.w	r2, r3, #32
 800367c:	68fb      	ldr	r3, [r7, #12]
 800367e:	641a      	str	r2, [r3, #64]	@ 0x40
 8003680:	68fb      	ldr	r3, [r7, #12]
 8003682:	2200      	movs	r2, #0
 8003684:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8003688:	2301      	movs	r3, #1
 800368a:	e023      	b.n	80036d4 <I2C_WaitOnFlagUntilTimeout+0xec>
 800368c:	68bb      	ldr	r3, [r7, #8]
 800368e:	0c1b      	lsrs	r3, r3, #16
 8003690:	b2db      	uxtb	r3, r3
 8003692:	2b01      	cmp	r3, #1
 8003694:	d10d      	bne.n	80036b2 <I2C_WaitOnFlagUntilTimeout+0xca>
 8003696:	68fb      	ldr	r3, [r7, #12]
 8003698:	681b      	ldr	r3, [r3, #0]
 800369a:	695b      	ldr	r3, [r3, #20]
 800369c:	43da      	mvns	r2, r3
 800369e:	68bb      	ldr	r3, [r7, #8]
 80036a0:	4013      	ands	r3, r2
 80036a2:	b29b      	uxth	r3, r3
 80036a4:	2b00      	cmp	r3, #0
 80036a6:	bf0c      	ite	eq
 80036a8:	2301      	moveq	r3, #1
 80036aa:	2300      	movne	r3, #0
 80036ac:	b2db      	uxtb	r3, r3
 80036ae:	461a      	mov	r2, r3
 80036b0:	e00c      	b.n	80036cc <I2C_WaitOnFlagUntilTimeout+0xe4>
 80036b2:	68fb      	ldr	r3, [r7, #12]
 80036b4:	681b      	ldr	r3, [r3, #0]
 80036b6:	699b      	ldr	r3, [r3, #24]
 80036b8:	43da      	mvns	r2, r3
 80036ba:	68bb      	ldr	r3, [r7, #8]
 80036bc:	4013      	ands	r3, r2
 80036be:	b29b      	uxth	r3, r3
 80036c0:	2b00      	cmp	r3, #0
 80036c2:	bf0c      	ite	eq
 80036c4:	2301      	moveq	r3, #1
 80036c6:	2300      	movne	r3, #0
 80036c8:	b2db      	uxtb	r3, r3
 80036ca:	461a      	mov	r2, r3
 80036cc:	79fb      	ldrb	r3, [r7, #7]
 80036ce:	429a      	cmp	r2, r3
 80036d0:	d093      	beq.n	80035fa <I2C_WaitOnFlagUntilTimeout+0x12>
 80036d2:	2300      	movs	r3, #0
 80036d4:	4618      	mov	r0, r3
 80036d6:	3710      	adds	r7, #16
 80036d8:	46bd      	mov	sp, r7
 80036da:	bd80      	pop	{r7, pc}

080036dc <I2C_WaitOnMasterAddressFlagUntilTimeout>:
 80036dc:	b580      	push	{r7, lr}
 80036de:	b084      	sub	sp, #16
 80036e0:	af00      	add	r7, sp, #0
 80036e2:	60f8      	str	r0, [r7, #12]
 80036e4:	60b9      	str	r1, [r7, #8]
 80036e6:	607a      	str	r2, [r7, #4]
 80036e8:	603b      	str	r3, [r7, #0]
 80036ea:	e071      	b.n	80037d0 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
 80036ec:	68fb      	ldr	r3, [r7, #12]
 80036ee:	681b      	ldr	r3, [r3, #0]
 80036f0:	695b      	ldr	r3, [r3, #20]
 80036f2:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 80036f6:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 80036fa:	d123      	bne.n	8003744 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x68>
 80036fc:	68fb      	ldr	r3, [r7, #12]
 80036fe:	681b      	ldr	r3, [r3, #0]
 8003700:	681a      	ldr	r2, [r3, #0]
 8003702:	68fb      	ldr	r3, [r7, #12]
 8003704:	681b      	ldr	r3, [r3, #0]
 8003706:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800370a:	601a      	str	r2, [r3, #0]
 800370c:	68fb      	ldr	r3, [r7, #12]
 800370e:	681b      	ldr	r3, [r3, #0]
 8003710:	f46f 6280 	mvn.w	r2, #1024	@ 0x400
 8003714:	615a      	str	r2, [r3, #20]
 8003716:	68fb      	ldr	r3, [r7, #12]
 8003718:	2200      	movs	r2, #0
 800371a:	631a      	str	r2, [r3, #48]	@ 0x30
 800371c:	68fb      	ldr	r3, [r7, #12]
 800371e:	2220      	movs	r2, #32
 8003720:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003724:	68fb      	ldr	r3, [r7, #12]
 8003726:	2200      	movs	r2, #0
 8003728:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800372c:	68fb      	ldr	r3, [r7, #12]
 800372e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003730:	f043 0204 	orr.w	r2, r3, #4
 8003734:	68fb      	ldr	r3, [r7, #12]
 8003736:	641a      	str	r2, [r3, #64]	@ 0x40
 8003738:	68fb      	ldr	r3, [r7, #12]
 800373a:	2200      	movs	r2, #0
 800373c:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8003740:	2301      	movs	r3, #1
 8003742:	e067      	b.n	8003814 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x138>
 8003744:	687b      	ldr	r3, [r7, #4]
 8003746:	f1b3 3fff 	cmp.w	r3, #4294967295
 800374a:	d041      	beq.n	80037d0 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
 800374c:	f7fe fd86 	bl	800225c <HAL_GetTick>
 8003750:	4602      	mov	r2, r0
 8003752:	683b      	ldr	r3, [r7, #0]
 8003754:	1ad3      	subs	r3, r2, r3
 8003756:	687a      	ldr	r2, [r7, #4]
 8003758:	429a      	cmp	r2, r3
 800375a:	d302      	bcc.n	8003762 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x86>
 800375c:	687b      	ldr	r3, [r7, #4]
 800375e:	2b00      	cmp	r3, #0
 8003760:	d136      	bne.n	80037d0 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
 8003762:	68bb      	ldr	r3, [r7, #8]
 8003764:	0c1b      	lsrs	r3, r3, #16
 8003766:	b2db      	uxtb	r3, r3
 8003768:	2b01      	cmp	r3, #1
 800376a:	d10c      	bne.n	8003786 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xaa>
 800376c:	68fb      	ldr	r3, [r7, #12]
 800376e:	681b      	ldr	r3, [r3, #0]
 8003770:	695b      	ldr	r3, [r3, #20]
 8003772:	43da      	mvns	r2, r3
 8003774:	68bb      	ldr	r3, [r7, #8]
 8003776:	4013      	ands	r3, r2
 8003778:	b29b      	uxth	r3, r3
 800377a:	2b00      	cmp	r3, #0
 800377c:	bf14      	ite	ne
 800377e:	2301      	movne	r3, #1
 8003780:	2300      	moveq	r3, #0
 8003782:	b2db      	uxtb	r3, r3
 8003784:	e00b      	b.n	800379e <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc2>
 8003786:	68fb      	ldr	r3, [r7, #12]
 8003788:	681b      	ldr	r3, [r3, #0]
 800378a:	699b      	ldr	r3, [r3, #24]
 800378c:	43da      	mvns	r2, r3
 800378e:	68bb      	ldr	r3, [r7, #8]
 8003790:	4013      	ands	r3, r2
 8003792:	b29b      	uxth	r3, r3
 8003794:	2b00      	cmp	r3, #0
 8003796:	bf14      	ite	ne
 8003798:	2301      	movne	r3, #1
 800379a:	2300      	moveq	r3, #0
 800379c:	b2db      	uxtb	r3, r3
 800379e:	2b00      	cmp	r3, #0
 80037a0:	d016      	beq.n	80037d0 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
 80037a2:	68fb      	ldr	r3, [r7, #12]
 80037a4:	2200      	movs	r2, #0
 80037a6:	631a      	str	r2, [r3, #48]	@ 0x30
 80037a8:	68fb      	ldr	r3, [r7, #12]
 80037aa:	2220      	movs	r2, #32
 80037ac:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80037b0:	68fb      	ldr	r3, [r7, #12]
 80037b2:	2200      	movs	r2, #0
 80037b4:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 80037b8:	68fb      	ldr	r3, [r7, #12]
 80037ba:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80037bc:	f043 0220 	orr.w	r2, r3, #32
 80037c0:	68fb      	ldr	r3, [r7, #12]
 80037c2:	641a      	str	r2, [r3, #64]	@ 0x40
 80037c4:	68fb      	ldr	r3, [r7, #12]
 80037c6:	2200      	movs	r2, #0
 80037c8:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80037cc:	2301      	movs	r3, #1
 80037ce:	e021      	b.n	8003814 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x138>
 80037d0:	68bb      	ldr	r3, [r7, #8]
 80037d2:	0c1b      	lsrs	r3, r3, #16
 80037d4:	b2db      	uxtb	r3, r3
 80037d6:	2b01      	cmp	r3, #1
 80037d8:	d10c      	bne.n	80037f4 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x118>
 80037da:	68fb      	ldr	r3, [r7, #12]
 80037dc:	681b      	ldr	r3, [r3, #0]
 80037de:	695b      	ldr	r3, [r3, #20]
 80037e0:	43da      	mvns	r2, r3
 80037e2:	68bb      	ldr	r3, [r7, #8]
 80037e4:	4013      	ands	r3, r2
 80037e6:	b29b      	uxth	r3, r3
 80037e8:	2b00      	cmp	r3, #0
 80037ea:	bf14      	ite	ne
 80037ec:	2301      	movne	r3, #1
 80037ee:	2300      	moveq	r3, #0
 80037f0:	b2db      	uxtb	r3, r3
 80037f2:	e00b      	b.n	800380c <I2C_WaitOnMasterAddressFlagUntilTimeout+0x130>
 80037f4:	68fb      	ldr	r3, [r7, #12]
 80037f6:	681b      	ldr	r3, [r3, #0]
 80037f8:	699b      	ldr	r3, [r3, #24]
 80037fa:	43da      	mvns	r2, r3
 80037fc:	68bb      	ldr	r3, [r7, #8]
 80037fe:	4013      	ands	r3, r2
 8003800:	b29b      	uxth	r3, r3
 8003802:	2b00      	cmp	r3, #0
 8003804:	bf14      	ite	ne
 8003806:	2301      	movne	r3, #1
 8003808:	2300      	moveq	r3, #0
 800380a:	b2db      	uxtb	r3, r3
 800380c:	2b00      	cmp	r3, #0
 800380e:	f47f af6d 	bne.w	80036ec <I2C_WaitOnMasterAddressFlagUntilTimeout+0x10>
 8003812:	2300      	movs	r3, #0
 8003814:	4618      	mov	r0, r3
 8003816:	3710      	adds	r7, #16
 8003818:	46bd      	mov	sp, r7
 800381a:	bd80      	pop	{r7, pc}

0800381c <I2C_WaitOnTXEFlagUntilTimeout>:
 800381c:	b580      	push	{r7, lr}
 800381e:	b084      	sub	sp, #16
 8003820:	af00      	add	r7, sp, #0
 8003822:	60f8      	str	r0, [r7, #12]
 8003824:	60b9      	str	r1, [r7, #8]
 8003826:	607a      	str	r2, [r7, #4]
 8003828:	e034      	b.n	8003894 <I2C_WaitOnTXEFlagUntilTimeout+0x78>
 800382a:	68f8      	ldr	r0, [r7, #12]
 800382c:	f000 f886 	bl	800393c <I2C_IsAcknowledgeFailed>
 8003830:	4603      	mov	r3, r0
 8003832:	2b00      	cmp	r3, #0
 8003834:	d001      	beq.n	800383a <I2C_WaitOnTXEFlagUntilTimeout+0x1e>
 8003836:	2301      	movs	r3, #1
 8003838:	e034      	b.n	80038a4 <I2C_WaitOnTXEFlagUntilTimeout+0x88>
 800383a:	68bb      	ldr	r3, [r7, #8]
 800383c:	f1b3 3fff 	cmp.w	r3, #4294967295
 8003840:	d028      	beq.n	8003894 <I2C_WaitOnTXEFlagUntilTimeout+0x78>
 8003842:	f7fe fd0b 	bl	800225c <HAL_GetTick>
 8003846:	4602      	mov	r2, r0
 8003848:	687b      	ldr	r3, [r7, #4]
 800384a:	1ad3      	subs	r3, r2, r3
 800384c:	68ba      	ldr	r2, [r7, #8]
 800384e:	429a      	cmp	r2, r3
 8003850:	d302      	bcc.n	8003858 <I2C_WaitOnTXEFlagUntilTimeout+0x3c>
 8003852:	68bb      	ldr	r3, [r7, #8]
 8003854:	2b00      	cmp	r3, #0
 8003856:	d11d      	bne.n	8003894 <I2C_WaitOnTXEFlagUntilTimeout+0x78>
 8003858:	68fb      	ldr	r3, [r7, #12]
 800385a:	681b      	ldr	r3, [r3, #0]
 800385c:	695b      	ldr	r3, [r3, #20]
 800385e:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8003862:	2b80      	cmp	r3, #128	@ 0x80
 8003864:	d016      	beq.n	8003894 <I2C_WaitOnTXEFlagUntilTimeout+0x78>
 8003866:	68fb      	ldr	r3, [r7, #12]
 8003868:	2200      	movs	r2, #0
 800386a:	631a      	str	r2, [r3, #48]	@ 0x30
 800386c:	68fb      	ldr	r3, [r7, #12]
 800386e:	2220      	movs	r2, #32
 8003870:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003874:	68fb      	ldr	r3, [r7, #12]
 8003876:	2200      	movs	r2, #0
 8003878:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800387c:	68fb      	ldr	r3, [r7, #12]
 800387e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003880:	f043 0220 	orr.w	r2, r3, #32
 8003884:	68fb      	ldr	r3, [r7, #12]
 8003886:	641a      	str	r2, [r3, #64]	@ 0x40
 8003888:	68fb      	ldr	r3, [r7, #12]
 800388a:	2200      	movs	r2, #0
 800388c:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8003890:	2301      	movs	r3, #1
 8003892:	e007      	b.n	80038a4 <I2C_WaitOnTXEFlagUntilTimeout+0x88>
 8003894:	68fb      	ldr	r3, [r7, #12]
 8003896:	681b      	ldr	r3, [r3, #0]
 8003898:	695b      	ldr	r3, [r3, #20]
 800389a:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800389e:	2b80      	cmp	r3, #128	@ 0x80
 80038a0:	d1c3      	bne.n	800382a <I2C_WaitOnTXEFlagUntilTimeout+0xe>
 80038a2:	2300      	movs	r3, #0
 80038a4:	4618      	mov	r0, r3
 80038a6:	3710      	adds	r7, #16
 80038a8:	46bd      	mov	sp, r7
 80038aa:	bd80      	pop	{r7, pc}

080038ac <I2C_WaitOnBTFFlagUntilTimeout>:
 80038ac:	b580      	push	{r7, lr}
 80038ae:	b084      	sub	sp, #16
 80038b0:	af00      	add	r7, sp, #0
 80038b2:	60f8      	str	r0, [r7, #12]
 80038b4:	60b9      	str	r1, [r7, #8]
 80038b6:	607a      	str	r2, [r7, #4]
 80038b8:	e034      	b.n	8003924 <I2C_WaitOnBTFFlagUntilTimeout+0x78>
 80038ba:	68f8      	ldr	r0, [r7, #12]
 80038bc:	f000 f83e 	bl	800393c <I2C_IsAcknowledgeFailed>
 80038c0:	4603      	mov	r3, r0
 80038c2:	2b00      	cmp	r3, #0
 80038c4:	d001      	beq.n	80038ca <I2C_WaitOnBTFFlagUntilTimeout+0x1e>
 80038c6:	2301      	movs	r3, #1
 80038c8:	e034      	b.n	8003934 <I2C_WaitOnBTFFlagUntilTimeout+0x88>
 80038ca:	68bb      	ldr	r3, [r7, #8]
 80038cc:	f1b3 3fff 	cmp.w	r3, #4294967295
 80038d0:	d028      	beq.n	8003924 <I2C_WaitOnBTFFlagUntilTimeout+0x78>
 80038d2:	f7fe fcc3 	bl	800225c <HAL_GetTick>
 80038d6:	4602      	mov	r2, r0
 80038d8:	687b      	ldr	r3, [r7, #4]
 80038da:	1ad3      	subs	r3, r2, r3
 80038dc:	68ba      	ldr	r2, [r7, #8]
 80038de:	429a      	cmp	r2, r3
 80038e0:	d302      	bcc.n	80038e8 <I2C_WaitOnBTFFlagUntilTimeout+0x3c>
 80038e2:	68bb      	ldr	r3, [r7, #8]
 80038e4:	2b00      	cmp	r3, #0
 80038e6:	d11d      	bne.n	8003924 <I2C_WaitOnBTFFlagUntilTimeout+0x78>
 80038e8:	68fb      	ldr	r3, [r7, #12]
 80038ea:	681b      	ldr	r3, [r3, #0]
 80038ec:	695b      	ldr	r3, [r3, #20]
 80038ee:	f003 0304 	and.w	r3, r3, #4
 80038f2:	2b04      	cmp	r3, #4
 80038f4:	d016      	beq.n	8003924 <I2C_WaitOnBTFFlagUntilTimeout+0x78>
 80038f6:	68fb      	ldr	r3, [r7, #12]
 80038f8:	2200      	movs	r2, #0
 80038fa:	631a      	str	r2, [r3, #48]	@ 0x30
 80038fc:	68fb      	ldr	r3, [r7, #12]
 80038fe:	2220      	movs	r2, #32
 8003900:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003904:	68fb      	ldr	r3, [r7, #12]
 8003906:	2200      	movs	r2, #0
 8003908:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800390c:	68fb      	ldr	r3, [r7, #12]
 800390e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003910:	f043 0220 	orr.w	r2, r3, #32
 8003914:	68fb      	ldr	r3, [r7, #12]
 8003916:	641a      	str	r2, [r3, #64]	@ 0x40
 8003918:	68fb      	ldr	r3, [r7, #12]
 800391a:	2200      	movs	r2, #0
 800391c:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8003920:	2301      	movs	r3, #1
 8003922:	e007      	b.n	8003934 <I2C_WaitOnBTFFlagUntilTimeout+0x88>
 8003924:	68fb      	ldr	r3, [r7, #12]
 8003926:	681b      	ldr	r3, [r3, #0]
 8003928:	695b      	ldr	r3, [r3, #20]
 800392a:	f003 0304 	and.w	r3, r3, #4
 800392e:	2b04      	cmp	r3, #4
 8003930:	d1c3      	bne.n	80038ba <I2C_WaitOnBTFFlagUntilTimeout+0xe>
 8003932:	2300      	movs	r3, #0
 8003934:	4618      	mov	r0, r3
 8003936:	3710      	adds	r7, #16
 8003938:	46bd      	mov	sp, r7
 800393a:	bd80      	pop	{r7, pc}

0800393c <I2C_IsAcknowledgeFailed>:
 800393c:	b480      	push	{r7}
 800393e:	b083      	sub	sp, #12
 8003940:	af00      	add	r7, sp, #0
 8003942:	6078      	str	r0, [r7, #4]
 8003944:	687b      	ldr	r3, [r7, #4]
 8003946:	681b      	ldr	r3, [r3, #0]
 8003948:	695b      	ldr	r3, [r3, #20]
 800394a:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 800394e:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8003952:	d11b      	bne.n	800398c <I2C_IsAcknowledgeFailed+0x50>
 8003954:	687b      	ldr	r3, [r7, #4]
 8003956:	681b      	ldr	r3, [r3, #0]
 8003958:	f46f 6280 	mvn.w	r2, #1024	@ 0x400
 800395c:	615a      	str	r2, [r3, #20]
 800395e:	687b      	ldr	r3, [r7, #4]
 8003960:	2200      	movs	r2, #0
 8003962:	631a      	str	r2, [r3, #48]	@ 0x30
 8003964:	687b      	ldr	r3, [r7, #4]
 8003966:	2220      	movs	r2, #32
 8003968:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800396c:	687b      	ldr	r3, [r7, #4]
 800396e:	2200      	movs	r2, #0
 8003970:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8003974:	687b      	ldr	r3, [r7, #4]
 8003976:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003978:	f043 0204 	orr.w	r2, r3, #4
 800397c:	687b      	ldr	r3, [r7, #4]
 800397e:	641a      	str	r2, [r3, #64]	@ 0x40
 8003980:	687b      	ldr	r3, [r7, #4]
 8003982:	2200      	movs	r2, #0
 8003984:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8003988:	2301      	movs	r3, #1
 800398a:	e000      	b.n	800398e <I2C_IsAcknowledgeFailed+0x52>
 800398c:	2300      	movs	r3, #0
 800398e:	4618      	mov	r0, r3
 8003990:	370c      	adds	r7, #12
 8003992:	46bd      	mov	sp, r7
 8003994:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003998:	4770      	bx	lr
	...

0800399c <HAL_RCC_OscConfig>:
 800399c:	b580      	push	{r7, lr}
 800399e:	b086      	sub	sp, #24
 80039a0:	af00      	add	r7, sp, #0
 80039a2:	6078      	str	r0, [r7, #4]
 80039a4:	687b      	ldr	r3, [r7, #4]
 80039a6:	2b00      	cmp	r3, #0
 80039a8:	d101      	bne.n	80039ae <HAL_RCC_OscConfig+0x12>
 80039aa:	2301      	movs	r3, #1
 80039ac:	e267      	b.n	8003e7e <HAL_RCC_OscConfig+0x4e2>
 80039ae:	687b      	ldr	r3, [r7, #4]
 80039b0:	681b      	ldr	r3, [r3, #0]
 80039b2:	f003 0301 	and.w	r3, r3, #1
 80039b6:	2b00      	cmp	r3, #0
 80039b8:	d075      	beq.n	8003aa6 <HAL_RCC_OscConfig+0x10a>
 80039ba:	4b88      	ldr	r3, [pc, #544]	@ (8003bdc <HAL_RCC_OscConfig+0x240>)
 80039bc:	689b      	ldr	r3, [r3, #8]
 80039be:	f003 030c 	and.w	r3, r3, #12
 80039c2:	2b04      	cmp	r3, #4
 80039c4:	d00c      	beq.n	80039e0 <HAL_RCC_OscConfig+0x44>
 80039c6:	4b85      	ldr	r3, [pc, #532]	@ (8003bdc <HAL_RCC_OscConfig+0x240>)
 80039c8:	689b      	ldr	r3, [r3, #8]
 80039ca:	f003 030c 	and.w	r3, r3, #12
 80039ce:	2b08      	cmp	r3, #8
 80039d0:	d112      	bne.n	80039f8 <HAL_RCC_OscConfig+0x5c>
 80039d2:	4b82      	ldr	r3, [pc, #520]	@ (8003bdc <HAL_RCC_OscConfig+0x240>)
 80039d4:	685b      	ldr	r3, [r3, #4]
 80039d6:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 80039da:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 80039de:	d10b      	bne.n	80039f8 <HAL_RCC_OscConfig+0x5c>
 80039e0:	4b7e      	ldr	r3, [pc, #504]	@ (8003bdc <HAL_RCC_OscConfig+0x240>)
 80039e2:	681b      	ldr	r3, [r3, #0]
 80039e4:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80039e8:	2b00      	cmp	r3, #0
 80039ea:	d05b      	beq.n	8003aa4 <HAL_RCC_OscConfig+0x108>
 80039ec:	687b      	ldr	r3, [r7, #4]
 80039ee:	685b      	ldr	r3, [r3, #4]
 80039f0:	2b00      	cmp	r3, #0
 80039f2:	d157      	bne.n	8003aa4 <HAL_RCC_OscConfig+0x108>
 80039f4:	2301      	movs	r3, #1
 80039f6:	e242      	b.n	8003e7e <HAL_RCC_OscConfig+0x4e2>
 80039f8:	687b      	ldr	r3, [r7, #4]
 80039fa:	685b      	ldr	r3, [r3, #4]
 80039fc:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8003a00:	d106      	bne.n	8003a10 <HAL_RCC_OscConfig+0x74>
 8003a02:	4b76      	ldr	r3, [pc, #472]	@ (8003bdc <HAL_RCC_OscConfig+0x240>)
 8003a04:	681b      	ldr	r3, [r3, #0]
 8003a06:	4a75      	ldr	r2, [pc, #468]	@ (8003bdc <HAL_RCC_OscConfig+0x240>)
 8003a08:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8003a0c:	6013      	str	r3, [r2, #0]
 8003a0e:	e01d      	b.n	8003a4c <HAL_RCC_OscConfig+0xb0>
 8003a10:	687b      	ldr	r3, [r7, #4]
 8003a12:	685b      	ldr	r3, [r3, #4]
 8003a14:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 8003a18:	d10c      	bne.n	8003a34 <HAL_RCC_OscConfig+0x98>
 8003a1a:	4b70      	ldr	r3, [pc, #448]	@ (8003bdc <HAL_RCC_OscConfig+0x240>)
 8003a1c:	681b      	ldr	r3, [r3, #0]
 8003a1e:	4a6f      	ldr	r2, [pc, #444]	@ (8003bdc <HAL_RCC_OscConfig+0x240>)
 8003a20:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8003a24:	6013      	str	r3, [r2, #0]
 8003a26:	4b6d      	ldr	r3, [pc, #436]	@ (8003bdc <HAL_RCC_OscConfig+0x240>)
 8003a28:	681b      	ldr	r3, [r3, #0]
 8003a2a:	4a6c      	ldr	r2, [pc, #432]	@ (8003bdc <HAL_RCC_OscConfig+0x240>)
 8003a2c:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8003a30:	6013      	str	r3, [r2, #0]
 8003a32:	e00b      	b.n	8003a4c <HAL_RCC_OscConfig+0xb0>
 8003a34:	4b69      	ldr	r3, [pc, #420]	@ (8003bdc <HAL_RCC_OscConfig+0x240>)
 8003a36:	681b      	ldr	r3, [r3, #0]
 8003a38:	4a68      	ldr	r2, [pc, #416]	@ (8003bdc <HAL_RCC_OscConfig+0x240>)
 8003a3a:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8003a3e:	6013      	str	r3, [r2, #0]
 8003a40:	4b66      	ldr	r3, [pc, #408]	@ (8003bdc <HAL_RCC_OscConfig+0x240>)
 8003a42:	681b      	ldr	r3, [r3, #0]
 8003a44:	4a65      	ldr	r2, [pc, #404]	@ (8003bdc <HAL_RCC_OscConfig+0x240>)
 8003a46:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8003a4a:	6013      	str	r3, [r2, #0]
 8003a4c:	687b      	ldr	r3, [r7, #4]
 8003a4e:	685b      	ldr	r3, [r3, #4]
 8003a50:	2b00      	cmp	r3, #0
 8003a52:	d013      	beq.n	8003a7c <HAL_RCC_OscConfig+0xe0>
 8003a54:	f7fe fc02 	bl	800225c <HAL_GetTick>
 8003a58:	6138      	str	r0, [r7, #16]
 8003a5a:	e008      	b.n	8003a6e <HAL_RCC_OscConfig+0xd2>
 8003a5c:	f7fe fbfe 	bl	800225c <HAL_GetTick>
 8003a60:	4602      	mov	r2, r0
 8003a62:	693b      	ldr	r3, [r7, #16]
 8003a64:	1ad3      	subs	r3, r2, r3
 8003a66:	2b64      	cmp	r3, #100	@ 0x64
 8003a68:	d901      	bls.n	8003a6e <HAL_RCC_OscConfig+0xd2>
 8003a6a:	2303      	movs	r3, #3
 8003a6c:	e207      	b.n	8003e7e <HAL_RCC_OscConfig+0x4e2>
 8003a6e:	4b5b      	ldr	r3, [pc, #364]	@ (8003bdc <HAL_RCC_OscConfig+0x240>)
 8003a70:	681b      	ldr	r3, [r3, #0]
 8003a72:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8003a76:	2b00      	cmp	r3, #0
 8003a78:	d0f0      	beq.n	8003a5c <HAL_RCC_OscConfig+0xc0>
 8003a7a:	e014      	b.n	8003aa6 <HAL_RCC_OscConfig+0x10a>
 8003a7c:	f7fe fbee 	bl	800225c <HAL_GetTick>
 8003a80:	6138      	str	r0, [r7, #16]
 8003a82:	e008      	b.n	8003a96 <HAL_RCC_OscConfig+0xfa>
 8003a84:	f7fe fbea 	bl	800225c <HAL_GetTick>
 8003a88:	4602      	mov	r2, r0
 8003a8a:	693b      	ldr	r3, [r7, #16]
 8003a8c:	1ad3      	subs	r3, r2, r3
 8003a8e:	2b64      	cmp	r3, #100	@ 0x64
 8003a90:	d901      	bls.n	8003a96 <HAL_RCC_OscConfig+0xfa>
 8003a92:	2303      	movs	r3, #3
 8003a94:	e1f3      	b.n	8003e7e <HAL_RCC_OscConfig+0x4e2>
 8003a96:	4b51      	ldr	r3, [pc, #324]	@ (8003bdc <HAL_RCC_OscConfig+0x240>)
 8003a98:	681b      	ldr	r3, [r3, #0]
 8003a9a:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8003a9e:	2b00      	cmp	r3, #0
 8003aa0:	d1f0      	bne.n	8003a84 <HAL_RCC_OscConfig+0xe8>
 8003aa2:	e000      	b.n	8003aa6 <HAL_RCC_OscConfig+0x10a>
 8003aa4:	bf00      	nop
 8003aa6:	687b      	ldr	r3, [r7, #4]
 8003aa8:	681b      	ldr	r3, [r3, #0]
 8003aaa:	f003 0302 	and.w	r3, r3, #2
 8003aae:	2b00      	cmp	r3, #0
 8003ab0:	d063      	beq.n	8003b7a <HAL_RCC_OscConfig+0x1de>
 8003ab2:	4b4a      	ldr	r3, [pc, #296]	@ (8003bdc <HAL_RCC_OscConfig+0x240>)
 8003ab4:	689b      	ldr	r3, [r3, #8]
 8003ab6:	f003 030c 	and.w	r3, r3, #12
 8003aba:	2b00      	cmp	r3, #0
 8003abc:	d00b      	beq.n	8003ad6 <HAL_RCC_OscConfig+0x13a>
 8003abe:	4b47      	ldr	r3, [pc, #284]	@ (8003bdc <HAL_RCC_OscConfig+0x240>)
 8003ac0:	689b      	ldr	r3, [r3, #8]
 8003ac2:	f003 030c 	and.w	r3, r3, #12
 8003ac6:	2b08      	cmp	r3, #8
 8003ac8:	d11c      	bne.n	8003b04 <HAL_RCC_OscConfig+0x168>
 8003aca:	4b44      	ldr	r3, [pc, #272]	@ (8003bdc <HAL_RCC_OscConfig+0x240>)
 8003acc:	685b      	ldr	r3, [r3, #4]
 8003ace:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8003ad2:	2b00      	cmp	r3, #0
 8003ad4:	d116      	bne.n	8003b04 <HAL_RCC_OscConfig+0x168>
 8003ad6:	4b41      	ldr	r3, [pc, #260]	@ (8003bdc <HAL_RCC_OscConfig+0x240>)
 8003ad8:	681b      	ldr	r3, [r3, #0]
 8003ada:	f003 0302 	and.w	r3, r3, #2
 8003ade:	2b00      	cmp	r3, #0
 8003ae0:	d005      	beq.n	8003aee <HAL_RCC_OscConfig+0x152>
 8003ae2:	687b      	ldr	r3, [r7, #4]
 8003ae4:	68db      	ldr	r3, [r3, #12]
 8003ae6:	2b01      	cmp	r3, #1
 8003ae8:	d001      	beq.n	8003aee <HAL_RCC_OscConfig+0x152>
 8003aea:	2301      	movs	r3, #1
 8003aec:	e1c7      	b.n	8003e7e <HAL_RCC_OscConfig+0x4e2>
 8003aee:	4b3b      	ldr	r3, [pc, #236]	@ (8003bdc <HAL_RCC_OscConfig+0x240>)
 8003af0:	681b      	ldr	r3, [r3, #0]
 8003af2:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 8003af6:	687b      	ldr	r3, [r7, #4]
 8003af8:	691b      	ldr	r3, [r3, #16]
 8003afa:	00db      	lsls	r3, r3, #3
 8003afc:	4937      	ldr	r1, [pc, #220]	@ (8003bdc <HAL_RCC_OscConfig+0x240>)
 8003afe:	4313      	orrs	r3, r2
 8003b00:	600b      	str	r3, [r1, #0]
 8003b02:	e03a      	b.n	8003b7a <HAL_RCC_OscConfig+0x1de>
 8003b04:	687b      	ldr	r3, [r7, #4]
 8003b06:	68db      	ldr	r3, [r3, #12]
 8003b08:	2b00      	cmp	r3, #0
 8003b0a:	d020      	beq.n	8003b4e <HAL_RCC_OscConfig+0x1b2>
 8003b0c:	4b34      	ldr	r3, [pc, #208]	@ (8003be0 <HAL_RCC_OscConfig+0x244>)
 8003b0e:	2201      	movs	r2, #1
 8003b10:	601a      	str	r2, [r3, #0]
 8003b12:	f7fe fba3 	bl	800225c <HAL_GetTick>
 8003b16:	6138      	str	r0, [r7, #16]
 8003b18:	e008      	b.n	8003b2c <HAL_RCC_OscConfig+0x190>
 8003b1a:	f7fe fb9f 	bl	800225c <HAL_GetTick>
 8003b1e:	4602      	mov	r2, r0
 8003b20:	693b      	ldr	r3, [r7, #16]
 8003b22:	1ad3      	subs	r3, r2, r3
 8003b24:	2b02      	cmp	r3, #2
 8003b26:	d901      	bls.n	8003b2c <HAL_RCC_OscConfig+0x190>
 8003b28:	2303      	movs	r3, #3
 8003b2a:	e1a8      	b.n	8003e7e <HAL_RCC_OscConfig+0x4e2>
 8003b2c:	4b2b      	ldr	r3, [pc, #172]	@ (8003bdc <HAL_RCC_OscConfig+0x240>)
 8003b2e:	681b      	ldr	r3, [r3, #0]
 8003b30:	f003 0302 	and.w	r3, r3, #2
 8003b34:	2b00      	cmp	r3, #0
 8003b36:	d0f0      	beq.n	8003b1a <HAL_RCC_OscConfig+0x17e>
 8003b38:	4b28      	ldr	r3, [pc, #160]	@ (8003bdc <HAL_RCC_OscConfig+0x240>)
 8003b3a:	681b      	ldr	r3, [r3, #0]
 8003b3c:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 8003b40:	687b      	ldr	r3, [r7, #4]
 8003b42:	691b      	ldr	r3, [r3, #16]
 8003b44:	00db      	lsls	r3, r3, #3
 8003b46:	4925      	ldr	r1, [pc, #148]	@ (8003bdc <HAL_RCC_OscConfig+0x240>)
 8003b48:	4313      	orrs	r3, r2
 8003b4a:	600b      	str	r3, [r1, #0]
 8003b4c:	e015      	b.n	8003b7a <HAL_RCC_OscConfig+0x1de>
 8003b4e:	4b24      	ldr	r3, [pc, #144]	@ (8003be0 <HAL_RCC_OscConfig+0x244>)
 8003b50:	2200      	movs	r2, #0
 8003b52:	601a      	str	r2, [r3, #0]
 8003b54:	f7fe fb82 	bl	800225c <HAL_GetTick>
 8003b58:	6138      	str	r0, [r7, #16]
 8003b5a:	e008      	b.n	8003b6e <HAL_RCC_OscConfig+0x1d2>
 8003b5c:	f7fe fb7e 	bl	800225c <HAL_GetTick>
 8003b60:	4602      	mov	r2, r0
 8003b62:	693b      	ldr	r3, [r7, #16]
 8003b64:	1ad3      	subs	r3, r2, r3
 8003b66:	2b02      	cmp	r3, #2
 8003b68:	d901      	bls.n	8003b6e <HAL_RCC_OscConfig+0x1d2>
 8003b6a:	2303      	movs	r3, #3
 8003b6c:	e187      	b.n	8003e7e <HAL_RCC_OscConfig+0x4e2>
 8003b6e:	4b1b      	ldr	r3, [pc, #108]	@ (8003bdc <HAL_RCC_OscConfig+0x240>)
 8003b70:	681b      	ldr	r3, [r3, #0]
 8003b72:	f003 0302 	and.w	r3, r3, #2
 8003b76:	2b00      	cmp	r3, #0
 8003b78:	d1f0      	bne.n	8003b5c <HAL_RCC_OscConfig+0x1c0>
 8003b7a:	687b      	ldr	r3, [r7, #4]
 8003b7c:	681b      	ldr	r3, [r3, #0]
 8003b7e:	f003 0308 	and.w	r3, r3, #8
 8003b82:	2b00      	cmp	r3, #0
 8003b84:	d036      	beq.n	8003bf4 <HAL_RCC_OscConfig+0x258>
 8003b86:	687b      	ldr	r3, [r7, #4]
 8003b88:	695b      	ldr	r3, [r3, #20]
 8003b8a:	2b00      	cmp	r3, #0
 8003b8c:	d016      	beq.n	8003bbc <HAL_RCC_OscConfig+0x220>
 8003b8e:	4b15      	ldr	r3, [pc, #84]	@ (8003be4 <HAL_RCC_OscConfig+0x248>)
 8003b90:	2201      	movs	r2, #1
 8003b92:	601a      	str	r2, [r3, #0]
 8003b94:	f7fe fb62 	bl	800225c <HAL_GetTick>
 8003b98:	6138      	str	r0, [r7, #16]
 8003b9a:	e008      	b.n	8003bae <HAL_RCC_OscConfig+0x212>
 8003b9c:	f7fe fb5e 	bl	800225c <HAL_GetTick>
 8003ba0:	4602      	mov	r2, r0
 8003ba2:	693b      	ldr	r3, [r7, #16]
 8003ba4:	1ad3      	subs	r3, r2, r3
 8003ba6:	2b02      	cmp	r3, #2
 8003ba8:	d901      	bls.n	8003bae <HAL_RCC_OscConfig+0x212>
 8003baa:	2303      	movs	r3, #3
 8003bac:	e167      	b.n	8003e7e <HAL_RCC_OscConfig+0x4e2>
 8003bae:	4b0b      	ldr	r3, [pc, #44]	@ (8003bdc <HAL_RCC_OscConfig+0x240>)
 8003bb0:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8003bb2:	f003 0302 	and.w	r3, r3, #2
 8003bb6:	2b00      	cmp	r3, #0
 8003bb8:	d0f0      	beq.n	8003b9c <HAL_RCC_OscConfig+0x200>
 8003bba:	e01b      	b.n	8003bf4 <HAL_RCC_OscConfig+0x258>
 8003bbc:	4b09      	ldr	r3, [pc, #36]	@ (8003be4 <HAL_RCC_OscConfig+0x248>)
 8003bbe:	2200      	movs	r2, #0
 8003bc0:	601a      	str	r2, [r3, #0]
 8003bc2:	f7fe fb4b 	bl	800225c <HAL_GetTick>
 8003bc6:	6138      	str	r0, [r7, #16]
 8003bc8:	e00e      	b.n	8003be8 <HAL_RCC_OscConfig+0x24c>
 8003bca:	f7fe fb47 	bl	800225c <HAL_GetTick>
 8003bce:	4602      	mov	r2, r0
 8003bd0:	693b      	ldr	r3, [r7, #16]
 8003bd2:	1ad3      	subs	r3, r2, r3
 8003bd4:	2b02      	cmp	r3, #2
 8003bd6:	d907      	bls.n	8003be8 <HAL_RCC_OscConfig+0x24c>
 8003bd8:	2303      	movs	r3, #3
 8003bda:	e150      	b.n	8003e7e <HAL_RCC_OscConfig+0x4e2>
 8003bdc:	40023800 	.word	0x40023800
 8003be0:	42470000 	.word	0x42470000
 8003be4:	42470e80 	.word	0x42470e80
 8003be8:	4b88      	ldr	r3, [pc, #544]	@ (8003e0c <HAL_RCC_OscConfig+0x470>)
 8003bea:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8003bec:	f003 0302 	and.w	r3, r3, #2
 8003bf0:	2b00      	cmp	r3, #0
 8003bf2:	d1ea      	bne.n	8003bca <HAL_RCC_OscConfig+0x22e>
 8003bf4:	687b      	ldr	r3, [r7, #4]
 8003bf6:	681b      	ldr	r3, [r3, #0]
 8003bf8:	f003 0304 	and.w	r3, r3, #4
 8003bfc:	2b00      	cmp	r3, #0
 8003bfe:	f000 8097 	beq.w	8003d30 <HAL_RCC_OscConfig+0x394>
 8003c02:	2300      	movs	r3, #0
 8003c04:	75fb      	strb	r3, [r7, #23]
 8003c06:	4b81      	ldr	r3, [pc, #516]	@ (8003e0c <HAL_RCC_OscConfig+0x470>)
 8003c08:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003c0a:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8003c0e:	2b00      	cmp	r3, #0
 8003c10:	d10f      	bne.n	8003c32 <HAL_RCC_OscConfig+0x296>
 8003c12:	2300      	movs	r3, #0
 8003c14:	60bb      	str	r3, [r7, #8]
 8003c16:	4b7d      	ldr	r3, [pc, #500]	@ (8003e0c <HAL_RCC_OscConfig+0x470>)
 8003c18:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003c1a:	4a7c      	ldr	r2, [pc, #496]	@ (8003e0c <HAL_RCC_OscConfig+0x470>)
 8003c1c:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8003c20:	6413      	str	r3, [r2, #64]	@ 0x40
 8003c22:	4b7a      	ldr	r3, [pc, #488]	@ (8003e0c <HAL_RCC_OscConfig+0x470>)
 8003c24:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003c26:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8003c2a:	60bb      	str	r3, [r7, #8]
 8003c2c:	68bb      	ldr	r3, [r7, #8]
 8003c2e:	2301      	movs	r3, #1
 8003c30:	75fb      	strb	r3, [r7, #23]
 8003c32:	4b77      	ldr	r3, [pc, #476]	@ (8003e10 <HAL_RCC_OscConfig+0x474>)
 8003c34:	681b      	ldr	r3, [r3, #0]
 8003c36:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8003c3a:	2b00      	cmp	r3, #0
 8003c3c:	d118      	bne.n	8003c70 <HAL_RCC_OscConfig+0x2d4>
 8003c3e:	4b74      	ldr	r3, [pc, #464]	@ (8003e10 <HAL_RCC_OscConfig+0x474>)
 8003c40:	681b      	ldr	r3, [r3, #0]
 8003c42:	4a73      	ldr	r2, [pc, #460]	@ (8003e10 <HAL_RCC_OscConfig+0x474>)
 8003c44:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8003c48:	6013      	str	r3, [r2, #0]
 8003c4a:	f7fe fb07 	bl	800225c <HAL_GetTick>
 8003c4e:	6138      	str	r0, [r7, #16]
 8003c50:	e008      	b.n	8003c64 <HAL_RCC_OscConfig+0x2c8>
 8003c52:	f7fe fb03 	bl	800225c <HAL_GetTick>
 8003c56:	4602      	mov	r2, r0
 8003c58:	693b      	ldr	r3, [r7, #16]
 8003c5a:	1ad3      	subs	r3, r2, r3
 8003c5c:	2b02      	cmp	r3, #2
 8003c5e:	d901      	bls.n	8003c64 <HAL_RCC_OscConfig+0x2c8>
 8003c60:	2303      	movs	r3, #3
 8003c62:	e10c      	b.n	8003e7e <HAL_RCC_OscConfig+0x4e2>
 8003c64:	4b6a      	ldr	r3, [pc, #424]	@ (8003e10 <HAL_RCC_OscConfig+0x474>)
 8003c66:	681b      	ldr	r3, [r3, #0]
 8003c68:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8003c6c:	2b00      	cmp	r3, #0
 8003c6e:	d0f0      	beq.n	8003c52 <HAL_RCC_OscConfig+0x2b6>
 8003c70:	687b      	ldr	r3, [r7, #4]
 8003c72:	689b      	ldr	r3, [r3, #8]
 8003c74:	2b01      	cmp	r3, #1
 8003c76:	d106      	bne.n	8003c86 <HAL_RCC_OscConfig+0x2ea>
 8003c78:	4b64      	ldr	r3, [pc, #400]	@ (8003e0c <HAL_RCC_OscConfig+0x470>)
 8003c7a:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8003c7c:	4a63      	ldr	r2, [pc, #396]	@ (8003e0c <HAL_RCC_OscConfig+0x470>)
 8003c7e:	f043 0301 	orr.w	r3, r3, #1
 8003c82:	6713      	str	r3, [r2, #112]	@ 0x70
 8003c84:	e01c      	b.n	8003cc0 <HAL_RCC_OscConfig+0x324>
 8003c86:	687b      	ldr	r3, [r7, #4]
 8003c88:	689b      	ldr	r3, [r3, #8]
 8003c8a:	2b05      	cmp	r3, #5
 8003c8c:	d10c      	bne.n	8003ca8 <HAL_RCC_OscConfig+0x30c>
 8003c8e:	4b5f      	ldr	r3, [pc, #380]	@ (8003e0c <HAL_RCC_OscConfig+0x470>)
 8003c90:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8003c92:	4a5e      	ldr	r2, [pc, #376]	@ (8003e0c <HAL_RCC_OscConfig+0x470>)
 8003c94:	f043 0304 	orr.w	r3, r3, #4
 8003c98:	6713      	str	r3, [r2, #112]	@ 0x70
 8003c9a:	4b5c      	ldr	r3, [pc, #368]	@ (8003e0c <HAL_RCC_OscConfig+0x470>)
 8003c9c:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8003c9e:	4a5b      	ldr	r2, [pc, #364]	@ (8003e0c <HAL_RCC_OscConfig+0x470>)
 8003ca0:	f043 0301 	orr.w	r3, r3, #1
 8003ca4:	6713      	str	r3, [r2, #112]	@ 0x70
 8003ca6:	e00b      	b.n	8003cc0 <HAL_RCC_OscConfig+0x324>
 8003ca8:	4b58      	ldr	r3, [pc, #352]	@ (8003e0c <HAL_RCC_OscConfig+0x470>)
 8003caa:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8003cac:	4a57      	ldr	r2, [pc, #348]	@ (8003e0c <HAL_RCC_OscConfig+0x470>)
 8003cae:	f023 0301 	bic.w	r3, r3, #1
 8003cb2:	6713      	str	r3, [r2, #112]	@ 0x70
 8003cb4:	4b55      	ldr	r3, [pc, #340]	@ (8003e0c <HAL_RCC_OscConfig+0x470>)
 8003cb6:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8003cb8:	4a54      	ldr	r2, [pc, #336]	@ (8003e0c <HAL_RCC_OscConfig+0x470>)
 8003cba:	f023 0304 	bic.w	r3, r3, #4
 8003cbe:	6713      	str	r3, [r2, #112]	@ 0x70
 8003cc0:	687b      	ldr	r3, [r7, #4]
 8003cc2:	689b      	ldr	r3, [r3, #8]
 8003cc4:	2b00      	cmp	r3, #0
 8003cc6:	d015      	beq.n	8003cf4 <HAL_RCC_OscConfig+0x358>
 8003cc8:	f7fe fac8 	bl	800225c <HAL_GetTick>
 8003ccc:	6138      	str	r0, [r7, #16]
 8003cce:	e00a      	b.n	8003ce6 <HAL_RCC_OscConfig+0x34a>
 8003cd0:	f7fe fac4 	bl	800225c <HAL_GetTick>
 8003cd4:	4602      	mov	r2, r0
 8003cd6:	693b      	ldr	r3, [r7, #16]
 8003cd8:	1ad3      	subs	r3, r2, r3
 8003cda:	f241 3288 	movw	r2, #5000	@ 0x1388
 8003cde:	4293      	cmp	r3, r2
 8003ce0:	d901      	bls.n	8003ce6 <HAL_RCC_OscConfig+0x34a>
 8003ce2:	2303      	movs	r3, #3
 8003ce4:	e0cb      	b.n	8003e7e <HAL_RCC_OscConfig+0x4e2>
 8003ce6:	4b49      	ldr	r3, [pc, #292]	@ (8003e0c <HAL_RCC_OscConfig+0x470>)
 8003ce8:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8003cea:	f003 0302 	and.w	r3, r3, #2
 8003cee:	2b00      	cmp	r3, #0
 8003cf0:	d0ee      	beq.n	8003cd0 <HAL_RCC_OscConfig+0x334>
 8003cf2:	e014      	b.n	8003d1e <HAL_RCC_OscConfig+0x382>
 8003cf4:	f7fe fab2 	bl	800225c <HAL_GetTick>
 8003cf8:	6138      	str	r0, [r7, #16]
 8003cfa:	e00a      	b.n	8003d12 <HAL_RCC_OscConfig+0x376>
 8003cfc:	f7fe faae 	bl	800225c <HAL_GetTick>
 8003d00:	4602      	mov	r2, r0
 8003d02:	693b      	ldr	r3, [r7, #16]
 8003d04:	1ad3      	subs	r3, r2, r3
 8003d06:	f241 3288 	movw	r2, #5000	@ 0x1388
 8003d0a:	4293      	cmp	r3, r2
 8003d0c:	d901      	bls.n	8003d12 <HAL_RCC_OscConfig+0x376>
 8003d0e:	2303      	movs	r3, #3
 8003d10:	e0b5      	b.n	8003e7e <HAL_RCC_OscConfig+0x4e2>
 8003d12:	4b3e      	ldr	r3, [pc, #248]	@ (8003e0c <HAL_RCC_OscConfig+0x470>)
 8003d14:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8003d16:	f003 0302 	and.w	r3, r3, #2
 8003d1a:	2b00      	cmp	r3, #0
 8003d1c:	d1ee      	bne.n	8003cfc <HAL_RCC_OscConfig+0x360>
 8003d1e:	7dfb      	ldrb	r3, [r7, #23]
 8003d20:	2b01      	cmp	r3, #1
 8003d22:	d105      	bne.n	8003d30 <HAL_RCC_OscConfig+0x394>
 8003d24:	4b39      	ldr	r3, [pc, #228]	@ (8003e0c <HAL_RCC_OscConfig+0x470>)
 8003d26:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003d28:	4a38      	ldr	r2, [pc, #224]	@ (8003e0c <HAL_RCC_OscConfig+0x470>)
 8003d2a:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8003d2e:	6413      	str	r3, [r2, #64]	@ 0x40
 8003d30:	687b      	ldr	r3, [r7, #4]
 8003d32:	699b      	ldr	r3, [r3, #24]
 8003d34:	2b00      	cmp	r3, #0
 8003d36:	f000 80a1 	beq.w	8003e7c <HAL_RCC_OscConfig+0x4e0>
 8003d3a:	4b34      	ldr	r3, [pc, #208]	@ (8003e0c <HAL_RCC_OscConfig+0x470>)
 8003d3c:	689b      	ldr	r3, [r3, #8]
 8003d3e:	f003 030c 	and.w	r3, r3, #12
 8003d42:	2b08      	cmp	r3, #8
 8003d44:	d05c      	beq.n	8003e00 <HAL_RCC_OscConfig+0x464>
 8003d46:	687b      	ldr	r3, [r7, #4]
 8003d48:	699b      	ldr	r3, [r3, #24]
 8003d4a:	2b02      	cmp	r3, #2
 8003d4c:	d141      	bne.n	8003dd2 <HAL_RCC_OscConfig+0x436>
 8003d4e:	4b31      	ldr	r3, [pc, #196]	@ (8003e14 <HAL_RCC_OscConfig+0x478>)
 8003d50:	2200      	movs	r2, #0
 8003d52:	601a      	str	r2, [r3, #0]
 8003d54:	f7fe fa82 	bl	800225c <HAL_GetTick>
 8003d58:	6138      	str	r0, [r7, #16]
 8003d5a:	e008      	b.n	8003d6e <HAL_RCC_OscConfig+0x3d2>
 8003d5c:	f7fe fa7e 	bl	800225c <HAL_GetTick>
 8003d60:	4602      	mov	r2, r0
 8003d62:	693b      	ldr	r3, [r7, #16]
 8003d64:	1ad3      	subs	r3, r2, r3
 8003d66:	2b02      	cmp	r3, #2
 8003d68:	d901      	bls.n	8003d6e <HAL_RCC_OscConfig+0x3d2>
 8003d6a:	2303      	movs	r3, #3
 8003d6c:	e087      	b.n	8003e7e <HAL_RCC_OscConfig+0x4e2>
 8003d6e:	4b27      	ldr	r3, [pc, #156]	@ (8003e0c <HAL_RCC_OscConfig+0x470>)
 8003d70:	681b      	ldr	r3, [r3, #0]
 8003d72:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8003d76:	2b00      	cmp	r3, #0
 8003d78:	d1f0      	bne.n	8003d5c <HAL_RCC_OscConfig+0x3c0>
 8003d7a:	687b      	ldr	r3, [r7, #4]
 8003d7c:	69da      	ldr	r2, [r3, #28]
 8003d7e:	687b      	ldr	r3, [r7, #4]
 8003d80:	6a1b      	ldr	r3, [r3, #32]
 8003d82:	431a      	orrs	r2, r3
 8003d84:	687b      	ldr	r3, [r7, #4]
 8003d86:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003d88:	019b      	lsls	r3, r3, #6
 8003d8a:	431a      	orrs	r2, r3
 8003d8c:	687b      	ldr	r3, [r7, #4]
 8003d8e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8003d90:	085b      	lsrs	r3, r3, #1
 8003d92:	3b01      	subs	r3, #1
 8003d94:	041b      	lsls	r3, r3, #16
 8003d96:	431a      	orrs	r2, r3
 8003d98:	687b      	ldr	r3, [r7, #4]
 8003d9a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003d9c:	061b      	lsls	r3, r3, #24
 8003d9e:	491b      	ldr	r1, [pc, #108]	@ (8003e0c <HAL_RCC_OscConfig+0x470>)
 8003da0:	4313      	orrs	r3, r2
 8003da2:	604b      	str	r3, [r1, #4]
 8003da4:	4b1b      	ldr	r3, [pc, #108]	@ (8003e14 <HAL_RCC_OscConfig+0x478>)
 8003da6:	2201      	movs	r2, #1
 8003da8:	601a      	str	r2, [r3, #0]
 8003daa:	f7fe fa57 	bl	800225c <HAL_GetTick>
 8003dae:	6138      	str	r0, [r7, #16]
 8003db0:	e008      	b.n	8003dc4 <HAL_RCC_OscConfig+0x428>
 8003db2:	f7fe fa53 	bl	800225c <HAL_GetTick>
 8003db6:	4602      	mov	r2, r0
 8003db8:	693b      	ldr	r3, [r7, #16]
 8003dba:	1ad3      	subs	r3, r2, r3
 8003dbc:	2b02      	cmp	r3, #2
 8003dbe:	d901      	bls.n	8003dc4 <HAL_RCC_OscConfig+0x428>
 8003dc0:	2303      	movs	r3, #3
 8003dc2:	e05c      	b.n	8003e7e <HAL_RCC_OscConfig+0x4e2>
 8003dc4:	4b11      	ldr	r3, [pc, #68]	@ (8003e0c <HAL_RCC_OscConfig+0x470>)
 8003dc6:	681b      	ldr	r3, [r3, #0]
 8003dc8:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8003dcc:	2b00      	cmp	r3, #0
 8003dce:	d0f0      	beq.n	8003db2 <HAL_RCC_OscConfig+0x416>
 8003dd0:	e054      	b.n	8003e7c <HAL_RCC_OscConfig+0x4e0>
 8003dd2:	4b10      	ldr	r3, [pc, #64]	@ (8003e14 <HAL_RCC_OscConfig+0x478>)
 8003dd4:	2200      	movs	r2, #0
 8003dd6:	601a      	str	r2, [r3, #0]
 8003dd8:	f7fe fa40 	bl	800225c <HAL_GetTick>
 8003ddc:	6138      	str	r0, [r7, #16]
 8003dde:	e008      	b.n	8003df2 <HAL_RCC_OscConfig+0x456>
 8003de0:	f7fe fa3c 	bl	800225c <HAL_GetTick>
 8003de4:	4602      	mov	r2, r0
 8003de6:	693b      	ldr	r3, [r7, #16]
 8003de8:	1ad3      	subs	r3, r2, r3
 8003dea:	2b02      	cmp	r3, #2
 8003dec:	d901      	bls.n	8003df2 <HAL_RCC_OscConfig+0x456>
 8003dee:	2303      	movs	r3, #3
 8003df0:	e045      	b.n	8003e7e <HAL_RCC_OscConfig+0x4e2>
 8003df2:	4b06      	ldr	r3, [pc, #24]	@ (8003e0c <HAL_RCC_OscConfig+0x470>)
 8003df4:	681b      	ldr	r3, [r3, #0]
 8003df6:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8003dfa:	2b00      	cmp	r3, #0
 8003dfc:	d1f0      	bne.n	8003de0 <HAL_RCC_OscConfig+0x444>
 8003dfe:	e03d      	b.n	8003e7c <HAL_RCC_OscConfig+0x4e0>
 8003e00:	687b      	ldr	r3, [r7, #4]
 8003e02:	699b      	ldr	r3, [r3, #24]
 8003e04:	2b01      	cmp	r3, #1
 8003e06:	d107      	bne.n	8003e18 <HAL_RCC_OscConfig+0x47c>
 8003e08:	2301      	movs	r3, #1
 8003e0a:	e038      	b.n	8003e7e <HAL_RCC_OscConfig+0x4e2>
 8003e0c:	40023800 	.word	0x40023800
 8003e10:	40007000 	.word	0x40007000
 8003e14:	42470060 	.word	0x42470060
 8003e18:	4b1b      	ldr	r3, [pc, #108]	@ (8003e88 <HAL_RCC_OscConfig+0x4ec>)
 8003e1a:	685b      	ldr	r3, [r3, #4]
 8003e1c:	60fb      	str	r3, [r7, #12]
 8003e1e:	687b      	ldr	r3, [r7, #4]
 8003e20:	699b      	ldr	r3, [r3, #24]
 8003e22:	2b01      	cmp	r3, #1
 8003e24:	d028      	beq.n	8003e78 <HAL_RCC_OscConfig+0x4dc>
 8003e26:	68fb      	ldr	r3, [r7, #12]
 8003e28:	f403 0280 	and.w	r2, r3, #4194304	@ 0x400000
 8003e2c:	687b      	ldr	r3, [r7, #4]
 8003e2e:	69db      	ldr	r3, [r3, #28]
 8003e30:	429a      	cmp	r2, r3
 8003e32:	d121      	bne.n	8003e78 <HAL_RCC_OscConfig+0x4dc>
 8003e34:	68fb      	ldr	r3, [r7, #12]
 8003e36:	f003 023f 	and.w	r2, r3, #63	@ 0x3f
 8003e3a:	687b      	ldr	r3, [r7, #4]
 8003e3c:	6a1b      	ldr	r3, [r3, #32]
 8003e3e:	429a      	cmp	r2, r3
 8003e40:	d11a      	bne.n	8003e78 <HAL_RCC_OscConfig+0x4dc>
 8003e42:	68fa      	ldr	r2, [r7, #12]
 8003e44:	f647 73c0 	movw	r3, #32704	@ 0x7fc0
 8003e48:	4013      	ands	r3, r2
 8003e4a:	687a      	ldr	r2, [r7, #4]
 8003e4c:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 8003e4e:	0192      	lsls	r2, r2, #6
 8003e50:	4293      	cmp	r3, r2
 8003e52:	d111      	bne.n	8003e78 <HAL_RCC_OscConfig+0x4dc>
 8003e54:	68fb      	ldr	r3, [r7, #12]
 8003e56:	f403 3240 	and.w	r2, r3, #196608	@ 0x30000
 8003e5a:	687b      	ldr	r3, [r7, #4]
 8003e5c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8003e5e:	085b      	lsrs	r3, r3, #1
 8003e60:	3b01      	subs	r3, #1
 8003e62:	041b      	lsls	r3, r3, #16
 8003e64:	429a      	cmp	r2, r3
 8003e66:	d107      	bne.n	8003e78 <HAL_RCC_OscConfig+0x4dc>
 8003e68:	68fb      	ldr	r3, [r7, #12]
 8003e6a:	f003 6270 	and.w	r2, r3, #251658240	@ 0xf000000
 8003e6e:	687b      	ldr	r3, [r7, #4]
 8003e70:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003e72:	061b      	lsls	r3, r3, #24
 8003e74:	429a      	cmp	r2, r3
 8003e76:	d001      	beq.n	8003e7c <HAL_RCC_OscConfig+0x4e0>
 8003e78:	2301      	movs	r3, #1
 8003e7a:	e000      	b.n	8003e7e <HAL_RCC_OscConfig+0x4e2>
 8003e7c:	2300      	movs	r3, #0
 8003e7e:	4618      	mov	r0, r3
 8003e80:	3718      	adds	r7, #24
 8003e82:	46bd      	mov	sp, r7
 8003e84:	bd80      	pop	{r7, pc}
 8003e86:	bf00      	nop
 8003e88:	40023800 	.word	0x40023800

08003e8c <HAL_RCC_ClockConfig>:
 8003e8c:	b580      	push	{r7, lr}
 8003e8e:	b084      	sub	sp, #16
 8003e90:	af00      	add	r7, sp, #0
 8003e92:	6078      	str	r0, [r7, #4]
 8003e94:	6039      	str	r1, [r7, #0]
 8003e96:	687b      	ldr	r3, [r7, #4]
 8003e98:	2b00      	cmp	r3, #0
 8003e9a:	d101      	bne.n	8003ea0 <HAL_RCC_ClockConfig+0x14>
 8003e9c:	2301      	movs	r3, #1
 8003e9e:	e0cc      	b.n	800403a <HAL_RCC_ClockConfig+0x1ae>
 8003ea0:	4b68      	ldr	r3, [pc, #416]	@ (8004044 <HAL_RCC_ClockConfig+0x1b8>)
 8003ea2:	681b      	ldr	r3, [r3, #0]
 8003ea4:	f003 0307 	and.w	r3, r3, #7
 8003ea8:	683a      	ldr	r2, [r7, #0]
 8003eaa:	429a      	cmp	r2, r3
 8003eac:	d90c      	bls.n	8003ec8 <HAL_RCC_ClockConfig+0x3c>
 8003eae:	4b65      	ldr	r3, [pc, #404]	@ (8004044 <HAL_RCC_ClockConfig+0x1b8>)
 8003eb0:	683a      	ldr	r2, [r7, #0]
 8003eb2:	b2d2      	uxtb	r2, r2
 8003eb4:	701a      	strb	r2, [r3, #0]
 8003eb6:	4b63      	ldr	r3, [pc, #396]	@ (8004044 <HAL_RCC_ClockConfig+0x1b8>)
 8003eb8:	681b      	ldr	r3, [r3, #0]
 8003eba:	f003 0307 	and.w	r3, r3, #7
 8003ebe:	683a      	ldr	r2, [r7, #0]
 8003ec0:	429a      	cmp	r2, r3
 8003ec2:	d001      	beq.n	8003ec8 <HAL_RCC_ClockConfig+0x3c>
 8003ec4:	2301      	movs	r3, #1
 8003ec6:	e0b8      	b.n	800403a <HAL_RCC_ClockConfig+0x1ae>
 8003ec8:	687b      	ldr	r3, [r7, #4]
 8003eca:	681b      	ldr	r3, [r3, #0]
 8003ecc:	f003 0302 	and.w	r3, r3, #2
 8003ed0:	2b00      	cmp	r3, #0
 8003ed2:	d020      	beq.n	8003f16 <HAL_RCC_ClockConfig+0x8a>
 8003ed4:	687b      	ldr	r3, [r7, #4]
 8003ed6:	681b      	ldr	r3, [r3, #0]
 8003ed8:	f003 0304 	and.w	r3, r3, #4
 8003edc:	2b00      	cmp	r3, #0
 8003ede:	d005      	beq.n	8003eec <HAL_RCC_ClockConfig+0x60>
 8003ee0:	4b59      	ldr	r3, [pc, #356]	@ (8004048 <HAL_RCC_ClockConfig+0x1bc>)
 8003ee2:	689b      	ldr	r3, [r3, #8]
 8003ee4:	4a58      	ldr	r2, [pc, #352]	@ (8004048 <HAL_RCC_ClockConfig+0x1bc>)
 8003ee6:	f443 53e0 	orr.w	r3, r3, #7168	@ 0x1c00
 8003eea:	6093      	str	r3, [r2, #8]
 8003eec:	687b      	ldr	r3, [r7, #4]
 8003eee:	681b      	ldr	r3, [r3, #0]
 8003ef0:	f003 0308 	and.w	r3, r3, #8
 8003ef4:	2b00      	cmp	r3, #0
 8003ef6:	d005      	beq.n	8003f04 <HAL_RCC_ClockConfig+0x78>
 8003ef8:	4b53      	ldr	r3, [pc, #332]	@ (8004048 <HAL_RCC_ClockConfig+0x1bc>)
 8003efa:	689b      	ldr	r3, [r3, #8]
 8003efc:	4a52      	ldr	r2, [pc, #328]	@ (8004048 <HAL_RCC_ClockConfig+0x1bc>)
 8003efe:	f443 4360 	orr.w	r3, r3, #57344	@ 0xe000
 8003f02:	6093      	str	r3, [r2, #8]
 8003f04:	4b50      	ldr	r3, [pc, #320]	@ (8004048 <HAL_RCC_ClockConfig+0x1bc>)
 8003f06:	689b      	ldr	r3, [r3, #8]
 8003f08:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 8003f0c:	687b      	ldr	r3, [r7, #4]
 8003f0e:	689b      	ldr	r3, [r3, #8]
 8003f10:	494d      	ldr	r1, [pc, #308]	@ (8004048 <HAL_RCC_ClockConfig+0x1bc>)
 8003f12:	4313      	orrs	r3, r2
 8003f14:	608b      	str	r3, [r1, #8]
 8003f16:	687b      	ldr	r3, [r7, #4]
 8003f18:	681b      	ldr	r3, [r3, #0]
 8003f1a:	f003 0301 	and.w	r3, r3, #1
 8003f1e:	2b00      	cmp	r3, #0
 8003f20:	d044      	beq.n	8003fac <HAL_RCC_ClockConfig+0x120>
 8003f22:	687b      	ldr	r3, [r7, #4]
 8003f24:	685b      	ldr	r3, [r3, #4]
 8003f26:	2b01      	cmp	r3, #1
 8003f28:	d107      	bne.n	8003f3a <HAL_RCC_ClockConfig+0xae>
 8003f2a:	4b47      	ldr	r3, [pc, #284]	@ (8004048 <HAL_RCC_ClockConfig+0x1bc>)
 8003f2c:	681b      	ldr	r3, [r3, #0]
 8003f2e:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8003f32:	2b00      	cmp	r3, #0
 8003f34:	d119      	bne.n	8003f6a <HAL_RCC_ClockConfig+0xde>
 8003f36:	2301      	movs	r3, #1
 8003f38:	e07f      	b.n	800403a <HAL_RCC_ClockConfig+0x1ae>
 8003f3a:	687b      	ldr	r3, [r7, #4]
 8003f3c:	685b      	ldr	r3, [r3, #4]
 8003f3e:	2b02      	cmp	r3, #2
 8003f40:	d003      	beq.n	8003f4a <HAL_RCC_ClockConfig+0xbe>
 8003f42:	687b      	ldr	r3, [r7, #4]
 8003f44:	685b      	ldr	r3, [r3, #4]
 8003f46:	2b03      	cmp	r3, #3
 8003f48:	d107      	bne.n	8003f5a <HAL_RCC_ClockConfig+0xce>
 8003f4a:	4b3f      	ldr	r3, [pc, #252]	@ (8004048 <HAL_RCC_ClockConfig+0x1bc>)
 8003f4c:	681b      	ldr	r3, [r3, #0]
 8003f4e:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8003f52:	2b00      	cmp	r3, #0
 8003f54:	d109      	bne.n	8003f6a <HAL_RCC_ClockConfig+0xde>
 8003f56:	2301      	movs	r3, #1
 8003f58:	e06f      	b.n	800403a <HAL_RCC_ClockConfig+0x1ae>
 8003f5a:	4b3b      	ldr	r3, [pc, #236]	@ (8004048 <HAL_RCC_ClockConfig+0x1bc>)
 8003f5c:	681b      	ldr	r3, [r3, #0]
 8003f5e:	f003 0302 	and.w	r3, r3, #2
 8003f62:	2b00      	cmp	r3, #0
 8003f64:	d101      	bne.n	8003f6a <HAL_RCC_ClockConfig+0xde>
 8003f66:	2301      	movs	r3, #1
 8003f68:	e067      	b.n	800403a <HAL_RCC_ClockConfig+0x1ae>
 8003f6a:	4b37      	ldr	r3, [pc, #220]	@ (8004048 <HAL_RCC_ClockConfig+0x1bc>)
 8003f6c:	689b      	ldr	r3, [r3, #8]
 8003f6e:	f023 0203 	bic.w	r2, r3, #3
 8003f72:	687b      	ldr	r3, [r7, #4]
 8003f74:	685b      	ldr	r3, [r3, #4]
 8003f76:	4934      	ldr	r1, [pc, #208]	@ (8004048 <HAL_RCC_ClockConfig+0x1bc>)
 8003f78:	4313      	orrs	r3, r2
 8003f7a:	608b      	str	r3, [r1, #8]
 8003f7c:	f7fe f96e 	bl	800225c <HAL_GetTick>
 8003f80:	60f8      	str	r0, [r7, #12]
 8003f82:	e00a      	b.n	8003f9a <HAL_RCC_ClockConfig+0x10e>
 8003f84:	f7fe f96a 	bl	800225c <HAL_GetTick>
 8003f88:	4602      	mov	r2, r0
 8003f8a:	68fb      	ldr	r3, [r7, #12]
 8003f8c:	1ad3      	subs	r3, r2, r3
 8003f8e:	f241 3288 	movw	r2, #5000	@ 0x1388
 8003f92:	4293      	cmp	r3, r2
 8003f94:	d901      	bls.n	8003f9a <HAL_RCC_ClockConfig+0x10e>
 8003f96:	2303      	movs	r3, #3
 8003f98:	e04f      	b.n	800403a <HAL_RCC_ClockConfig+0x1ae>
 8003f9a:	4b2b      	ldr	r3, [pc, #172]	@ (8004048 <HAL_RCC_ClockConfig+0x1bc>)
 8003f9c:	689b      	ldr	r3, [r3, #8]
 8003f9e:	f003 020c 	and.w	r2, r3, #12
 8003fa2:	687b      	ldr	r3, [r7, #4]
 8003fa4:	685b      	ldr	r3, [r3, #4]
 8003fa6:	009b      	lsls	r3, r3, #2
 8003fa8:	429a      	cmp	r2, r3
 8003faa:	d1eb      	bne.n	8003f84 <HAL_RCC_ClockConfig+0xf8>
 8003fac:	4b25      	ldr	r3, [pc, #148]	@ (8004044 <HAL_RCC_ClockConfig+0x1b8>)
 8003fae:	681b      	ldr	r3, [r3, #0]
 8003fb0:	f003 0307 	and.w	r3, r3, #7
 8003fb4:	683a      	ldr	r2, [r7, #0]
 8003fb6:	429a      	cmp	r2, r3
 8003fb8:	d20c      	bcs.n	8003fd4 <HAL_RCC_ClockConfig+0x148>
 8003fba:	4b22      	ldr	r3, [pc, #136]	@ (8004044 <HAL_RCC_ClockConfig+0x1b8>)
 8003fbc:	683a      	ldr	r2, [r7, #0]
 8003fbe:	b2d2      	uxtb	r2, r2
 8003fc0:	701a      	strb	r2, [r3, #0]
 8003fc2:	4b20      	ldr	r3, [pc, #128]	@ (8004044 <HAL_RCC_ClockConfig+0x1b8>)
 8003fc4:	681b      	ldr	r3, [r3, #0]
 8003fc6:	f003 0307 	and.w	r3, r3, #7
 8003fca:	683a      	ldr	r2, [r7, #0]
 8003fcc:	429a      	cmp	r2, r3
 8003fce:	d001      	beq.n	8003fd4 <HAL_RCC_ClockConfig+0x148>
 8003fd0:	2301      	movs	r3, #1
 8003fd2:	e032      	b.n	800403a <HAL_RCC_ClockConfig+0x1ae>
 8003fd4:	687b      	ldr	r3, [r7, #4]
 8003fd6:	681b      	ldr	r3, [r3, #0]
 8003fd8:	f003 0304 	and.w	r3, r3, #4
 8003fdc:	2b00      	cmp	r3, #0
 8003fde:	d008      	beq.n	8003ff2 <HAL_RCC_ClockConfig+0x166>
 8003fe0:	4b19      	ldr	r3, [pc, #100]	@ (8004048 <HAL_RCC_ClockConfig+0x1bc>)
 8003fe2:	689b      	ldr	r3, [r3, #8]
 8003fe4:	f423 52e0 	bic.w	r2, r3, #7168	@ 0x1c00
 8003fe8:	687b      	ldr	r3, [r7, #4]
 8003fea:	68db      	ldr	r3, [r3, #12]
 8003fec:	4916      	ldr	r1, [pc, #88]	@ (8004048 <HAL_RCC_ClockConfig+0x1bc>)
 8003fee:	4313      	orrs	r3, r2
 8003ff0:	608b      	str	r3, [r1, #8]
 8003ff2:	687b      	ldr	r3, [r7, #4]
 8003ff4:	681b      	ldr	r3, [r3, #0]
 8003ff6:	f003 0308 	and.w	r3, r3, #8
 8003ffa:	2b00      	cmp	r3, #0
 8003ffc:	d009      	beq.n	8004012 <HAL_RCC_ClockConfig+0x186>
 8003ffe:	4b12      	ldr	r3, [pc, #72]	@ (8004048 <HAL_RCC_ClockConfig+0x1bc>)
 8004000:	689b      	ldr	r3, [r3, #8]
 8004002:	f423 4260 	bic.w	r2, r3, #57344	@ 0xe000
 8004006:	687b      	ldr	r3, [r7, #4]
 8004008:	691b      	ldr	r3, [r3, #16]
 800400a:	00db      	lsls	r3, r3, #3
 800400c:	490e      	ldr	r1, [pc, #56]	@ (8004048 <HAL_RCC_ClockConfig+0x1bc>)
 800400e:	4313      	orrs	r3, r2
 8004010:	608b      	str	r3, [r1, #8]
 8004012:	f000 f821 	bl	8004058 <HAL_RCC_GetSysClockFreq>
 8004016:	4602      	mov	r2, r0
 8004018:	4b0b      	ldr	r3, [pc, #44]	@ (8004048 <HAL_RCC_ClockConfig+0x1bc>)
 800401a:	689b      	ldr	r3, [r3, #8]
 800401c:	091b      	lsrs	r3, r3, #4
 800401e:	f003 030f 	and.w	r3, r3, #15
 8004022:	490a      	ldr	r1, [pc, #40]	@ (800404c <HAL_RCC_ClockConfig+0x1c0>)
 8004024:	5ccb      	ldrb	r3, [r1, r3]
 8004026:	fa22 f303 	lsr.w	r3, r2, r3
 800402a:	4a09      	ldr	r2, [pc, #36]	@ (8004050 <HAL_RCC_ClockConfig+0x1c4>)
 800402c:	6013      	str	r3, [r2, #0]
 800402e:	4b09      	ldr	r3, [pc, #36]	@ (8004054 <HAL_RCC_ClockConfig+0x1c8>)
 8004030:	681b      	ldr	r3, [r3, #0]
 8004032:	4618      	mov	r0, r3
 8004034:	f7fe f8ce 	bl	80021d4 <HAL_InitTick>
 8004038:	2300      	movs	r3, #0
 800403a:	4618      	mov	r0, r3
 800403c:	3710      	adds	r7, #16
 800403e:	46bd      	mov	sp, r7
 8004040:	bd80      	pop	{r7, pc}
 8004042:	bf00      	nop
 8004044:	40023c00 	.word	0x40023c00
 8004048:	40023800 	.word	0x40023800
 800404c:	08005940 	.word	0x08005940
 8004050:	20000200 	.word	0x20000200
 8004054:	20000204 	.word	0x20000204

08004058 <HAL_RCC_GetSysClockFreq>:
 8004058:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 800405c:	b090      	sub	sp, #64	@ 0x40
 800405e:	af00      	add	r7, sp, #0
 8004060:	2300      	movs	r3, #0
 8004062:	637b      	str	r3, [r7, #52]	@ 0x34
 8004064:	2300      	movs	r3, #0
 8004066:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8004068:	2300      	movs	r3, #0
 800406a:	633b      	str	r3, [r7, #48]	@ 0x30
 800406c:	2300      	movs	r3, #0
 800406e:	63bb      	str	r3, [r7, #56]	@ 0x38
 8004070:	4b59      	ldr	r3, [pc, #356]	@ (80041d8 <HAL_RCC_GetSysClockFreq+0x180>)
 8004072:	689b      	ldr	r3, [r3, #8]
 8004074:	f003 030c 	and.w	r3, r3, #12
 8004078:	2b08      	cmp	r3, #8
 800407a:	d00d      	beq.n	8004098 <HAL_RCC_GetSysClockFreq+0x40>
 800407c:	2b08      	cmp	r3, #8
 800407e:	f200 80a1 	bhi.w	80041c4 <HAL_RCC_GetSysClockFreq+0x16c>
 8004082:	2b00      	cmp	r3, #0
 8004084:	d002      	beq.n	800408c <HAL_RCC_GetSysClockFreq+0x34>
 8004086:	2b04      	cmp	r3, #4
 8004088:	d003      	beq.n	8004092 <HAL_RCC_GetSysClockFreq+0x3a>
 800408a:	e09b      	b.n	80041c4 <HAL_RCC_GetSysClockFreq+0x16c>
 800408c:	4b53      	ldr	r3, [pc, #332]	@ (80041dc <HAL_RCC_GetSysClockFreq+0x184>)
 800408e:	63bb      	str	r3, [r7, #56]	@ 0x38
 8004090:	e09b      	b.n	80041ca <HAL_RCC_GetSysClockFreq+0x172>
 8004092:	4b53      	ldr	r3, [pc, #332]	@ (80041e0 <HAL_RCC_GetSysClockFreq+0x188>)
 8004094:	63bb      	str	r3, [r7, #56]	@ 0x38
 8004096:	e098      	b.n	80041ca <HAL_RCC_GetSysClockFreq+0x172>
 8004098:	4b4f      	ldr	r3, [pc, #316]	@ (80041d8 <HAL_RCC_GetSysClockFreq+0x180>)
 800409a:	685b      	ldr	r3, [r3, #4]
 800409c:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 80040a0:	637b      	str	r3, [r7, #52]	@ 0x34
 80040a2:	4b4d      	ldr	r3, [pc, #308]	@ (80041d8 <HAL_RCC_GetSysClockFreq+0x180>)
 80040a4:	685b      	ldr	r3, [r3, #4]
 80040a6:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 80040aa:	2b00      	cmp	r3, #0
 80040ac:	d028      	beq.n	8004100 <HAL_RCC_GetSysClockFreq+0xa8>
 80040ae:	4b4a      	ldr	r3, [pc, #296]	@ (80041d8 <HAL_RCC_GetSysClockFreq+0x180>)
 80040b0:	685b      	ldr	r3, [r3, #4]
 80040b2:	099b      	lsrs	r3, r3, #6
 80040b4:	2200      	movs	r2, #0
 80040b6:	623b      	str	r3, [r7, #32]
 80040b8:	627a      	str	r2, [r7, #36]	@ 0x24
 80040ba:	6a3b      	ldr	r3, [r7, #32]
 80040bc:	f3c3 0008 	ubfx	r0, r3, #0, #9
 80040c0:	2100      	movs	r1, #0
 80040c2:	4b47      	ldr	r3, [pc, #284]	@ (80041e0 <HAL_RCC_GetSysClockFreq+0x188>)
 80040c4:	fb03 f201 	mul.w	r2, r3, r1
 80040c8:	2300      	movs	r3, #0
 80040ca:	fb00 f303 	mul.w	r3, r0, r3
 80040ce:	4413      	add	r3, r2
 80040d0:	4a43      	ldr	r2, [pc, #268]	@ (80041e0 <HAL_RCC_GetSysClockFreq+0x188>)
 80040d2:	fba0 1202 	umull	r1, r2, r0, r2
 80040d6:	62fa      	str	r2, [r7, #44]	@ 0x2c
 80040d8:	460a      	mov	r2, r1
 80040da:	62ba      	str	r2, [r7, #40]	@ 0x28
 80040dc:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 80040de:	4413      	add	r3, r2
 80040e0:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80040e2:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 80040e4:	2200      	movs	r2, #0
 80040e6:	61bb      	str	r3, [r7, #24]
 80040e8:	61fa      	str	r2, [r7, #28]
 80040ea:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 80040ee:	e9d7 010a 	ldrd	r0, r1, [r7, #40]	@ 0x28
 80040f2:	f7fc f8c5 	bl	8000280 <__aeabi_uldivmod>
 80040f6:	4602      	mov	r2, r0
 80040f8:	460b      	mov	r3, r1
 80040fa:	4613      	mov	r3, r2
 80040fc:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80040fe:	e053      	b.n	80041a8 <HAL_RCC_GetSysClockFreq+0x150>
 8004100:	4b35      	ldr	r3, [pc, #212]	@ (80041d8 <HAL_RCC_GetSysClockFreq+0x180>)
 8004102:	685b      	ldr	r3, [r3, #4]
 8004104:	099b      	lsrs	r3, r3, #6
 8004106:	2200      	movs	r2, #0
 8004108:	613b      	str	r3, [r7, #16]
 800410a:	617a      	str	r2, [r7, #20]
 800410c:	693b      	ldr	r3, [r7, #16]
 800410e:	f3c3 0a08 	ubfx	sl, r3, #0, #9
 8004112:	f04f 0b00 	mov.w	fp, #0
 8004116:	4652      	mov	r2, sl
 8004118:	465b      	mov	r3, fp
 800411a:	f04f 0000 	mov.w	r0, #0
 800411e:	f04f 0100 	mov.w	r1, #0
 8004122:	0159      	lsls	r1, r3, #5
 8004124:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8004128:	0150      	lsls	r0, r2, #5
 800412a:	4602      	mov	r2, r0
 800412c:	460b      	mov	r3, r1
 800412e:	ebb2 080a 	subs.w	r8, r2, sl
 8004132:	eb63 090b 	sbc.w	r9, r3, fp
 8004136:	f04f 0200 	mov.w	r2, #0
 800413a:	f04f 0300 	mov.w	r3, #0
 800413e:	ea4f 1389 	mov.w	r3, r9, lsl #6
 8004142:	ea43 6398 	orr.w	r3, r3, r8, lsr #26
 8004146:	ea4f 1288 	mov.w	r2, r8, lsl #6
 800414a:	ebb2 0408 	subs.w	r4, r2, r8
 800414e:	eb63 0509 	sbc.w	r5, r3, r9
 8004152:	f04f 0200 	mov.w	r2, #0
 8004156:	f04f 0300 	mov.w	r3, #0
 800415a:	00eb      	lsls	r3, r5, #3
 800415c:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8004160:	00e2      	lsls	r2, r4, #3
 8004162:	4614      	mov	r4, r2
 8004164:	461d      	mov	r5, r3
 8004166:	eb14 030a 	adds.w	r3, r4, sl
 800416a:	603b      	str	r3, [r7, #0]
 800416c:	eb45 030b 	adc.w	r3, r5, fp
 8004170:	607b      	str	r3, [r7, #4]
 8004172:	f04f 0200 	mov.w	r2, #0
 8004176:	f04f 0300 	mov.w	r3, #0
 800417a:	e9d7 4500 	ldrd	r4, r5, [r7]
 800417e:	4629      	mov	r1, r5
 8004180:	028b      	lsls	r3, r1, #10
 8004182:	4621      	mov	r1, r4
 8004184:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 8004188:	4621      	mov	r1, r4
 800418a:	028a      	lsls	r2, r1, #10
 800418c:	4610      	mov	r0, r2
 800418e:	4619      	mov	r1, r3
 8004190:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8004192:	2200      	movs	r2, #0
 8004194:	60bb      	str	r3, [r7, #8]
 8004196:	60fa      	str	r2, [r7, #12]
 8004198:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 800419c:	f7fc f870 	bl	8000280 <__aeabi_uldivmod>
 80041a0:	4602      	mov	r2, r0
 80041a2:	460b      	mov	r3, r1
 80041a4:	4613      	mov	r3, r2
 80041a6:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80041a8:	4b0b      	ldr	r3, [pc, #44]	@ (80041d8 <HAL_RCC_GetSysClockFreq+0x180>)
 80041aa:	685b      	ldr	r3, [r3, #4]
 80041ac:	0c1b      	lsrs	r3, r3, #16
 80041ae:	f003 0303 	and.w	r3, r3, #3
 80041b2:	3301      	adds	r3, #1
 80041b4:	005b      	lsls	r3, r3, #1
 80041b6:	633b      	str	r3, [r7, #48]	@ 0x30
 80041b8:	6bfa      	ldr	r2, [r7, #60]	@ 0x3c
 80041ba:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80041bc:	fbb2 f3f3 	udiv	r3, r2, r3
 80041c0:	63bb      	str	r3, [r7, #56]	@ 0x38
 80041c2:	e002      	b.n	80041ca <HAL_RCC_GetSysClockFreq+0x172>
 80041c4:	4b05      	ldr	r3, [pc, #20]	@ (80041dc <HAL_RCC_GetSysClockFreq+0x184>)
 80041c6:	63bb      	str	r3, [r7, #56]	@ 0x38
 80041c8:	bf00      	nop
 80041ca:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80041cc:	4618      	mov	r0, r3
 80041ce:	3740      	adds	r7, #64	@ 0x40
 80041d0:	46bd      	mov	sp, r7
 80041d2:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 80041d6:	bf00      	nop
 80041d8:	40023800 	.word	0x40023800
 80041dc:	00f42400 	.word	0x00f42400
 80041e0:	017d7840 	.word	0x017d7840

080041e4 <HAL_RCC_GetHCLKFreq>:
 80041e4:	b480      	push	{r7}
 80041e6:	af00      	add	r7, sp, #0
 80041e8:	4b03      	ldr	r3, [pc, #12]	@ (80041f8 <HAL_RCC_GetHCLKFreq+0x14>)
 80041ea:	681b      	ldr	r3, [r3, #0]
 80041ec:	4618      	mov	r0, r3
 80041ee:	46bd      	mov	sp, r7
 80041f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80041f4:	4770      	bx	lr
 80041f6:	bf00      	nop
 80041f8:	20000200 	.word	0x20000200

080041fc <HAL_RCC_GetPCLK1Freq>:
 80041fc:	b580      	push	{r7, lr}
 80041fe:	af00      	add	r7, sp, #0
 8004200:	f7ff fff0 	bl	80041e4 <HAL_RCC_GetHCLKFreq>
 8004204:	4602      	mov	r2, r0
 8004206:	4b05      	ldr	r3, [pc, #20]	@ (800421c <HAL_RCC_GetPCLK1Freq+0x20>)
 8004208:	689b      	ldr	r3, [r3, #8]
 800420a:	0a9b      	lsrs	r3, r3, #10
 800420c:	f003 0307 	and.w	r3, r3, #7
 8004210:	4903      	ldr	r1, [pc, #12]	@ (8004220 <HAL_RCC_GetPCLK1Freq+0x24>)
 8004212:	5ccb      	ldrb	r3, [r1, r3]
 8004214:	fa22 f303 	lsr.w	r3, r2, r3
 8004218:	4618      	mov	r0, r3
 800421a:	bd80      	pop	{r7, pc}
 800421c:	40023800 	.word	0x40023800
 8004220:	08005950 	.word	0x08005950

08004224 <HAL_TIM_Base_Start>:
 8004224:	b480      	push	{r7}
 8004226:	b085      	sub	sp, #20
 8004228:	af00      	add	r7, sp, #0
 800422a:	6078      	str	r0, [r7, #4]
 800422c:	687b      	ldr	r3, [r7, #4]
 800422e:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8004232:	b2db      	uxtb	r3, r3
 8004234:	2b01      	cmp	r3, #1
 8004236:	d001      	beq.n	800423c <HAL_TIM_Base_Start+0x18>
 8004238:	2301      	movs	r3, #1
 800423a:	e03c      	b.n	80042b6 <HAL_TIM_Base_Start+0x92>
 800423c:	687b      	ldr	r3, [r7, #4]
 800423e:	2202      	movs	r2, #2
 8004240:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8004244:	687b      	ldr	r3, [r7, #4]
 8004246:	681b      	ldr	r3, [r3, #0]
 8004248:	4a1e      	ldr	r2, [pc, #120]	@ (80042c4 <HAL_TIM_Base_Start+0xa0>)
 800424a:	4293      	cmp	r3, r2
 800424c:	d018      	beq.n	8004280 <HAL_TIM_Base_Start+0x5c>
 800424e:	687b      	ldr	r3, [r7, #4]
 8004250:	681b      	ldr	r3, [r3, #0]
 8004252:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8004256:	d013      	beq.n	8004280 <HAL_TIM_Base_Start+0x5c>
 8004258:	687b      	ldr	r3, [r7, #4]
 800425a:	681b      	ldr	r3, [r3, #0]
 800425c:	4a1a      	ldr	r2, [pc, #104]	@ (80042c8 <HAL_TIM_Base_Start+0xa4>)
 800425e:	4293      	cmp	r3, r2
 8004260:	d00e      	beq.n	8004280 <HAL_TIM_Base_Start+0x5c>
 8004262:	687b      	ldr	r3, [r7, #4]
 8004264:	681b      	ldr	r3, [r3, #0]
 8004266:	4a19      	ldr	r2, [pc, #100]	@ (80042cc <HAL_TIM_Base_Start+0xa8>)
 8004268:	4293      	cmp	r3, r2
 800426a:	d009      	beq.n	8004280 <HAL_TIM_Base_Start+0x5c>
 800426c:	687b      	ldr	r3, [r7, #4]
 800426e:	681b      	ldr	r3, [r3, #0]
 8004270:	4a17      	ldr	r2, [pc, #92]	@ (80042d0 <HAL_TIM_Base_Start+0xac>)
 8004272:	4293      	cmp	r3, r2
 8004274:	d004      	beq.n	8004280 <HAL_TIM_Base_Start+0x5c>
 8004276:	687b      	ldr	r3, [r7, #4]
 8004278:	681b      	ldr	r3, [r3, #0]
 800427a:	4a16      	ldr	r2, [pc, #88]	@ (80042d4 <HAL_TIM_Base_Start+0xb0>)
 800427c:	4293      	cmp	r3, r2
 800427e:	d111      	bne.n	80042a4 <HAL_TIM_Base_Start+0x80>
 8004280:	687b      	ldr	r3, [r7, #4]
 8004282:	681b      	ldr	r3, [r3, #0]
 8004284:	689b      	ldr	r3, [r3, #8]
 8004286:	f003 0307 	and.w	r3, r3, #7
 800428a:	60fb      	str	r3, [r7, #12]
 800428c:	68fb      	ldr	r3, [r7, #12]
 800428e:	2b06      	cmp	r3, #6
 8004290:	d010      	beq.n	80042b4 <HAL_TIM_Base_Start+0x90>
 8004292:	687b      	ldr	r3, [r7, #4]
 8004294:	681b      	ldr	r3, [r3, #0]
 8004296:	681a      	ldr	r2, [r3, #0]
 8004298:	687b      	ldr	r3, [r7, #4]
 800429a:	681b      	ldr	r3, [r3, #0]
 800429c:	f042 0201 	orr.w	r2, r2, #1
 80042a0:	601a      	str	r2, [r3, #0]
 80042a2:	e007      	b.n	80042b4 <HAL_TIM_Base_Start+0x90>
 80042a4:	687b      	ldr	r3, [r7, #4]
 80042a6:	681b      	ldr	r3, [r3, #0]
 80042a8:	681a      	ldr	r2, [r3, #0]
 80042aa:	687b      	ldr	r3, [r7, #4]
 80042ac:	681b      	ldr	r3, [r3, #0]
 80042ae:	f042 0201 	orr.w	r2, r2, #1
 80042b2:	601a      	str	r2, [r3, #0]
 80042b4:	2300      	movs	r3, #0
 80042b6:	4618      	mov	r0, r3
 80042b8:	3714      	adds	r7, #20
 80042ba:	46bd      	mov	sp, r7
 80042bc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80042c0:	4770      	bx	lr
 80042c2:	bf00      	nop
 80042c4:	40010000 	.word	0x40010000
 80042c8:	40000400 	.word	0x40000400
 80042cc:	40000800 	.word	0x40000800
 80042d0:	40000c00 	.word	0x40000c00
 80042d4:	40014000 	.word	0x40014000

080042d8 <HAL_TIM_PWM_Init>:
 80042d8:	b580      	push	{r7, lr}
 80042da:	b082      	sub	sp, #8
 80042dc:	af00      	add	r7, sp, #0
 80042de:	6078      	str	r0, [r7, #4]
 80042e0:	687b      	ldr	r3, [r7, #4]
 80042e2:	2b00      	cmp	r3, #0
 80042e4:	d101      	bne.n	80042ea <HAL_TIM_PWM_Init+0x12>
 80042e6:	2301      	movs	r3, #1
 80042e8:	e041      	b.n	800436e <HAL_TIM_PWM_Init+0x96>
 80042ea:	687b      	ldr	r3, [r7, #4]
 80042ec:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 80042f0:	b2db      	uxtb	r3, r3
 80042f2:	2b00      	cmp	r3, #0
 80042f4:	d106      	bne.n	8004304 <HAL_TIM_PWM_Init+0x2c>
 80042f6:	687b      	ldr	r3, [r7, #4]
 80042f8:	2200      	movs	r2, #0
 80042fa:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80042fe:	6878      	ldr	r0, [r7, #4]
 8004300:	f7fd fd38 	bl	8001d74 <HAL_TIM_PWM_MspInit>
 8004304:	687b      	ldr	r3, [r7, #4]
 8004306:	2202      	movs	r2, #2
 8004308:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800430c:	687b      	ldr	r3, [r7, #4]
 800430e:	681a      	ldr	r2, [r3, #0]
 8004310:	687b      	ldr	r3, [r7, #4]
 8004312:	3304      	adds	r3, #4
 8004314:	4619      	mov	r1, r3
 8004316:	4610      	mov	r0, r2
 8004318:	f000 fb22 	bl	8004960 <TIM_Base_SetConfig>
 800431c:	687b      	ldr	r3, [r7, #4]
 800431e:	2201      	movs	r2, #1
 8004320:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 8004324:	687b      	ldr	r3, [r7, #4]
 8004326:	2201      	movs	r2, #1
 8004328:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800432c:	687b      	ldr	r3, [r7, #4]
 800432e:	2201      	movs	r2, #1
 8004330:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8004334:	687b      	ldr	r3, [r7, #4]
 8004336:	2201      	movs	r2, #1
 8004338:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 800433c:	687b      	ldr	r3, [r7, #4]
 800433e:	2201      	movs	r2, #1
 8004340:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8004344:	687b      	ldr	r3, [r7, #4]
 8004346:	2201      	movs	r2, #1
 8004348:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 800434c:	687b      	ldr	r3, [r7, #4]
 800434e:	2201      	movs	r2, #1
 8004350:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 8004354:	687b      	ldr	r3, [r7, #4]
 8004356:	2201      	movs	r2, #1
 8004358:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 800435c:	687b      	ldr	r3, [r7, #4]
 800435e:	2201      	movs	r2, #1
 8004360:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8004364:	687b      	ldr	r3, [r7, #4]
 8004366:	2201      	movs	r2, #1
 8004368:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800436c:	2300      	movs	r3, #0
 800436e:	4618      	mov	r0, r3
 8004370:	3708      	adds	r7, #8
 8004372:	46bd      	mov	sp, r7
 8004374:	bd80      	pop	{r7, pc}
	...

08004378 <HAL_TIM_PWM_Start_IT>:
 8004378:	b580      	push	{r7, lr}
 800437a:	b084      	sub	sp, #16
 800437c:	af00      	add	r7, sp, #0
 800437e:	6078      	str	r0, [r7, #4]
 8004380:	6039      	str	r1, [r7, #0]
 8004382:	2300      	movs	r3, #0
 8004384:	73fb      	strb	r3, [r7, #15]
 8004386:	683b      	ldr	r3, [r7, #0]
 8004388:	2b00      	cmp	r3, #0
 800438a:	d109      	bne.n	80043a0 <HAL_TIM_PWM_Start_IT+0x28>
 800438c:	687b      	ldr	r3, [r7, #4]
 800438e:	f893 303e 	ldrb.w	r3, [r3, #62]	@ 0x3e
 8004392:	b2db      	uxtb	r3, r3
 8004394:	2b01      	cmp	r3, #1
 8004396:	bf14      	ite	ne
 8004398:	2301      	movne	r3, #1
 800439a:	2300      	moveq	r3, #0
 800439c:	b2db      	uxtb	r3, r3
 800439e:	e022      	b.n	80043e6 <HAL_TIM_PWM_Start_IT+0x6e>
 80043a0:	683b      	ldr	r3, [r7, #0]
 80043a2:	2b04      	cmp	r3, #4
 80043a4:	d109      	bne.n	80043ba <HAL_TIM_PWM_Start_IT+0x42>
 80043a6:	687b      	ldr	r3, [r7, #4]
 80043a8:	f893 303f 	ldrb.w	r3, [r3, #63]	@ 0x3f
 80043ac:	b2db      	uxtb	r3, r3
 80043ae:	2b01      	cmp	r3, #1
 80043b0:	bf14      	ite	ne
 80043b2:	2301      	movne	r3, #1
 80043b4:	2300      	moveq	r3, #0
 80043b6:	b2db      	uxtb	r3, r3
 80043b8:	e015      	b.n	80043e6 <HAL_TIM_PWM_Start_IT+0x6e>
 80043ba:	683b      	ldr	r3, [r7, #0]
 80043bc:	2b08      	cmp	r3, #8
 80043be:	d109      	bne.n	80043d4 <HAL_TIM_PWM_Start_IT+0x5c>
 80043c0:	687b      	ldr	r3, [r7, #4]
 80043c2:	f893 3040 	ldrb.w	r3, [r3, #64]	@ 0x40
 80043c6:	b2db      	uxtb	r3, r3
 80043c8:	2b01      	cmp	r3, #1
 80043ca:	bf14      	ite	ne
 80043cc:	2301      	movne	r3, #1
 80043ce:	2300      	moveq	r3, #0
 80043d0:	b2db      	uxtb	r3, r3
 80043d2:	e008      	b.n	80043e6 <HAL_TIM_PWM_Start_IT+0x6e>
 80043d4:	687b      	ldr	r3, [r7, #4]
 80043d6:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 80043da:	b2db      	uxtb	r3, r3
 80043dc:	2b01      	cmp	r3, #1
 80043de:	bf14      	ite	ne
 80043e0:	2301      	movne	r3, #1
 80043e2:	2300      	moveq	r3, #0
 80043e4:	b2db      	uxtb	r3, r3
 80043e6:	2b00      	cmp	r3, #0
 80043e8:	d001      	beq.n	80043ee <HAL_TIM_PWM_Start_IT+0x76>
 80043ea:	2301      	movs	r3, #1
 80043ec:	e0b3      	b.n	8004556 <HAL_TIM_PWM_Start_IT+0x1de>
 80043ee:	683b      	ldr	r3, [r7, #0]
 80043f0:	2b00      	cmp	r3, #0
 80043f2:	d104      	bne.n	80043fe <HAL_TIM_PWM_Start_IT+0x86>
 80043f4:	687b      	ldr	r3, [r7, #4]
 80043f6:	2202      	movs	r2, #2
 80043f8:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 80043fc:	e013      	b.n	8004426 <HAL_TIM_PWM_Start_IT+0xae>
 80043fe:	683b      	ldr	r3, [r7, #0]
 8004400:	2b04      	cmp	r3, #4
 8004402:	d104      	bne.n	800440e <HAL_TIM_PWM_Start_IT+0x96>
 8004404:	687b      	ldr	r3, [r7, #4]
 8004406:	2202      	movs	r2, #2
 8004408:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 800440c:	e00b      	b.n	8004426 <HAL_TIM_PWM_Start_IT+0xae>
 800440e:	683b      	ldr	r3, [r7, #0]
 8004410:	2b08      	cmp	r3, #8
 8004412:	d104      	bne.n	800441e <HAL_TIM_PWM_Start_IT+0xa6>
 8004414:	687b      	ldr	r3, [r7, #4]
 8004416:	2202      	movs	r2, #2
 8004418:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 800441c:	e003      	b.n	8004426 <HAL_TIM_PWM_Start_IT+0xae>
 800441e:	687b      	ldr	r3, [r7, #4]
 8004420:	2202      	movs	r2, #2
 8004422:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8004426:	683b      	ldr	r3, [r7, #0]
 8004428:	2b0c      	cmp	r3, #12
 800442a:	d841      	bhi.n	80044b0 <HAL_TIM_PWM_Start_IT+0x138>
 800442c:	a201      	add	r2, pc, #4	@ (adr r2, 8004434 <HAL_TIM_PWM_Start_IT+0xbc>)
 800442e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8004432:	bf00      	nop
 8004434:	08004469 	.word	0x08004469
 8004438:	080044b1 	.word	0x080044b1
 800443c:	080044b1 	.word	0x080044b1
 8004440:	080044b1 	.word	0x080044b1
 8004444:	0800447b 	.word	0x0800447b
 8004448:	080044b1 	.word	0x080044b1
 800444c:	080044b1 	.word	0x080044b1
 8004450:	080044b1 	.word	0x080044b1
 8004454:	0800448d 	.word	0x0800448d
 8004458:	080044b1 	.word	0x080044b1
 800445c:	080044b1 	.word	0x080044b1
 8004460:	080044b1 	.word	0x080044b1
 8004464:	0800449f 	.word	0x0800449f
 8004468:	687b      	ldr	r3, [r7, #4]
 800446a:	681b      	ldr	r3, [r3, #0]
 800446c:	68da      	ldr	r2, [r3, #12]
 800446e:	687b      	ldr	r3, [r7, #4]
 8004470:	681b      	ldr	r3, [r3, #0]
 8004472:	f042 0202 	orr.w	r2, r2, #2
 8004476:	60da      	str	r2, [r3, #12]
 8004478:	e01d      	b.n	80044b6 <HAL_TIM_PWM_Start_IT+0x13e>
 800447a:	687b      	ldr	r3, [r7, #4]
 800447c:	681b      	ldr	r3, [r3, #0]
 800447e:	68da      	ldr	r2, [r3, #12]
 8004480:	687b      	ldr	r3, [r7, #4]
 8004482:	681b      	ldr	r3, [r3, #0]
 8004484:	f042 0204 	orr.w	r2, r2, #4
 8004488:	60da      	str	r2, [r3, #12]
 800448a:	e014      	b.n	80044b6 <HAL_TIM_PWM_Start_IT+0x13e>
 800448c:	687b      	ldr	r3, [r7, #4]
 800448e:	681b      	ldr	r3, [r3, #0]
 8004490:	68da      	ldr	r2, [r3, #12]
 8004492:	687b      	ldr	r3, [r7, #4]
 8004494:	681b      	ldr	r3, [r3, #0]
 8004496:	f042 0208 	orr.w	r2, r2, #8
 800449a:	60da      	str	r2, [r3, #12]
 800449c:	e00b      	b.n	80044b6 <HAL_TIM_PWM_Start_IT+0x13e>
 800449e:	687b      	ldr	r3, [r7, #4]
 80044a0:	681b      	ldr	r3, [r3, #0]
 80044a2:	68da      	ldr	r2, [r3, #12]
 80044a4:	687b      	ldr	r3, [r7, #4]
 80044a6:	681b      	ldr	r3, [r3, #0]
 80044a8:	f042 0210 	orr.w	r2, r2, #16
 80044ac:	60da      	str	r2, [r3, #12]
 80044ae:	e002      	b.n	80044b6 <HAL_TIM_PWM_Start_IT+0x13e>
 80044b0:	2301      	movs	r3, #1
 80044b2:	73fb      	strb	r3, [r7, #15]
 80044b4:	bf00      	nop
 80044b6:	7bfb      	ldrb	r3, [r7, #15]
 80044b8:	2b00      	cmp	r3, #0
 80044ba:	d14b      	bne.n	8004554 <HAL_TIM_PWM_Start_IT+0x1dc>
 80044bc:	687b      	ldr	r3, [r7, #4]
 80044be:	681b      	ldr	r3, [r3, #0]
 80044c0:	2201      	movs	r2, #1
 80044c2:	6839      	ldr	r1, [r7, #0]
 80044c4:	4618      	mov	r0, r3
 80044c6:	f000 fc5d 	bl	8004d84 <TIM_CCxChannelCmd>
 80044ca:	687b      	ldr	r3, [r7, #4]
 80044cc:	681b      	ldr	r3, [r3, #0]
 80044ce:	4a24      	ldr	r2, [pc, #144]	@ (8004560 <HAL_TIM_PWM_Start_IT+0x1e8>)
 80044d0:	4293      	cmp	r3, r2
 80044d2:	d107      	bne.n	80044e4 <HAL_TIM_PWM_Start_IT+0x16c>
 80044d4:	687b      	ldr	r3, [r7, #4]
 80044d6:	681b      	ldr	r3, [r3, #0]
 80044d8:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 80044da:	687b      	ldr	r3, [r7, #4]
 80044dc:	681b      	ldr	r3, [r3, #0]
 80044de:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 80044e2:	645a      	str	r2, [r3, #68]	@ 0x44
 80044e4:	687b      	ldr	r3, [r7, #4]
 80044e6:	681b      	ldr	r3, [r3, #0]
 80044e8:	4a1d      	ldr	r2, [pc, #116]	@ (8004560 <HAL_TIM_PWM_Start_IT+0x1e8>)
 80044ea:	4293      	cmp	r3, r2
 80044ec:	d018      	beq.n	8004520 <HAL_TIM_PWM_Start_IT+0x1a8>
 80044ee:	687b      	ldr	r3, [r7, #4]
 80044f0:	681b      	ldr	r3, [r3, #0]
 80044f2:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80044f6:	d013      	beq.n	8004520 <HAL_TIM_PWM_Start_IT+0x1a8>
 80044f8:	687b      	ldr	r3, [r7, #4]
 80044fa:	681b      	ldr	r3, [r3, #0]
 80044fc:	4a19      	ldr	r2, [pc, #100]	@ (8004564 <HAL_TIM_PWM_Start_IT+0x1ec>)
 80044fe:	4293      	cmp	r3, r2
 8004500:	d00e      	beq.n	8004520 <HAL_TIM_PWM_Start_IT+0x1a8>
 8004502:	687b      	ldr	r3, [r7, #4]
 8004504:	681b      	ldr	r3, [r3, #0]
 8004506:	4a18      	ldr	r2, [pc, #96]	@ (8004568 <HAL_TIM_PWM_Start_IT+0x1f0>)
 8004508:	4293      	cmp	r3, r2
 800450a:	d009      	beq.n	8004520 <HAL_TIM_PWM_Start_IT+0x1a8>
 800450c:	687b      	ldr	r3, [r7, #4]
 800450e:	681b      	ldr	r3, [r3, #0]
 8004510:	4a16      	ldr	r2, [pc, #88]	@ (800456c <HAL_TIM_PWM_Start_IT+0x1f4>)
 8004512:	4293      	cmp	r3, r2
 8004514:	d004      	beq.n	8004520 <HAL_TIM_PWM_Start_IT+0x1a8>
 8004516:	687b      	ldr	r3, [r7, #4]
 8004518:	681b      	ldr	r3, [r3, #0]
 800451a:	4a15      	ldr	r2, [pc, #84]	@ (8004570 <HAL_TIM_PWM_Start_IT+0x1f8>)
 800451c:	4293      	cmp	r3, r2
 800451e:	d111      	bne.n	8004544 <HAL_TIM_PWM_Start_IT+0x1cc>
 8004520:	687b      	ldr	r3, [r7, #4]
 8004522:	681b      	ldr	r3, [r3, #0]
 8004524:	689b      	ldr	r3, [r3, #8]
 8004526:	f003 0307 	and.w	r3, r3, #7
 800452a:	60bb      	str	r3, [r7, #8]
 800452c:	68bb      	ldr	r3, [r7, #8]
 800452e:	2b06      	cmp	r3, #6
 8004530:	d010      	beq.n	8004554 <HAL_TIM_PWM_Start_IT+0x1dc>
 8004532:	687b      	ldr	r3, [r7, #4]
 8004534:	681b      	ldr	r3, [r3, #0]
 8004536:	681a      	ldr	r2, [r3, #0]
 8004538:	687b      	ldr	r3, [r7, #4]
 800453a:	681b      	ldr	r3, [r3, #0]
 800453c:	f042 0201 	orr.w	r2, r2, #1
 8004540:	601a      	str	r2, [r3, #0]
 8004542:	e007      	b.n	8004554 <HAL_TIM_PWM_Start_IT+0x1dc>
 8004544:	687b      	ldr	r3, [r7, #4]
 8004546:	681b      	ldr	r3, [r3, #0]
 8004548:	681a      	ldr	r2, [r3, #0]
 800454a:	687b      	ldr	r3, [r7, #4]
 800454c:	681b      	ldr	r3, [r3, #0]
 800454e:	f042 0201 	orr.w	r2, r2, #1
 8004552:	601a      	str	r2, [r3, #0]
 8004554:	7bfb      	ldrb	r3, [r7, #15]
 8004556:	4618      	mov	r0, r3
 8004558:	3710      	adds	r7, #16
 800455a:	46bd      	mov	sp, r7
 800455c:	bd80      	pop	{r7, pc}
 800455e:	bf00      	nop
 8004560:	40010000 	.word	0x40010000
 8004564:	40000400 	.word	0x40000400
 8004568:	40000800 	.word	0x40000800
 800456c:	40000c00 	.word	0x40000c00
 8004570:	40014000 	.word	0x40014000

08004574 <HAL_TIM_Encoder_Init>:
 8004574:	b580      	push	{r7, lr}
 8004576:	b086      	sub	sp, #24
 8004578:	af00      	add	r7, sp, #0
 800457a:	6078      	str	r0, [r7, #4]
 800457c:	6039      	str	r1, [r7, #0]
 800457e:	687b      	ldr	r3, [r7, #4]
 8004580:	2b00      	cmp	r3, #0
 8004582:	d101      	bne.n	8004588 <HAL_TIM_Encoder_Init+0x14>
 8004584:	2301      	movs	r3, #1
 8004586:	e097      	b.n	80046b8 <HAL_TIM_Encoder_Init+0x144>
 8004588:	687b      	ldr	r3, [r7, #4]
 800458a:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 800458e:	b2db      	uxtb	r3, r3
 8004590:	2b00      	cmp	r3, #0
 8004592:	d106      	bne.n	80045a2 <HAL_TIM_Encoder_Init+0x2e>
 8004594:	687b      	ldr	r3, [r7, #4]
 8004596:	2200      	movs	r2, #0
 8004598:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800459c:	6878      	ldr	r0, [r7, #4]
 800459e:	f7fd fc35 	bl	8001e0c <HAL_TIM_Encoder_MspInit>
 80045a2:	687b      	ldr	r3, [r7, #4]
 80045a4:	2202      	movs	r2, #2
 80045a6:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80045aa:	687b      	ldr	r3, [r7, #4]
 80045ac:	681b      	ldr	r3, [r3, #0]
 80045ae:	689b      	ldr	r3, [r3, #8]
 80045b0:	687a      	ldr	r2, [r7, #4]
 80045b2:	6812      	ldr	r2, [r2, #0]
 80045b4:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 80045b8:	f023 0307 	bic.w	r3, r3, #7
 80045bc:	6093      	str	r3, [r2, #8]
 80045be:	687b      	ldr	r3, [r7, #4]
 80045c0:	681a      	ldr	r2, [r3, #0]
 80045c2:	687b      	ldr	r3, [r7, #4]
 80045c4:	3304      	adds	r3, #4
 80045c6:	4619      	mov	r1, r3
 80045c8:	4610      	mov	r0, r2
 80045ca:	f000 f9c9 	bl	8004960 <TIM_Base_SetConfig>
 80045ce:	687b      	ldr	r3, [r7, #4]
 80045d0:	681b      	ldr	r3, [r3, #0]
 80045d2:	689b      	ldr	r3, [r3, #8]
 80045d4:	617b      	str	r3, [r7, #20]
 80045d6:	687b      	ldr	r3, [r7, #4]
 80045d8:	681b      	ldr	r3, [r3, #0]
 80045da:	699b      	ldr	r3, [r3, #24]
 80045dc:	613b      	str	r3, [r7, #16]
 80045de:	687b      	ldr	r3, [r7, #4]
 80045e0:	681b      	ldr	r3, [r3, #0]
 80045e2:	6a1b      	ldr	r3, [r3, #32]
 80045e4:	60fb      	str	r3, [r7, #12]
 80045e6:	683b      	ldr	r3, [r7, #0]
 80045e8:	681b      	ldr	r3, [r3, #0]
 80045ea:	697a      	ldr	r2, [r7, #20]
 80045ec:	4313      	orrs	r3, r2
 80045ee:	617b      	str	r3, [r7, #20]
 80045f0:	693b      	ldr	r3, [r7, #16]
 80045f2:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 80045f6:	f023 0303 	bic.w	r3, r3, #3
 80045fa:	613b      	str	r3, [r7, #16]
 80045fc:	683b      	ldr	r3, [r7, #0]
 80045fe:	689a      	ldr	r2, [r3, #8]
 8004600:	683b      	ldr	r3, [r7, #0]
 8004602:	699b      	ldr	r3, [r3, #24]
 8004604:	021b      	lsls	r3, r3, #8
 8004606:	4313      	orrs	r3, r2
 8004608:	693a      	ldr	r2, [r7, #16]
 800460a:	4313      	orrs	r3, r2
 800460c:	613b      	str	r3, [r7, #16]
 800460e:	693b      	ldr	r3, [r7, #16]
 8004610:	f423 6340 	bic.w	r3, r3, #3072	@ 0xc00
 8004614:	f023 030c 	bic.w	r3, r3, #12
 8004618:	613b      	str	r3, [r7, #16]
 800461a:	693b      	ldr	r3, [r7, #16]
 800461c:	f423 4370 	bic.w	r3, r3, #61440	@ 0xf000
 8004620:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 8004624:	613b      	str	r3, [r7, #16]
 8004626:	683b      	ldr	r3, [r7, #0]
 8004628:	68da      	ldr	r2, [r3, #12]
 800462a:	683b      	ldr	r3, [r7, #0]
 800462c:	69db      	ldr	r3, [r3, #28]
 800462e:	021b      	lsls	r3, r3, #8
 8004630:	4313      	orrs	r3, r2
 8004632:	693a      	ldr	r2, [r7, #16]
 8004634:	4313      	orrs	r3, r2
 8004636:	613b      	str	r3, [r7, #16]
 8004638:	683b      	ldr	r3, [r7, #0]
 800463a:	691b      	ldr	r3, [r3, #16]
 800463c:	011a      	lsls	r2, r3, #4
 800463e:	683b      	ldr	r3, [r7, #0]
 8004640:	6a1b      	ldr	r3, [r3, #32]
 8004642:	031b      	lsls	r3, r3, #12
 8004644:	4313      	orrs	r3, r2
 8004646:	693a      	ldr	r2, [r7, #16]
 8004648:	4313      	orrs	r3, r2
 800464a:	613b      	str	r3, [r7, #16]
 800464c:	68fb      	ldr	r3, [r7, #12]
 800464e:	f023 0322 	bic.w	r3, r3, #34	@ 0x22
 8004652:	60fb      	str	r3, [r7, #12]
 8004654:	68fb      	ldr	r3, [r7, #12]
 8004656:	f023 0388 	bic.w	r3, r3, #136	@ 0x88
 800465a:	60fb      	str	r3, [r7, #12]
 800465c:	683b      	ldr	r3, [r7, #0]
 800465e:	685a      	ldr	r2, [r3, #4]
 8004660:	683b      	ldr	r3, [r7, #0]
 8004662:	695b      	ldr	r3, [r3, #20]
 8004664:	011b      	lsls	r3, r3, #4
 8004666:	4313      	orrs	r3, r2
 8004668:	68fa      	ldr	r2, [r7, #12]
 800466a:	4313      	orrs	r3, r2
 800466c:	60fb      	str	r3, [r7, #12]
 800466e:	687b      	ldr	r3, [r7, #4]
 8004670:	681b      	ldr	r3, [r3, #0]
 8004672:	697a      	ldr	r2, [r7, #20]
 8004674:	609a      	str	r2, [r3, #8]
 8004676:	687b      	ldr	r3, [r7, #4]
 8004678:	681b      	ldr	r3, [r3, #0]
 800467a:	693a      	ldr	r2, [r7, #16]
 800467c:	619a      	str	r2, [r3, #24]
 800467e:	687b      	ldr	r3, [r7, #4]
 8004680:	681b      	ldr	r3, [r3, #0]
 8004682:	68fa      	ldr	r2, [r7, #12]
 8004684:	621a      	str	r2, [r3, #32]
 8004686:	687b      	ldr	r3, [r7, #4]
 8004688:	2201      	movs	r2, #1
 800468a:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 800468e:	687b      	ldr	r3, [r7, #4]
 8004690:	2201      	movs	r2, #1
 8004692:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8004696:	687b      	ldr	r3, [r7, #4]
 8004698:	2201      	movs	r2, #1
 800469a:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 800469e:	687b      	ldr	r3, [r7, #4]
 80046a0:	2201      	movs	r2, #1
 80046a2:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 80046a6:	687b      	ldr	r3, [r7, #4]
 80046a8:	2201      	movs	r2, #1
 80046aa:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 80046ae:	687b      	ldr	r3, [r7, #4]
 80046b0:	2201      	movs	r2, #1
 80046b2:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80046b6:	2300      	movs	r3, #0
 80046b8:	4618      	mov	r0, r3
 80046ba:	3718      	adds	r7, #24
 80046bc:	46bd      	mov	sp, r7
 80046be:	bd80      	pop	{r7, pc}

080046c0 <HAL_TIM_Encoder_Start>:
 80046c0:	b580      	push	{r7, lr}
 80046c2:	b084      	sub	sp, #16
 80046c4:	af00      	add	r7, sp, #0
 80046c6:	6078      	str	r0, [r7, #4]
 80046c8:	6039      	str	r1, [r7, #0]
 80046ca:	687b      	ldr	r3, [r7, #4]
 80046cc:	f893 303e 	ldrb.w	r3, [r3, #62]	@ 0x3e
 80046d0:	73fb      	strb	r3, [r7, #15]
 80046d2:	687b      	ldr	r3, [r7, #4]
 80046d4:	f893 303f 	ldrb.w	r3, [r3, #63]	@ 0x3f
 80046d8:	73bb      	strb	r3, [r7, #14]
 80046da:	687b      	ldr	r3, [r7, #4]
 80046dc:	f893 3042 	ldrb.w	r3, [r3, #66]	@ 0x42
 80046e0:	737b      	strb	r3, [r7, #13]
 80046e2:	687b      	ldr	r3, [r7, #4]
 80046e4:	f893 3043 	ldrb.w	r3, [r3, #67]	@ 0x43
 80046e8:	733b      	strb	r3, [r7, #12]
 80046ea:	683b      	ldr	r3, [r7, #0]
 80046ec:	2b00      	cmp	r3, #0
 80046ee:	d110      	bne.n	8004712 <HAL_TIM_Encoder_Start+0x52>
 80046f0:	7bfb      	ldrb	r3, [r7, #15]
 80046f2:	2b01      	cmp	r3, #1
 80046f4:	d102      	bne.n	80046fc <HAL_TIM_Encoder_Start+0x3c>
 80046f6:	7b7b      	ldrb	r3, [r7, #13]
 80046f8:	2b01      	cmp	r3, #1
 80046fa:	d001      	beq.n	8004700 <HAL_TIM_Encoder_Start+0x40>
 80046fc:	2301      	movs	r3, #1
 80046fe:	e069      	b.n	80047d4 <HAL_TIM_Encoder_Start+0x114>
 8004700:	687b      	ldr	r3, [r7, #4]
 8004702:	2202      	movs	r2, #2
 8004704:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8004708:	687b      	ldr	r3, [r7, #4]
 800470a:	2202      	movs	r2, #2
 800470c:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8004710:	e031      	b.n	8004776 <HAL_TIM_Encoder_Start+0xb6>
 8004712:	683b      	ldr	r3, [r7, #0]
 8004714:	2b04      	cmp	r3, #4
 8004716:	d110      	bne.n	800473a <HAL_TIM_Encoder_Start+0x7a>
 8004718:	7bbb      	ldrb	r3, [r7, #14]
 800471a:	2b01      	cmp	r3, #1
 800471c:	d102      	bne.n	8004724 <HAL_TIM_Encoder_Start+0x64>
 800471e:	7b3b      	ldrb	r3, [r7, #12]
 8004720:	2b01      	cmp	r3, #1
 8004722:	d001      	beq.n	8004728 <HAL_TIM_Encoder_Start+0x68>
 8004724:	2301      	movs	r3, #1
 8004726:	e055      	b.n	80047d4 <HAL_TIM_Encoder_Start+0x114>
 8004728:	687b      	ldr	r3, [r7, #4]
 800472a:	2202      	movs	r2, #2
 800472c:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8004730:	687b      	ldr	r3, [r7, #4]
 8004732:	2202      	movs	r2, #2
 8004734:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 8004738:	e01d      	b.n	8004776 <HAL_TIM_Encoder_Start+0xb6>
 800473a:	7bfb      	ldrb	r3, [r7, #15]
 800473c:	2b01      	cmp	r3, #1
 800473e:	d108      	bne.n	8004752 <HAL_TIM_Encoder_Start+0x92>
 8004740:	7bbb      	ldrb	r3, [r7, #14]
 8004742:	2b01      	cmp	r3, #1
 8004744:	d105      	bne.n	8004752 <HAL_TIM_Encoder_Start+0x92>
 8004746:	7b7b      	ldrb	r3, [r7, #13]
 8004748:	2b01      	cmp	r3, #1
 800474a:	d102      	bne.n	8004752 <HAL_TIM_Encoder_Start+0x92>
 800474c:	7b3b      	ldrb	r3, [r7, #12]
 800474e:	2b01      	cmp	r3, #1
 8004750:	d001      	beq.n	8004756 <HAL_TIM_Encoder_Start+0x96>
 8004752:	2301      	movs	r3, #1
 8004754:	e03e      	b.n	80047d4 <HAL_TIM_Encoder_Start+0x114>
 8004756:	687b      	ldr	r3, [r7, #4]
 8004758:	2202      	movs	r2, #2
 800475a:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800475e:	687b      	ldr	r3, [r7, #4]
 8004760:	2202      	movs	r2, #2
 8004762:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8004766:	687b      	ldr	r3, [r7, #4]
 8004768:	2202      	movs	r2, #2
 800476a:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 800476e:	687b      	ldr	r3, [r7, #4]
 8004770:	2202      	movs	r2, #2
 8004772:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 8004776:	683b      	ldr	r3, [r7, #0]
 8004778:	2b00      	cmp	r3, #0
 800477a:	d003      	beq.n	8004784 <HAL_TIM_Encoder_Start+0xc4>
 800477c:	683b      	ldr	r3, [r7, #0]
 800477e:	2b04      	cmp	r3, #4
 8004780:	d008      	beq.n	8004794 <HAL_TIM_Encoder_Start+0xd4>
 8004782:	e00f      	b.n	80047a4 <HAL_TIM_Encoder_Start+0xe4>
 8004784:	687b      	ldr	r3, [r7, #4]
 8004786:	681b      	ldr	r3, [r3, #0]
 8004788:	2201      	movs	r2, #1
 800478a:	2100      	movs	r1, #0
 800478c:	4618      	mov	r0, r3
 800478e:	f000 faf9 	bl	8004d84 <TIM_CCxChannelCmd>
 8004792:	e016      	b.n	80047c2 <HAL_TIM_Encoder_Start+0x102>
 8004794:	687b      	ldr	r3, [r7, #4]
 8004796:	681b      	ldr	r3, [r3, #0]
 8004798:	2201      	movs	r2, #1
 800479a:	2104      	movs	r1, #4
 800479c:	4618      	mov	r0, r3
 800479e:	f000 faf1 	bl	8004d84 <TIM_CCxChannelCmd>
 80047a2:	e00e      	b.n	80047c2 <HAL_TIM_Encoder_Start+0x102>
 80047a4:	687b      	ldr	r3, [r7, #4]
 80047a6:	681b      	ldr	r3, [r3, #0]
 80047a8:	2201      	movs	r2, #1
 80047aa:	2100      	movs	r1, #0
 80047ac:	4618      	mov	r0, r3
 80047ae:	f000 fae9 	bl	8004d84 <TIM_CCxChannelCmd>
 80047b2:	687b      	ldr	r3, [r7, #4]
 80047b4:	681b      	ldr	r3, [r3, #0]
 80047b6:	2201      	movs	r2, #1
 80047b8:	2104      	movs	r1, #4
 80047ba:	4618      	mov	r0, r3
 80047bc:	f000 fae2 	bl	8004d84 <TIM_CCxChannelCmd>
 80047c0:	bf00      	nop
 80047c2:	687b      	ldr	r3, [r7, #4]
 80047c4:	681b      	ldr	r3, [r3, #0]
 80047c6:	681a      	ldr	r2, [r3, #0]
 80047c8:	687b      	ldr	r3, [r7, #4]
 80047ca:	681b      	ldr	r3, [r3, #0]
 80047cc:	f042 0201 	orr.w	r2, r2, #1
 80047d0:	601a      	str	r2, [r3, #0]
 80047d2:	2300      	movs	r3, #0
 80047d4:	4618      	mov	r0, r3
 80047d6:	3710      	adds	r7, #16
 80047d8:	46bd      	mov	sp, r7
 80047da:	bd80      	pop	{r7, pc}

080047dc <HAL_TIM_PWM_ConfigChannel>:
 80047dc:	b580      	push	{r7, lr}
 80047de:	b086      	sub	sp, #24
 80047e0:	af00      	add	r7, sp, #0
 80047e2:	60f8      	str	r0, [r7, #12]
 80047e4:	60b9      	str	r1, [r7, #8]
 80047e6:	607a      	str	r2, [r7, #4]
 80047e8:	2300      	movs	r3, #0
 80047ea:	75fb      	strb	r3, [r7, #23]
 80047ec:	68fb      	ldr	r3, [r7, #12]
 80047ee:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 80047f2:	2b01      	cmp	r3, #1
 80047f4:	d101      	bne.n	80047fa <HAL_TIM_PWM_ConfigChannel+0x1e>
 80047f6:	2302      	movs	r3, #2
 80047f8:	e0ae      	b.n	8004958 <HAL_TIM_PWM_ConfigChannel+0x17c>
 80047fa:	68fb      	ldr	r3, [r7, #12]
 80047fc:	2201      	movs	r2, #1
 80047fe:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8004802:	687b      	ldr	r3, [r7, #4]
 8004804:	2b0c      	cmp	r3, #12
 8004806:	f200 809f 	bhi.w	8004948 <HAL_TIM_PWM_ConfigChannel+0x16c>
 800480a:	a201      	add	r2, pc, #4	@ (adr r2, 8004810 <HAL_TIM_PWM_ConfigChannel+0x34>)
 800480c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8004810:	08004845 	.word	0x08004845
 8004814:	08004949 	.word	0x08004949
 8004818:	08004949 	.word	0x08004949
 800481c:	08004949 	.word	0x08004949
 8004820:	08004885 	.word	0x08004885
 8004824:	08004949 	.word	0x08004949
 8004828:	08004949 	.word	0x08004949
 800482c:	08004949 	.word	0x08004949
 8004830:	080048c7 	.word	0x080048c7
 8004834:	08004949 	.word	0x08004949
 8004838:	08004949 	.word	0x08004949
 800483c:	08004949 	.word	0x08004949
 8004840:	08004907 	.word	0x08004907
 8004844:	68fb      	ldr	r3, [r7, #12]
 8004846:	681b      	ldr	r3, [r3, #0]
 8004848:	68b9      	ldr	r1, [r7, #8]
 800484a:	4618      	mov	r0, r3
 800484c:	f000 f90e 	bl	8004a6c <TIM_OC1_SetConfig>
 8004850:	68fb      	ldr	r3, [r7, #12]
 8004852:	681b      	ldr	r3, [r3, #0]
 8004854:	699a      	ldr	r2, [r3, #24]
 8004856:	68fb      	ldr	r3, [r7, #12]
 8004858:	681b      	ldr	r3, [r3, #0]
 800485a:	f042 0208 	orr.w	r2, r2, #8
 800485e:	619a      	str	r2, [r3, #24]
 8004860:	68fb      	ldr	r3, [r7, #12]
 8004862:	681b      	ldr	r3, [r3, #0]
 8004864:	699a      	ldr	r2, [r3, #24]
 8004866:	68fb      	ldr	r3, [r7, #12]
 8004868:	681b      	ldr	r3, [r3, #0]
 800486a:	f022 0204 	bic.w	r2, r2, #4
 800486e:	619a      	str	r2, [r3, #24]
 8004870:	68fb      	ldr	r3, [r7, #12]
 8004872:	681b      	ldr	r3, [r3, #0]
 8004874:	6999      	ldr	r1, [r3, #24]
 8004876:	68bb      	ldr	r3, [r7, #8]
 8004878:	691a      	ldr	r2, [r3, #16]
 800487a:	68fb      	ldr	r3, [r7, #12]
 800487c:	681b      	ldr	r3, [r3, #0]
 800487e:	430a      	orrs	r2, r1
 8004880:	619a      	str	r2, [r3, #24]
 8004882:	e064      	b.n	800494e <HAL_TIM_PWM_ConfigChannel+0x172>
 8004884:	68fb      	ldr	r3, [r7, #12]
 8004886:	681b      	ldr	r3, [r3, #0]
 8004888:	68b9      	ldr	r1, [r7, #8]
 800488a:	4618      	mov	r0, r3
 800488c:	f000 f954 	bl	8004b38 <TIM_OC2_SetConfig>
 8004890:	68fb      	ldr	r3, [r7, #12]
 8004892:	681b      	ldr	r3, [r3, #0]
 8004894:	699a      	ldr	r2, [r3, #24]
 8004896:	68fb      	ldr	r3, [r7, #12]
 8004898:	681b      	ldr	r3, [r3, #0]
 800489a:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 800489e:	619a      	str	r2, [r3, #24]
 80048a0:	68fb      	ldr	r3, [r7, #12]
 80048a2:	681b      	ldr	r3, [r3, #0]
 80048a4:	699a      	ldr	r2, [r3, #24]
 80048a6:	68fb      	ldr	r3, [r7, #12]
 80048a8:	681b      	ldr	r3, [r3, #0]
 80048aa:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 80048ae:	619a      	str	r2, [r3, #24]
 80048b0:	68fb      	ldr	r3, [r7, #12]
 80048b2:	681b      	ldr	r3, [r3, #0]
 80048b4:	6999      	ldr	r1, [r3, #24]
 80048b6:	68bb      	ldr	r3, [r7, #8]
 80048b8:	691b      	ldr	r3, [r3, #16]
 80048ba:	021a      	lsls	r2, r3, #8
 80048bc:	68fb      	ldr	r3, [r7, #12]
 80048be:	681b      	ldr	r3, [r3, #0]
 80048c0:	430a      	orrs	r2, r1
 80048c2:	619a      	str	r2, [r3, #24]
 80048c4:	e043      	b.n	800494e <HAL_TIM_PWM_ConfigChannel+0x172>
 80048c6:	68fb      	ldr	r3, [r7, #12]
 80048c8:	681b      	ldr	r3, [r3, #0]
 80048ca:	68b9      	ldr	r1, [r7, #8]
 80048cc:	4618      	mov	r0, r3
 80048ce:	f000 f99f 	bl	8004c10 <TIM_OC3_SetConfig>
 80048d2:	68fb      	ldr	r3, [r7, #12]
 80048d4:	681b      	ldr	r3, [r3, #0]
 80048d6:	69da      	ldr	r2, [r3, #28]
 80048d8:	68fb      	ldr	r3, [r7, #12]
 80048da:	681b      	ldr	r3, [r3, #0]
 80048dc:	f042 0208 	orr.w	r2, r2, #8
 80048e0:	61da      	str	r2, [r3, #28]
 80048e2:	68fb      	ldr	r3, [r7, #12]
 80048e4:	681b      	ldr	r3, [r3, #0]
 80048e6:	69da      	ldr	r2, [r3, #28]
 80048e8:	68fb      	ldr	r3, [r7, #12]
 80048ea:	681b      	ldr	r3, [r3, #0]
 80048ec:	f022 0204 	bic.w	r2, r2, #4
 80048f0:	61da      	str	r2, [r3, #28]
 80048f2:	68fb      	ldr	r3, [r7, #12]
 80048f4:	681b      	ldr	r3, [r3, #0]
 80048f6:	69d9      	ldr	r1, [r3, #28]
 80048f8:	68bb      	ldr	r3, [r7, #8]
 80048fa:	691a      	ldr	r2, [r3, #16]
 80048fc:	68fb      	ldr	r3, [r7, #12]
 80048fe:	681b      	ldr	r3, [r3, #0]
 8004900:	430a      	orrs	r2, r1
 8004902:	61da      	str	r2, [r3, #28]
 8004904:	e023      	b.n	800494e <HAL_TIM_PWM_ConfigChannel+0x172>
 8004906:	68fb      	ldr	r3, [r7, #12]
 8004908:	681b      	ldr	r3, [r3, #0]
 800490a:	68b9      	ldr	r1, [r7, #8]
 800490c:	4618      	mov	r0, r3
 800490e:	f000 f9e9 	bl	8004ce4 <TIM_OC4_SetConfig>
 8004912:	68fb      	ldr	r3, [r7, #12]
 8004914:	681b      	ldr	r3, [r3, #0]
 8004916:	69da      	ldr	r2, [r3, #28]
 8004918:	68fb      	ldr	r3, [r7, #12]
 800491a:	681b      	ldr	r3, [r3, #0]
 800491c:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8004920:	61da      	str	r2, [r3, #28]
 8004922:	68fb      	ldr	r3, [r7, #12]
 8004924:	681b      	ldr	r3, [r3, #0]
 8004926:	69da      	ldr	r2, [r3, #28]
 8004928:	68fb      	ldr	r3, [r7, #12]
 800492a:	681b      	ldr	r3, [r3, #0]
 800492c:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8004930:	61da      	str	r2, [r3, #28]
 8004932:	68fb      	ldr	r3, [r7, #12]
 8004934:	681b      	ldr	r3, [r3, #0]
 8004936:	69d9      	ldr	r1, [r3, #28]
 8004938:	68bb      	ldr	r3, [r7, #8]
 800493a:	691b      	ldr	r3, [r3, #16]
 800493c:	021a      	lsls	r2, r3, #8
 800493e:	68fb      	ldr	r3, [r7, #12]
 8004940:	681b      	ldr	r3, [r3, #0]
 8004942:	430a      	orrs	r2, r1
 8004944:	61da      	str	r2, [r3, #28]
 8004946:	e002      	b.n	800494e <HAL_TIM_PWM_ConfigChannel+0x172>
 8004948:	2301      	movs	r3, #1
 800494a:	75fb      	strb	r3, [r7, #23]
 800494c:	bf00      	nop
 800494e:	68fb      	ldr	r3, [r7, #12]
 8004950:	2200      	movs	r2, #0
 8004952:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8004956:	7dfb      	ldrb	r3, [r7, #23]
 8004958:	4618      	mov	r0, r3
 800495a:	3718      	adds	r7, #24
 800495c:	46bd      	mov	sp, r7
 800495e:	bd80      	pop	{r7, pc}

08004960 <TIM_Base_SetConfig>:
 8004960:	b480      	push	{r7}
 8004962:	b085      	sub	sp, #20
 8004964:	af00      	add	r7, sp, #0
 8004966:	6078      	str	r0, [r7, #4]
 8004968:	6039      	str	r1, [r7, #0]
 800496a:	687b      	ldr	r3, [r7, #4]
 800496c:	681b      	ldr	r3, [r3, #0]
 800496e:	60fb      	str	r3, [r7, #12]
 8004970:	687b      	ldr	r3, [r7, #4]
 8004972:	4a37      	ldr	r2, [pc, #220]	@ (8004a50 <TIM_Base_SetConfig+0xf0>)
 8004974:	4293      	cmp	r3, r2
 8004976:	d00f      	beq.n	8004998 <TIM_Base_SetConfig+0x38>
 8004978:	687b      	ldr	r3, [r7, #4]
 800497a:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800497e:	d00b      	beq.n	8004998 <TIM_Base_SetConfig+0x38>
 8004980:	687b      	ldr	r3, [r7, #4]
 8004982:	4a34      	ldr	r2, [pc, #208]	@ (8004a54 <TIM_Base_SetConfig+0xf4>)
 8004984:	4293      	cmp	r3, r2
 8004986:	d007      	beq.n	8004998 <TIM_Base_SetConfig+0x38>
 8004988:	687b      	ldr	r3, [r7, #4]
 800498a:	4a33      	ldr	r2, [pc, #204]	@ (8004a58 <TIM_Base_SetConfig+0xf8>)
 800498c:	4293      	cmp	r3, r2
 800498e:	d003      	beq.n	8004998 <TIM_Base_SetConfig+0x38>
 8004990:	687b      	ldr	r3, [r7, #4]
 8004992:	4a32      	ldr	r2, [pc, #200]	@ (8004a5c <TIM_Base_SetConfig+0xfc>)
 8004994:	4293      	cmp	r3, r2
 8004996:	d108      	bne.n	80049aa <TIM_Base_SetConfig+0x4a>
 8004998:	68fb      	ldr	r3, [r7, #12]
 800499a:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 800499e:	60fb      	str	r3, [r7, #12]
 80049a0:	683b      	ldr	r3, [r7, #0]
 80049a2:	685b      	ldr	r3, [r3, #4]
 80049a4:	68fa      	ldr	r2, [r7, #12]
 80049a6:	4313      	orrs	r3, r2
 80049a8:	60fb      	str	r3, [r7, #12]
 80049aa:	687b      	ldr	r3, [r7, #4]
 80049ac:	4a28      	ldr	r2, [pc, #160]	@ (8004a50 <TIM_Base_SetConfig+0xf0>)
 80049ae:	4293      	cmp	r3, r2
 80049b0:	d01b      	beq.n	80049ea <TIM_Base_SetConfig+0x8a>
 80049b2:	687b      	ldr	r3, [r7, #4]
 80049b4:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80049b8:	d017      	beq.n	80049ea <TIM_Base_SetConfig+0x8a>
 80049ba:	687b      	ldr	r3, [r7, #4]
 80049bc:	4a25      	ldr	r2, [pc, #148]	@ (8004a54 <TIM_Base_SetConfig+0xf4>)
 80049be:	4293      	cmp	r3, r2
 80049c0:	d013      	beq.n	80049ea <TIM_Base_SetConfig+0x8a>
 80049c2:	687b      	ldr	r3, [r7, #4]
 80049c4:	4a24      	ldr	r2, [pc, #144]	@ (8004a58 <TIM_Base_SetConfig+0xf8>)
 80049c6:	4293      	cmp	r3, r2
 80049c8:	d00f      	beq.n	80049ea <TIM_Base_SetConfig+0x8a>
 80049ca:	687b      	ldr	r3, [r7, #4]
 80049cc:	4a23      	ldr	r2, [pc, #140]	@ (8004a5c <TIM_Base_SetConfig+0xfc>)
 80049ce:	4293      	cmp	r3, r2
 80049d0:	d00b      	beq.n	80049ea <TIM_Base_SetConfig+0x8a>
 80049d2:	687b      	ldr	r3, [r7, #4]
 80049d4:	4a22      	ldr	r2, [pc, #136]	@ (8004a60 <TIM_Base_SetConfig+0x100>)
 80049d6:	4293      	cmp	r3, r2
 80049d8:	d007      	beq.n	80049ea <TIM_Base_SetConfig+0x8a>
 80049da:	687b      	ldr	r3, [r7, #4]
 80049dc:	4a21      	ldr	r2, [pc, #132]	@ (8004a64 <TIM_Base_SetConfig+0x104>)
 80049de:	4293      	cmp	r3, r2
 80049e0:	d003      	beq.n	80049ea <TIM_Base_SetConfig+0x8a>
 80049e2:	687b      	ldr	r3, [r7, #4]
 80049e4:	4a20      	ldr	r2, [pc, #128]	@ (8004a68 <TIM_Base_SetConfig+0x108>)
 80049e6:	4293      	cmp	r3, r2
 80049e8:	d108      	bne.n	80049fc <TIM_Base_SetConfig+0x9c>
 80049ea:	68fb      	ldr	r3, [r7, #12]
 80049ec:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 80049f0:	60fb      	str	r3, [r7, #12]
 80049f2:	683b      	ldr	r3, [r7, #0]
 80049f4:	68db      	ldr	r3, [r3, #12]
 80049f6:	68fa      	ldr	r2, [r7, #12]
 80049f8:	4313      	orrs	r3, r2
 80049fa:	60fb      	str	r3, [r7, #12]
 80049fc:	68fb      	ldr	r3, [r7, #12]
 80049fe:	f023 0280 	bic.w	r2, r3, #128	@ 0x80
 8004a02:	683b      	ldr	r3, [r7, #0]
 8004a04:	695b      	ldr	r3, [r3, #20]
 8004a06:	4313      	orrs	r3, r2
 8004a08:	60fb      	str	r3, [r7, #12]
 8004a0a:	683b      	ldr	r3, [r7, #0]
 8004a0c:	689a      	ldr	r2, [r3, #8]
 8004a0e:	687b      	ldr	r3, [r7, #4]
 8004a10:	62da      	str	r2, [r3, #44]	@ 0x2c
 8004a12:	683b      	ldr	r3, [r7, #0]
 8004a14:	681a      	ldr	r2, [r3, #0]
 8004a16:	687b      	ldr	r3, [r7, #4]
 8004a18:	629a      	str	r2, [r3, #40]	@ 0x28
 8004a1a:	687b      	ldr	r3, [r7, #4]
 8004a1c:	4a0c      	ldr	r2, [pc, #48]	@ (8004a50 <TIM_Base_SetConfig+0xf0>)
 8004a1e:	4293      	cmp	r3, r2
 8004a20:	d103      	bne.n	8004a2a <TIM_Base_SetConfig+0xca>
 8004a22:	683b      	ldr	r3, [r7, #0]
 8004a24:	691a      	ldr	r2, [r3, #16]
 8004a26:	687b      	ldr	r3, [r7, #4]
 8004a28:	631a      	str	r2, [r3, #48]	@ 0x30
 8004a2a:	687b      	ldr	r3, [r7, #4]
 8004a2c:	681b      	ldr	r3, [r3, #0]
 8004a2e:	f043 0204 	orr.w	r2, r3, #4
 8004a32:	687b      	ldr	r3, [r7, #4]
 8004a34:	601a      	str	r2, [r3, #0]
 8004a36:	687b      	ldr	r3, [r7, #4]
 8004a38:	2201      	movs	r2, #1
 8004a3a:	615a      	str	r2, [r3, #20]
 8004a3c:	687b      	ldr	r3, [r7, #4]
 8004a3e:	68fa      	ldr	r2, [r7, #12]
 8004a40:	601a      	str	r2, [r3, #0]
 8004a42:	bf00      	nop
 8004a44:	3714      	adds	r7, #20
 8004a46:	46bd      	mov	sp, r7
 8004a48:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004a4c:	4770      	bx	lr
 8004a4e:	bf00      	nop
 8004a50:	40010000 	.word	0x40010000
 8004a54:	40000400 	.word	0x40000400
 8004a58:	40000800 	.word	0x40000800
 8004a5c:	40000c00 	.word	0x40000c00
 8004a60:	40014000 	.word	0x40014000
 8004a64:	40014400 	.word	0x40014400
 8004a68:	40014800 	.word	0x40014800

08004a6c <TIM_OC1_SetConfig>:
 8004a6c:	b480      	push	{r7}
 8004a6e:	b087      	sub	sp, #28
 8004a70:	af00      	add	r7, sp, #0
 8004a72:	6078      	str	r0, [r7, #4]
 8004a74:	6039      	str	r1, [r7, #0]
 8004a76:	687b      	ldr	r3, [r7, #4]
 8004a78:	6a1b      	ldr	r3, [r3, #32]
 8004a7a:	617b      	str	r3, [r7, #20]
 8004a7c:	687b      	ldr	r3, [r7, #4]
 8004a7e:	6a1b      	ldr	r3, [r3, #32]
 8004a80:	f023 0201 	bic.w	r2, r3, #1
 8004a84:	687b      	ldr	r3, [r7, #4]
 8004a86:	621a      	str	r2, [r3, #32]
 8004a88:	687b      	ldr	r3, [r7, #4]
 8004a8a:	685b      	ldr	r3, [r3, #4]
 8004a8c:	613b      	str	r3, [r7, #16]
 8004a8e:	687b      	ldr	r3, [r7, #4]
 8004a90:	699b      	ldr	r3, [r3, #24]
 8004a92:	60fb      	str	r3, [r7, #12]
 8004a94:	68fb      	ldr	r3, [r7, #12]
 8004a96:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8004a9a:	60fb      	str	r3, [r7, #12]
 8004a9c:	68fb      	ldr	r3, [r7, #12]
 8004a9e:	f023 0303 	bic.w	r3, r3, #3
 8004aa2:	60fb      	str	r3, [r7, #12]
 8004aa4:	683b      	ldr	r3, [r7, #0]
 8004aa6:	681b      	ldr	r3, [r3, #0]
 8004aa8:	68fa      	ldr	r2, [r7, #12]
 8004aaa:	4313      	orrs	r3, r2
 8004aac:	60fb      	str	r3, [r7, #12]
 8004aae:	697b      	ldr	r3, [r7, #20]
 8004ab0:	f023 0302 	bic.w	r3, r3, #2
 8004ab4:	617b      	str	r3, [r7, #20]
 8004ab6:	683b      	ldr	r3, [r7, #0]
 8004ab8:	689b      	ldr	r3, [r3, #8]
 8004aba:	697a      	ldr	r2, [r7, #20]
 8004abc:	4313      	orrs	r3, r2
 8004abe:	617b      	str	r3, [r7, #20]
 8004ac0:	687b      	ldr	r3, [r7, #4]
 8004ac2:	4a1c      	ldr	r2, [pc, #112]	@ (8004b34 <TIM_OC1_SetConfig+0xc8>)
 8004ac4:	4293      	cmp	r3, r2
 8004ac6:	d10c      	bne.n	8004ae2 <TIM_OC1_SetConfig+0x76>
 8004ac8:	697b      	ldr	r3, [r7, #20]
 8004aca:	f023 0308 	bic.w	r3, r3, #8
 8004ace:	617b      	str	r3, [r7, #20]
 8004ad0:	683b      	ldr	r3, [r7, #0]
 8004ad2:	68db      	ldr	r3, [r3, #12]
 8004ad4:	697a      	ldr	r2, [r7, #20]
 8004ad6:	4313      	orrs	r3, r2
 8004ad8:	617b      	str	r3, [r7, #20]
 8004ada:	697b      	ldr	r3, [r7, #20]
 8004adc:	f023 0304 	bic.w	r3, r3, #4
 8004ae0:	617b      	str	r3, [r7, #20]
 8004ae2:	687b      	ldr	r3, [r7, #4]
 8004ae4:	4a13      	ldr	r2, [pc, #76]	@ (8004b34 <TIM_OC1_SetConfig+0xc8>)
 8004ae6:	4293      	cmp	r3, r2
 8004ae8:	d111      	bne.n	8004b0e <TIM_OC1_SetConfig+0xa2>
 8004aea:	693b      	ldr	r3, [r7, #16]
 8004aec:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8004af0:	613b      	str	r3, [r7, #16]
 8004af2:	693b      	ldr	r3, [r7, #16]
 8004af4:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 8004af8:	613b      	str	r3, [r7, #16]
 8004afa:	683b      	ldr	r3, [r7, #0]
 8004afc:	695b      	ldr	r3, [r3, #20]
 8004afe:	693a      	ldr	r2, [r7, #16]
 8004b00:	4313      	orrs	r3, r2
 8004b02:	613b      	str	r3, [r7, #16]
 8004b04:	683b      	ldr	r3, [r7, #0]
 8004b06:	699b      	ldr	r3, [r3, #24]
 8004b08:	693a      	ldr	r2, [r7, #16]
 8004b0a:	4313      	orrs	r3, r2
 8004b0c:	613b      	str	r3, [r7, #16]
 8004b0e:	687b      	ldr	r3, [r7, #4]
 8004b10:	693a      	ldr	r2, [r7, #16]
 8004b12:	605a      	str	r2, [r3, #4]
 8004b14:	687b      	ldr	r3, [r7, #4]
 8004b16:	68fa      	ldr	r2, [r7, #12]
 8004b18:	619a      	str	r2, [r3, #24]
 8004b1a:	683b      	ldr	r3, [r7, #0]
 8004b1c:	685a      	ldr	r2, [r3, #4]
 8004b1e:	687b      	ldr	r3, [r7, #4]
 8004b20:	635a      	str	r2, [r3, #52]	@ 0x34
 8004b22:	687b      	ldr	r3, [r7, #4]
 8004b24:	697a      	ldr	r2, [r7, #20]
 8004b26:	621a      	str	r2, [r3, #32]
 8004b28:	bf00      	nop
 8004b2a:	371c      	adds	r7, #28
 8004b2c:	46bd      	mov	sp, r7
 8004b2e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004b32:	4770      	bx	lr
 8004b34:	40010000 	.word	0x40010000

08004b38 <TIM_OC2_SetConfig>:
 8004b38:	b480      	push	{r7}
 8004b3a:	b087      	sub	sp, #28
 8004b3c:	af00      	add	r7, sp, #0
 8004b3e:	6078      	str	r0, [r7, #4]
 8004b40:	6039      	str	r1, [r7, #0]
 8004b42:	687b      	ldr	r3, [r7, #4]
 8004b44:	6a1b      	ldr	r3, [r3, #32]
 8004b46:	617b      	str	r3, [r7, #20]
 8004b48:	687b      	ldr	r3, [r7, #4]
 8004b4a:	6a1b      	ldr	r3, [r3, #32]
 8004b4c:	f023 0210 	bic.w	r2, r3, #16
 8004b50:	687b      	ldr	r3, [r7, #4]
 8004b52:	621a      	str	r2, [r3, #32]
 8004b54:	687b      	ldr	r3, [r7, #4]
 8004b56:	685b      	ldr	r3, [r3, #4]
 8004b58:	613b      	str	r3, [r7, #16]
 8004b5a:	687b      	ldr	r3, [r7, #4]
 8004b5c:	699b      	ldr	r3, [r3, #24]
 8004b5e:	60fb      	str	r3, [r7, #12]
 8004b60:	68fb      	ldr	r3, [r7, #12]
 8004b62:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8004b66:	60fb      	str	r3, [r7, #12]
 8004b68:	68fb      	ldr	r3, [r7, #12]
 8004b6a:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8004b6e:	60fb      	str	r3, [r7, #12]
 8004b70:	683b      	ldr	r3, [r7, #0]
 8004b72:	681b      	ldr	r3, [r3, #0]
 8004b74:	021b      	lsls	r3, r3, #8
 8004b76:	68fa      	ldr	r2, [r7, #12]
 8004b78:	4313      	orrs	r3, r2
 8004b7a:	60fb      	str	r3, [r7, #12]
 8004b7c:	697b      	ldr	r3, [r7, #20]
 8004b7e:	f023 0320 	bic.w	r3, r3, #32
 8004b82:	617b      	str	r3, [r7, #20]
 8004b84:	683b      	ldr	r3, [r7, #0]
 8004b86:	689b      	ldr	r3, [r3, #8]
 8004b88:	011b      	lsls	r3, r3, #4
 8004b8a:	697a      	ldr	r2, [r7, #20]
 8004b8c:	4313      	orrs	r3, r2
 8004b8e:	617b      	str	r3, [r7, #20]
 8004b90:	687b      	ldr	r3, [r7, #4]
 8004b92:	4a1e      	ldr	r2, [pc, #120]	@ (8004c0c <TIM_OC2_SetConfig+0xd4>)
 8004b94:	4293      	cmp	r3, r2
 8004b96:	d10d      	bne.n	8004bb4 <TIM_OC2_SetConfig+0x7c>
 8004b98:	697b      	ldr	r3, [r7, #20]
 8004b9a:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8004b9e:	617b      	str	r3, [r7, #20]
 8004ba0:	683b      	ldr	r3, [r7, #0]
 8004ba2:	68db      	ldr	r3, [r3, #12]
 8004ba4:	011b      	lsls	r3, r3, #4
 8004ba6:	697a      	ldr	r2, [r7, #20]
 8004ba8:	4313      	orrs	r3, r2
 8004baa:	617b      	str	r3, [r7, #20]
 8004bac:	697b      	ldr	r3, [r7, #20]
 8004bae:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8004bb2:	617b      	str	r3, [r7, #20]
 8004bb4:	687b      	ldr	r3, [r7, #4]
 8004bb6:	4a15      	ldr	r2, [pc, #84]	@ (8004c0c <TIM_OC2_SetConfig+0xd4>)
 8004bb8:	4293      	cmp	r3, r2
 8004bba:	d113      	bne.n	8004be4 <TIM_OC2_SetConfig+0xac>
 8004bbc:	693b      	ldr	r3, [r7, #16]
 8004bbe:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8004bc2:	613b      	str	r3, [r7, #16]
 8004bc4:	693b      	ldr	r3, [r7, #16]
 8004bc6:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8004bca:	613b      	str	r3, [r7, #16]
 8004bcc:	683b      	ldr	r3, [r7, #0]
 8004bce:	695b      	ldr	r3, [r3, #20]
 8004bd0:	009b      	lsls	r3, r3, #2
 8004bd2:	693a      	ldr	r2, [r7, #16]
 8004bd4:	4313      	orrs	r3, r2
 8004bd6:	613b      	str	r3, [r7, #16]
 8004bd8:	683b      	ldr	r3, [r7, #0]
 8004bda:	699b      	ldr	r3, [r3, #24]
 8004bdc:	009b      	lsls	r3, r3, #2
 8004bde:	693a      	ldr	r2, [r7, #16]
 8004be0:	4313      	orrs	r3, r2
 8004be2:	613b      	str	r3, [r7, #16]
 8004be4:	687b      	ldr	r3, [r7, #4]
 8004be6:	693a      	ldr	r2, [r7, #16]
 8004be8:	605a      	str	r2, [r3, #4]
 8004bea:	687b      	ldr	r3, [r7, #4]
 8004bec:	68fa      	ldr	r2, [r7, #12]
 8004bee:	619a      	str	r2, [r3, #24]
 8004bf0:	683b      	ldr	r3, [r7, #0]
 8004bf2:	685a      	ldr	r2, [r3, #4]
 8004bf4:	687b      	ldr	r3, [r7, #4]
 8004bf6:	639a      	str	r2, [r3, #56]	@ 0x38
 8004bf8:	687b      	ldr	r3, [r7, #4]
 8004bfa:	697a      	ldr	r2, [r7, #20]
 8004bfc:	621a      	str	r2, [r3, #32]
 8004bfe:	bf00      	nop
 8004c00:	371c      	adds	r7, #28
 8004c02:	46bd      	mov	sp, r7
 8004c04:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004c08:	4770      	bx	lr
 8004c0a:	bf00      	nop
 8004c0c:	40010000 	.word	0x40010000

08004c10 <TIM_OC3_SetConfig>:
 8004c10:	b480      	push	{r7}
 8004c12:	b087      	sub	sp, #28
 8004c14:	af00      	add	r7, sp, #0
 8004c16:	6078      	str	r0, [r7, #4]
 8004c18:	6039      	str	r1, [r7, #0]
 8004c1a:	687b      	ldr	r3, [r7, #4]
 8004c1c:	6a1b      	ldr	r3, [r3, #32]
 8004c1e:	617b      	str	r3, [r7, #20]
 8004c20:	687b      	ldr	r3, [r7, #4]
 8004c22:	6a1b      	ldr	r3, [r3, #32]
 8004c24:	f423 7280 	bic.w	r2, r3, #256	@ 0x100
 8004c28:	687b      	ldr	r3, [r7, #4]
 8004c2a:	621a      	str	r2, [r3, #32]
 8004c2c:	687b      	ldr	r3, [r7, #4]
 8004c2e:	685b      	ldr	r3, [r3, #4]
 8004c30:	613b      	str	r3, [r7, #16]
 8004c32:	687b      	ldr	r3, [r7, #4]
 8004c34:	69db      	ldr	r3, [r3, #28]
 8004c36:	60fb      	str	r3, [r7, #12]
 8004c38:	68fb      	ldr	r3, [r7, #12]
 8004c3a:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8004c3e:	60fb      	str	r3, [r7, #12]
 8004c40:	68fb      	ldr	r3, [r7, #12]
 8004c42:	f023 0303 	bic.w	r3, r3, #3
 8004c46:	60fb      	str	r3, [r7, #12]
 8004c48:	683b      	ldr	r3, [r7, #0]
 8004c4a:	681b      	ldr	r3, [r3, #0]
 8004c4c:	68fa      	ldr	r2, [r7, #12]
 8004c4e:	4313      	orrs	r3, r2
 8004c50:	60fb      	str	r3, [r7, #12]
 8004c52:	697b      	ldr	r3, [r7, #20]
 8004c54:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 8004c58:	617b      	str	r3, [r7, #20]
 8004c5a:	683b      	ldr	r3, [r7, #0]
 8004c5c:	689b      	ldr	r3, [r3, #8]
 8004c5e:	021b      	lsls	r3, r3, #8
 8004c60:	697a      	ldr	r2, [r7, #20]
 8004c62:	4313      	orrs	r3, r2
 8004c64:	617b      	str	r3, [r7, #20]
 8004c66:	687b      	ldr	r3, [r7, #4]
 8004c68:	4a1d      	ldr	r2, [pc, #116]	@ (8004ce0 <TIM_OC3_SetConfig+0xd0>)
 8004c6a:	4293      	cmp	r3, r2
 8004c6c:	d10d      	bne.n	8004c8a <TIM_OC3_SetConfig+0x7a>
 8004c6e:	697b      	ldr	r3, [r7, #20]
 8004c70:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8004c74:	617b      	str	r3, [r7, #20]
 8004c76:	683b      	ldr	r3, [r7, #0]
 8004c78:	68db      	ldr	r3, [r3, #12]
 8004c7a:	021b      	lsls	r3, r3, #8
 8004c7c:	697a      	ldr	r2, [r7, #20]
 8004c7e:	4313      	orrs	r3, r2
 8004c80:	617b      	str	r3, [r7, #20]
 8004c82:	697b      	ldr	r3, [r7, #20]
 8004c84:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8004c88:	617b      	str	r3, [r7, #20]
 8004c8a:	687b      	ldr	r3, [r7, #4]
 8004c8c:	4a14      	ldr	r2, [pc, #80]	@ (8004ce0 <TIM_OC3_SetConfig+0xd0>)
 8004c8e:	4293      	cmp	r3, r2
 8004c90:	d113      	bne.n	8004cba <TIM_OC3_SetConfig+0xaa>
 8004c92:	693b      	ldr	r3, [r7, #16]
 8004c94:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8004c98:	613b      	str	r3, [r7, #16]
 8004c9a:	693b      	ldr	r3, [r7, #16]
 8004c9c:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 8004ca0:	613b      	str	r3, [r7, #16]
 8004ca2:	683b      	ldr	r3, [r7, #0]
 8004ca4:	695b      	ldr	r3, [r3, #20]
 8004ca6:	011b      	lsls	r3, r3, #4
 8004ca8:	693a      	ldr	r2, [r7, #16]
 8004caa:	4313      	orrs	r3, r2
 8004cac:	613b      	str	r3, [r7, #16]
 8004cae:	683b      	ldr	r3, [r7, #0]
 8004cb0:	699b      	ldr	r3, [r3, #24]
 8004cb2:	011b      	lsls	r3, r3, #4
 8004cb4:	693a      	ldr	r2, [r7, #16]
 8004cb6:	4313      	orrs	r3, r2
 8004cb8:	613b      	str	r3, [r7, #16]
 8004cba:	687b      	ldr	r3, [r7, #4]
 8004cbc:	693a      	ldr	r2, [r7, #16]
 8004cbe:	605a      	str	r2, [r3, #4]
 8004cc0:	687b      	ldr	r3, [r7, #4]
 8004cc2:	68fa      	ldr	r2, [r7, #12]
 8004cc4:	61da      	str	r2, [r3, #28]
 8004cc6:	683b      	ldr	r3, [r7, #0]
 8004cc8:	685a      	ldr	r2, [r3, #4]
 8004cca:	687b      	ldr	r3, [r7, #4]
 8004ccc:	63da      	str	r2, [r3, #60]	@ 0x3c
 8004cce:	687b      	ldr	r3, [r7, #4]
 8004cd0:	697a      	ldr	r2, [r7, #20]
 8004cd2:	621a      	str	r2, [r3, #32]
 8004cd4:	bf00      	nop
 8004cd6:	371c      	adds	r7, #28
 8004cd8:	46bd      	mov	sp, r7
 8004cda:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004cde:	4770      	bx	lr
 8004ce0:	40010000 	.word	0x40010000

08004ce4 <TIM_OC4_SetConfig>:
 8004ce4:	b480      	push	{r7}
 8004ce6:	b087      	sub	sp, #28
 8004ce8:	af00      	add	r7, sp, #0
 8004cea:	6078      	str	r0, [r7, #4]
 8004cec:	6039      	str	r1, [r7, #0]
 8004cee:	687b      	ldr	r3, [r7, #4]
 8004cf0:	6a1b      	ldr	r3, [r3, #32]
 8004cf2:	613b      	str	r3, [r7, #16]
 8004cf4:	687b      	ldr	r3, [r7, #4]
 8004cf6:	6a1b      	ldr	r3, [r3, #32]
 8004cf8:	f423 5280 	bic.w	r2, r3, #4096	@ 0x1000
 8004cfc:	687b      	ldr	r3, [r7, #4]
 8004cfe:	621a      	str	r2, [r3, #32]
 8004d00:	687b      	ldr	r3, [r7, #4]
 8004d02:	685b      	ldr	r3, [r3, #4]
 8004d04:	617b      	str	r3, [r7, #20]
 8004d06:	687b      	ldr	r3, [r7, #4]
 8004d08:	69db      	ldr	r3, [r3, #28]
 8004d0a:	60fb      	str	r3, [r7, #12]
 8004d0c:	68fb      	ldr	r3, [r7, #12]
 8004d0e:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8004d12:	60fb      	str	r3, [r7, #12]
 8004d14:	68fb      	ldr	r3, [r7, #12]
 8004d16:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8004d1a:	60fb      	str	r3, [r7, #12]
 8004d1c:	683b      	ldr	r3, [r7, #0]
 8004d1e:	681b      	ldr	r3, [r3, #0]
 8004d20:	021b      	lsls	r3, r3, #8
 8004d22:	68fa      	ldr	r2, [r7, #12]
 8004d24:	4313      	orrs	r3, r2
 8004d26:	60fb      	str	r3, [r7, #12]
 8004d28:	693b      	ldr	r3, [r7, #16]
 8004d2a:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 8004d2e:	613b      	str	r3, [r7, #16]
 8004d30:	683b      	ldr	r3, [r7, #0]
 8004d32:	689b      	ldr	r3, [r3, #8]
 8004d34:	031b      	lsls	r3, r3, #12
 8004d36:	693a      	ldr	r2, [r7, #16]
 8004d38:	4313      	orrs	r3, r2
 8004d3a:	613b      	str	r3, [r7, #16]
 8004d3c:	687b      	ldr	r3, [r7, #4]
 8004d3e:	4a10      	ldr	r2, [pc, #64]	@ (8004d80 <TIM_OC4_SetConfig+0x9c>)
 8004d40:	4293      	cmp	r3, r2
 8004d42:	d109      	bne.n	8004d58 <TIM_OC4_SetConfig+0x74>
 8004d44:	697b      	ldr	r3, [r7, #20]
 8004d46:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 8004d4a:	617b      	str	r3, [r7, #20]
 8004d4c:	683b      	ldr	r3, [r7, #0]
 8004d4e:	695b      	ldr	r3, [r3, #20]
 8004d50:	019b      	lsls	r3, r3, #6
 8004d52:	697a      	ldr	r2, [r7, #20]
 8004d54:	4313      	orrs	r3, r2
 8004d56:	617b      	str	r3, [r7, #20]
 8004d58:	687b      	ldr	r3, [r7, #4]
 8004d5a:	697a      	ldr	r2, [r7, #20]
 8004d5c:	605a      	str	r2, [r3, #4]
 8004d5e:	687b      	ldr	r3, [r7, #4]
 8004d60:	68fa      	ldr	r2, [r7, #12]
 8004d62:	61da      	str	r2, [r3, #28]
 8004d64:	683b      	ldr	r3, [r7, #0]
 8004d66:	685a      	ldr	r2, [r3, #4]
 8004d68:	687b      	ldr	r3, [r7, #4]
 8004d6a:	641a      	str	r2, [r3, #64]	@ 0x40
 8004d6c:	687b      	ldr	r3, [r7, #4]
 8004d6e:	693a      	ldr	r2, [r7, #16]
 8004d70:	621a      	str	r2, [r3, #32]
 8004d72:	bf00      	nop
 8004d74:	371c      	adds	r7, #28
 8004d76:	46bd      	mov	sp, r7
 8004d78:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004d7c:	4770      	bx	lr
 8004d7e:	bf00      	nop
 8004d80:	40010000 	.word	0x40010000

08004d84 <TIM_CCxChannelCmd>:
 8004d84:	b480      	push	{r7}
 8004d86:	b087      	sub	sp, #28
 8004d88:	af00      	add	r7, sp, #0
 8004d8a:	60f8      	str	r0, [r7, #12]
 8004d8c:	60b9      	str	r1, [r7, #8]
 8004d8e:	607a      	str	r2, [r7, #4]
 8004d90:	68bb      	ldr	r3, [r7, #8]
 8004d92:	f003 031f 	and.w	r3, r3, #31
 8004d96:	2201      	movs	r2, #1
 8004d98:	fa02 f303 	lsl.w	r3, r2, r3
 8004d9c:	617b      	str	r3, [r7, #20]
 8004d9e:	68fb      	ldr	r3, [r7, #12]
 8004da0:	6a1a      	ldr	r2, [r3, #32]
 8004da2:	697b      	ldr	r3, [r7, #20]
 8004da4:	43db      	mvns	r3, r3
 8004da6:	401a      	ands	r2, r3
 8004da8:	68fb      	ldr	r3, [r7, #12]
 8004daa:	621a      	str	r2, [r3, #32]
 8004dac:	68fb      	ldr	r3, [r7, #12]
 8004dae:	6a1a      	ldr	r2, [r3, #32]
 8004db0:	68bb      	ldr	r3, [r7, #8]
 8004db2:	f003 031f 	and.w	r3, r3, #31
 8004db6:	6879      	ldr	r1, [r7, #4]
 8004db8:	fa01 f303 	lsl.w	r3, r1, r3
 8004dbc:	431a      	orrs	r2, r3
 8004dbe:	68fb      	ldr	r3, [r7, #12]
 8004dc0:	621a      	str	r2, [r3, #32]
 8004dc2:	bf00      	nop
 8004dc4:	371c      	adds	r7, #28
 8004dc6:	46bd      	mov	sp, r7
 8004dc8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004dcc:	4770      	bx	lr
	...

08004dd0 <HAL_TIMEx_MasterConfigSynchronization>:
 8004dd0:	b480      	push	{r7}
 8004dd2:	b085      	sub	sp, #20
 8004dd4:	af00      	add	r7, sp, #0
 8004dd6:	6078      	str	r0, [r7, #4]
 8004dd8:	6039      	str	r1, [r7, #0]
 8004dda:	687b      	ldr	r3, [r7, #4]
 8004ddc:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8004de0:	2b01      	cmp	r3, #1
 8004de2:	d101      	bne.n	8004de8 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 8004de4:	2302      	movs	r3, #2
 8004de6:	e050      	b.n	8004e8a <HAL_TIMEx_MasterConfigSynchronization+0xba>
 8004de8:	687b      	ldr	r3, [r7, #4]
 8004dea:	2201      	movs	r2, #1
 8004dec:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8004df0:	687b      	ldr	r3, [r7, #4]
 8004df2:	2202      	movs	r2, #2
 8004df4:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8004df8:	687b      	ldr	r3, [r7, #4]
 8004dfa:	681b      	ldr	r3, [r3, #0]
 8004dfc:	685b      	ldr	r3, [r3, #4]
 8004dfe:	60fb      	str	r3, [r7, #12]
 8004e00:	687b      	ldr	r3, [r7, #4]
 8004e02:	681b      	ldr	r3, [r3, #0]
 8004e04:	689b      	ldr	r3, [r3, #8]
 8004e06:	60bb      	str	r3, [r7, #8]
 8004e08:	68fb      	ldr	r3, [r7, #12]
 8004e0a:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8004e0e:	60fb      	str	r3, [r7, #12]
 8004e10:	683b      	ldr	r3, [r7, #0]
 8004e12:	681b      	ldr	r3, [r3, #0]
 8004e14:	68fa      	ldr	r2, [r7, #12]
 8004e16:	4313      	orrs	r3, r2
 8004e18:	60fb      	str	r3, [r7, #12]
 8004e1a:	687b      	ldr	r3, [r7, #4]
 8004e1c:	681b      	ldr	r3, [r3, #0]
 8004e1e:	68fa      	ldr	r2, [r7, #12]
 8004e20:	605a      	str	r2, [r3, #4]
 8004e22:	687b      	ldr	r3, [r7, #4]
 8004e24:	681b      	ldr	r3, [r3, #0]
 8004e26:	4a1c      	ldr	r2, [pc, #112]	@ (8004e98 <HAL_TIMEx_MasterConfigSynchronization+0xc8>)
 8004e28:	4293      	cmp	r3, r2
 8004e2a:	d018      	beq.n	8004e5e <HAL_TIMEx_MasterConfigSynchronization+0x8e>
 8004e2c:	687b      	ldr	r3, [r7, #4]
 8004e2e:	681b      	ldr	r3, [r3, #0]
 8004e30:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8004e34:	d013      	beq.n	8004e5e <HAL_TIMEx_MasterConfigSynchronization+0x8e>
 8004e36:	687b      	ldr	r3, [r7, #4]
 8004e38:	681b      	ldr	r3, [r3, #0]
 8004e3a:	4a18      	ldr	r2, [pc, #96]	@ (8004e9c <HAL_TIMEx_MasterConfigSynchronization+0xcc>)
 8004e3c:	4293      	cmp	r3, r2
 8004e3e:	d00e      	beq.n	8004e5e <HAL_TIMEx_MasterConfigSynchronization+0x8e>
 8004e40:	687b      	ldr	r3, [r7, #4]
 8004e42:	681b      	ldr	r3, [r3, #0]
 8004e44:	4a16      	ldr	r2, [pc, #88]	@ (8004ea0 <HAL_TIMEx_MasterConfigSynchronization+0xd0>)
 8004e46:	4293      	cmp	r3, r2
 8004e48:	d009      	beq.n	8004e5e <HAL_TIMEx_MasterConfigSynchronization+0x8e>
 8004e4a:	687b      	ldr	r3, [r7, #4]
 8004e4c:	681b      	ldr	r3, [r3, #0]
 8004e4e:	4a15      	ldr	r2, [pc, #84]	@ (8004ea4 <HAL_TIMEx_MasterConfigSynchronization+0xd4>)
 8004e50:	4293      	cmp	r3, r2
 8004e52:	d004      	beq.n	8004e5e <HAL_TIMEx_MasterConfigSynchronization+0x8e>
 8004e54:	687b      	ldr	r3, [r7, #4]
 8004e56:	681b      	ldr	r3, [r3, #0]
 8004e58:	4a13      	ldr	r2, [pc, #76]	@ (8004ea8 <HAL_TIMEx_MasterConfigSynchronization+0xd8>)
 8004e5a:	4293      	cmp	r3, r2
 8004e5c:	d10c      	bne.n	8004e78 <HAL_TIMEx_MasterConfigSynchronization+0xa8>
 8004e5e:	68bb      	ldr	r3, [r7, #8]
 8004e60:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8004e64:	60bb      	str	r3, [r7, #8]
 8004e66:	683b      	ldr	r3, [r7, #0]
 8004e68:	685b      	ldr	r3, [r3, #4]
 8004e6a:	68ba      	ldr	r2, [r7, #8]
 8004e6c:	4313      	orrs	r3, r2
 8004e6e:	60bb      	str	r3, [r7, #8]
 8004e70:	687b      	ldr	r3, [r7, #4]
 8004e72:	681b      	ldr	r3, [r3, #0]
 8004e74:	68ba      	ldr	r2, [r7, #8]
 8004e76:	609a      	str	r2, [r3, #8]
 8004e78:	687b      	ldr	r3, [r7, #4]
 8004e7a:	2201      	movs	r2, #1
 8004e7c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8004e80:	687b      	ldr	r3, [r7, #4]
 8004e82:	2200      	movs	r2, #0
 8004e84:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8004e88:	2300      	movs	r3, #0
 8004e8a:	4618      	mov	r0, r3
 8004e8c:	3714      	adds	r7, #20
 8004e8e:	46bd      	mov	sp, r7
 8004e90:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004e94:	4770      	bx	lr
 8004e96:	bf00      	nop
 8004e98:	40010000 	.word	0x40010000
 8004e9c:	40000400 	.word	0x40000400
 8004ea0:	40000800 	.word	0x40000800
 8004ea4:	40000c00 	.word	0x40000c00
 8004ea8:	40014000 	.word	0x40014000

08004eac <HAL_TIMEx_ConfigBreakDeadTime>:
 8004eac:	b480      	push	{r7}
 8004eae:	b085      	sub	sp, #20
 8004eb0:	af00      	add	r7, sp, #0
 8004eb2:	6078      	str	r0, [r7, #4]
 8004eb4:	6039      	str	r1, [r7, #0]
 8004eb6:	2300      	movs	r3, #0
 8004eb8:	60fb      	str	r3, [r7, #12]
 8004eba:	687b      	ldr	r3, [r7, #4]
 8004ebc:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8004ec0:	2b01      	cmp	r3, #1
 8004ec2:	d101      	bne.n	8004ec8 <HAL_TIMEx_ConfigBreakDeadTime+0x1c>
 8004ec4:	2302      	movs	r3, #2
 8004ec6:	e03d      	b.n	8004f44 <HAL_TIMEx_ConfigBreakDeadTime+0x98>
 8004ec8:	687b      	ldr	r3, [r7, #4]
 8004eca:	2201      	movs	r2, #1
 8004ecc:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8004ed0:	68fb      	ldr	r3, [r7, #12]
 8004ed2:	f023 02ff 	bic.w	r2, r3, #255	@ 0xff
 8004ed6:	683b      	ldr	r3, [r7, #0]
 8004ed8:	68db      	ldr	r3, [r3, #12]
 8004eda:	4313      	orrs	r3, r2
 8004edc:	60fb      	str	r3, [r7, #12]
 8004ede:	68fb      	ldr	r3, [r7, #12]
 8004ee0:	f423 7240 	bic.w	r2, r3, #768	@ 0x300
 8004ee4:	683b      	ldr	r3, [r7, #0]
 8004ee6:	689b      	ldr	r3, [r3, #8]
 8004ee8:	4313      	orrs	r3, r2
 8004eea:	60fb      	str	r3, [r7, #12]
 8004eec:	68fb      	ldr	r3, [r7, #12]
 8004eee:	f423 6280 	bic.w	r2, r3, #1024	@ 0x400
 8004ef2:	683b      	ldr	r3, [r7, #0]
 8004ef4:	685b      	ldr	r3, [r3, #4]
 8004ef6:	4313      	orrs	r3, r2
 8004ef8:	60fb      	str	r3, [r7, #12]
 8004efa:	68fb      	ldr	r3, [r7, #12]
 8004efc:	f423 6200 	bic.w	r2, r3, #2048	@ 0x800
 8004f00:	683b      	ldr	r3, [r7, #0]
 8004f02:	681b      	ldr	r3, [r3, #0]
 8004f04:	4313      	orrs	r3, r2
 8004f06:	60fb      	str	r3, [r7, #12]
 8004f08:	68fb      	ldr	r3, [r7, #12]
 8004f0a:	f423 5280 	bic.w	r2, r3, #4096	@ 0x1000
 8004f0e:	683b      	ldr	r3, [r7, #0]
 8004f10:	691b      	ldr	r3, [r3, #16]
 8004f12:	4313      	orrs	r3, r2
 8004f14:	60fb      	str	r3, [r7, #12]
 8004f16:	68fb      	ldr	r3, [r7, #12]
 8004f18:	f423 5200 	bic.w	r2, r3, #8192	@ 0x2000
 8004f1c:	683b      	ldr	r3, [r7, #0]
 8004f1e:	695b      	ldr	r3, [r3, #20]
 8004f20:	4313      	orrs	r3, r2
 8004f22:	60fb      	str	r3, [r7, #12]
 8004f24:	68fb      	ldr	r3, [r7, #12]
 8004f26:	f423 4280 	bic.w	r2, r3, #16384	@ 0x4000
 8004f2a:	683b      	ldr	r3, [r7, #0]
 8004f2c:	69db      	ldr	r3, [r3, #28]
 8004f2e:	4313      	orrs	r3, r2
 8004f30:	60fb      	str	r3, [r7, #12]
 8004f32:	687b      	ldr	r3, [r7, #4]
 8004f34:	681b      	ldr	r3, [r3, #0]
 8004f36:	68fa      	ldr	r2, [r7, #12]
 8004f38:	645a      	str	r2, [r3, #68]	@ 0x44
 8004f3a:	687b      	ldr	r3, [r7, #4]
 8004f3c:	2200      	movs	r2, #0
 8004f3e:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8004f42:	2300      	movs	r3, #0
 8004f44:	4618      	mov	r0, r3
 8004f46:	3714      	adds	r7, #20
 8004f48:	46bd      	mov	sp, r7
 8004f4a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004f4e:	4770      	bx	lr

08004f50 <siprintf>:
 8004f50:	b40e      	push	{r1, r2, r3}
 8004f52:	b510      	push	{r4, lr}
 8004f54:	b09d      	sub	sp, #116	@ 0x74
 8004f56:	ab1f      	add	r3, sp, #124	@ 0x7c
 8004f58:	9002      	str	r0, [sp, #8]
 8004f5a:	9006      	str	r0, [sp, #24]
 8004f5c:	f06f 4100 	mvn.w	r1, #2147483648	@ 0x80000000
 8004f60:	480a      	ldr	r0, [pc, #40]	@ (8004f8c <siprintf+0x3c>)
 8004f62:	9107      	str	r1, [sp, #28]
 8004f64:	9104      	str	r1, [sp, #16]
 8004f66:	490a      	ldr	r1, [pc, #40]	@ (8004f90 <siprintf+0x40>)
 8004f68:	f853 2b04 	ldr.w	r2, [r3], #4
 8004f6c:	9105      	str	r1, [sp, #20]
 8004f6e:	2400      	movs	r4, #0
 8004f70:	a902      	add	r1, sp, #8
 8004f72:	6800      	ldr	r0, [r0, #0]
 8004f74:	9301      	str	r3, [sp, #4]
 8004f76:	941b      	str	r4, [sp, #108]	@ 0x6c
 8004f78:	f000 f994 	bl	80052a4 <_svfiprintf_r>
 8004f7c:	9b02      	ldr	r3, [sp, #8]
 8004f7e:	701c      	strb	r4, [r3, #0]
 8004f80:	b01d      	add	sp, #116	@ 0x74
 8004f82:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8004f86:	b003      	add	sp, #12
 8004f88:	4770      	bx	lr
 8004f8a:	bf00      	nop
 8004f8c:	2000020c 	.word	0x2000020c
 8004f90:	ffff0208 	.word	0xffff0208

08004f94 <memset>:
 8004f94:	4402      	add	r2, r0
 8004f96:	4603      	mov	r3, r0
 8004f98:	4293      	cmp	r3, r2
 8004f9a:	d100      	bne.n	8004f9e <memset+0xa>
 8004f9c:	4770      	bx	lr
 8004f9e:	f803 1b01 	strb.w	r1, [r3], #1
 8004fa2:	e7f9      	b.n	8004f98 <memset+0x4>

08004fa4 <__errno>:
 8004fa4:	4b01      	ldr	r3, [pc, #4]	@ (8004fac <__errno+0x8>)
 8004fa6:	6818      	ldr	r0, [r3, #0]
 8004fa8:	4770      	bx	lr
 8004faa:	bf00      	nop
 8004fac:	2000020c 	.word	0x2000020c

08004fb0 <__libc_init_array>:
 8004fb0:	b570      	push	{r4, r5, r6, lr}
 8004fb2:	4d0d      	ldr	r5, [pc, #52]	@ (8004fe8 <__libc_init_array+0x38>)
 8004fb4:	4c0d      	ldr	r4, [pc, #52]	@ (8004fec <__libc_init_array+0x3c>)
 8004fb6:	1b64      	subs	r4, r4, r5
 8004fb8:	10a4      	asrs	r4, r4, #2
 8004fba:	2600      	movs	r6, #0
 8004fbc:	42a6      	cmp	r6, r4
 8004fbe:	d109      	bne.n	8004fd4 <__libc_init_array+0x24>
 8004fc0:	4d0b      	ldr	r5, [pc, #44]	@ (8004ff0 <__libc_init_array+0x40>)
 8004fc2:	4c0c      	ldr	r4, [pc, #48]	@ (8004ff4 <__libc_init_array+0x44>)
 8004fc4:	f000 fc64 	bl	8005890 <_init>
 8004fc8:	1b64      	subs	r4, r4, r5
 8004fca:	10a4      	asrs	r4, r4, #2
 8004fcc:	2600      	movs	r6, #0
 8004fce:	42a6      	cmp	r6, r4
 8004fd0:	d105      	bne.n	8004fde <__libc_init_array+0x2e>
 8004fd2:	bd70      	pop	{r4, r5, r6, pc}
 8004fd4:	f855 3b04 	ldr.w	r3, [r5], #4
 8004fd8:	4798      	blx	r3
 8004fda:	3601      	adds	r6, #1
 8004fdc:	e7ee      	b.n	8004fbc <__libc_init_array+0xc>
 8004fde:	f855 3b04 	ldr.w	r3, [r5], #4
 8004fe2:	4798      	blx	r3
 8004fe4:	3601      	adds	r6, #1
 8004fe6:	e7f2      	b.n	8004fce <__libc_init_array+0x1e>
 8004fe8:	08005994 	.word	0x08005994
 8004fec:	08005994 	.word	0x08005994
 8004ff0:	08005994 	.word	0x08005994
 8004ff4:	08005998 	.word	0x08005998

08004ff8 <__retarget_lock_acquire_recursive>:
 8004ff8:	4770      	bx	lr

08004ffa <__retarget_lock_release_recursive>:
 8004ffa:	4770      	bx	lr

08004ffc <_free_r>:
 8004ffc:	b538      	push	{r3, r4, r5, lr}
 8004ffe:	4605      	mov	r5, r0
 8005000:	2900      	cmp	r1, #0
 8005002:	d041      	beq.n	8005088 <_free_r+0x8c>
 8005004:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8005008:	1f0c      	subs	r4, r1, #4
 800500a:	2b00      	cmp	r3, #0
 800500c:	bfb8      	it	lt
 800500e:	18e4      	addlt	r4, r4, r3
 8005010:	f000 f8e0 	bl	80051d4 <__malloc_lock>
 8005014:	4a1d      	ldr	r2, [pc, #116]	@ (800508c <_free_r+0x90>)
 8005016:	6813      	ldr	r3, [r2, #0]
 8005018:	b933      	cbnz	r3, 8005028 <_free_r+0x2c>
 800501a:	6063      	str	r3, [r4, #4]
 800501c:	6014      	str	r4, [r2, #0]
 800501e:	4628      	mov	r0, r5
 8005020:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8005024:	f000 b8dc 	b.w	80051e0 <__malloc_unlock>
 8005028:	42a3      	cmp	r3, r4
 800502a:	d908      	bls.n	800503e <_free_r+0x42>
 800502c:	6820      	ldr	r0, [r4, #0]
 800502e:	1821      	adds	r1, r4, r0
 8005030:	428b      	cmp	r3, r1
 8005032:	bf01      	itttt	eq
 8005034:	6819      	ldreq	r1, [r3, #0]
 8005036:	685b      	ldreq	r3, [r3, #4]
 8005038:	1809      	addeq	r1, r1, r0
 800503a:	6021      	streq	r1, [r4, #0]
 800503c:	e7ed      	b.n	800501a <_free_r+0x1e>
 800503e:	461a      	mov	r2, r3
 8005040:	685b      	ldr	r3, [r3, #4]
 8005042:	b10b      	cbz	r3, 8005048 <_free_r+0x4c>
 8005044:	42a3      	cmp	r3, r4
 8005046:	d9fa      	bls.n	800503e <_free_r+0x42>
 8005048:	6811      	ldr	r1, [r2, #0]
 800504a:	1850      	adds	r0, r2, r1
 800504c:	42a0      	cmp	r0, r4
 800504e:	d10b      	bne.n	8005068 <_free_r+0x6c>
 8005050:	6820      	ldr	r0, [r4, #0]
 8005052:	4401      	add	r1, r0
 8005054:	1850      	adds	r0, r2, r1
 8005056:	4283      	cmp	r3, r0
 8005058:	6011      	str	r1, [r2, #0]
 800505a:	d1e0      	bne.n	800501e <_free_r+0x22>
 800505c:	6818      	ldr	r0, [r3, #0]
 800505e:	685b      	ldr	r3, [r3, #4]
 8005060:	6053      	str	r3, [r2, #4]
 8005062:	4408      	add	r0, r1
 8005064:	6010      	str	r0, [r2, #0]
 8005066:	e7da      	b.n	800501e <_free_r+0x22>
 8005068:	d902      	bls.n	8005070 <_free_r+0x74>
 800506a:	230c      	movs	r3, #12
 800506c:	602b      	str	r3, [r5, #0]
 800506e:	e7d6      	b.n	800501e <_free_r+0x22>
 8005070:	6820      	ldr	r0, [r4, #0]
 8005072:	1821      	adds	r1, r4, r0
 8005074:	428b      	cmp	r3, r1
 8005076:	bf04      	itt	eq
 8005078:	6819      	ldreq	r1, [r3, #0]
 800507a:	685b      	ldreq	r3, [r3, #4]
 800507c:	6063      	str	r3, [r4, #4]
 800507e:	bf04      	itt	eq
 8005080:	1809      	addeq	r1, r1, r0
 8005082:	6021      	streq	r1, [r4, #0]
 8005084:	6054      	str	r4, [r2, #4]
 8005086:	e7ca      	b.n	800501e <_free_r+0x22>
 8005088:	bd38      	pop	{r3, r4, r5, pc}
 800508a:	bf00      	nop
 800508c:	200005c8 	.word	0x200005c8

08005090 <sbrk_aligned>:
 8005090:	b570      	push	{r4, r5, r6, lr}
 8005092:	4e0f      	ldr	r6, [pc, #60]	@ (80050d0 <sbrk_aligned+0x40>)
 8005094:	460c      	mov	r4, r1
 8005096:	6831      	ldr	r1, [r6, #0]
 8005098:	4605      	mov	r5, r0
 800509a:	b911      	cbnz	r1, 80050a2 <sbrk_aligned+0x12>
 800509c:	f000 fba4 	bl	80057e8 <_sbrk_r>
 80050a0:	6030      	str	r0, [r6, #0]
 80050a2:	4621      	mov	r1, r4
 80050a4:	4628      	mov	r0, r5
 80050a6:	f000 fb9f 	bl	80057e8 <_sbrk_r>
 80050aa:	1c43      	adds	r3, r0, #1
 80050ac:	d103      	bne.n	80050b6 <sbrk_aligned+0x26>
 80050ae:	f04f 34ff 	mov.w	r4, #4294967295
 80050b2:	4620      	mov	r0, r4
 80050b4:	bd70      	pop	{r4, r5, r6, pc}
 80050b6:	1cc4      	adds	r4, r0, #3
 80050b8:	f024 0403 	bic.w	r4, r4, #3
 80050bc:	42a0      	cmp	r0, r4
 80050be:	d0f8      	beq.n	80050b2 <sbrk_aligned+0x22>
 80050c0:	1a21      	subs	r1, r4, r0
 80050c2:	4628      	mov	r0, r5
 80050c4:	f000 fb90 	bl	80057e8 <_sbrk_r>
 80050c8:	3001      	adds	r0, #1
 80050ca:	d1f2      	bne.n	80050b2 <sbrk_aligned+0x22>
 80050cc:	e7ef      	b.n	80050ae <sbrk_aligned+0x1e>
 80050ce:	bf00      	nop
 80050d0:	200005c4 	.word	0x200005c4

080050d4 <_malloc_r>:
 80050d4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80050d8:	1ccd      	adds	r5, r1, #3
 80050da:	f025 0503 	bic.w	r5, r5, #3
 80050de:	3508      	adds	r5, #8
 80050e0:	2d0c      	cmp	r5, #12
 80050e2:	bf38      	it	cc
 80050e4:	250c      	movcc	r5, #12
 80050e6:	2d00      	cmp	r5, #0
 80050e8:	4606      	mov	r6, r0
 80050ea:	db01      	blt.n	80050f0 <_malloc_r+0x1c>
 80050ec:	42a9      	cmp	r1, r5
 80050ee:	d904      	bls.n	80050fa <_malloc_r+0x26>
 80050f0:	230c      	movs	r3, #12
 80050f2:	6033      	str	r3, [r6, #0]
 80050f4:	2000      	movs	r0, #0
 80050f6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80050fa:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 80051d0 <_malloc_r+0xfc>
 80050fe:	f000 f869 	bl	80051d4 <__malloc_lock>
 8005102:	f8d8 3000 	ldr.w	r3, [r8]
 8005106:	461c      	mov	r4, r3
 8005108:	bb44      	cbnz	r4, 800515c <_malloc_r+0x88>
 800510a:	4629      	mov	r1, r5
 800510c:	4630      	mov	r0, r6
 800510e:	f7ff ffbf 	bl	8005090 <sbrk_aligned>
 8005112:	1c43      	adds	r3, r0, #1
 8005114:	4604      	mov	r4, r0
 8005116:	d158      	bne.n	80051ca <_malloc_r+0xf6>
 8005118:	f8d8 4000 	ldr.w	r4, [r8]
 800511c:	4627      	mov	r7, r4
 800511e:	2f00      	cmp	r7, #0
 8005120:	d143      	bne.n	80051aa <_malloc_r+0xd6>
 8005122:	2c00      	cmp	r4, #0
 8005124:	d04b      	beq.n	80051be <_malloc_r+0xea>
 8005126:	6823      	ldr	r3, [r4, #0]
 8005128:	4639      	mov	r1, r7
 800512a:	4630      	mov	r0, r6
 800512c:	eb04 0903 	add.w	r9, r4, r3
 8005130:	f000 fb5a 	bl	80057e8 <_sbrk_r>
 8005134:	4581      	cmp	r9, r0
 8005136:	d142      	bne.n	80051be <_malloc_r+0xea>
 8005138:	6821      	ldr	r1, [r4, #0]
 800513a:	1a6d      	subs	r5, r5, r1
 800513c:	4629      	mov	r1, r5
 800513e:	4630      	mov	r0, r6
 8005140:	f7ff ffa6 	bl	8005090 <sbrk_aligned>
 8005144:	3001      	adds	r0, #1
 8005146:	d03a      	beq.n	80051be <_malloc_r+0xea>
 8005148:	6823      	ldr	r3, [r4, #0]
 800514a:	442b      	add	r3, r5
 800514c:	6023      	str	r3, [r4, #0]
 800514e:	f8d8 3000 	ldr.w	r3, [r8]
 8005152:	685a      	ldr	r2, [r3, #4]
 8005154:	bb62      	cbnz	r2, 80051b0 <_malloc_r+0xdc>
 8005156:	f8c8 7000 	str.w	r7, [r8]
 800515a:	e00f      	b.n	800517c <_malloc_r+0xa8>
 800515c:	6822      	ldr	r2, [r4, #0]
 800515e:	1b52      	subs	r2, r2, r5
 8005160:	d420      	bmi.n	80051a4 <_malloc_r+0xd0>
 8005162:	2a0b      	cmp	r2, #11
 8005164:	d917      	bls.n	8005196 <_malloc_r+0xc2>
 8005166:	1961      	adds	r1, r4, r5
 8005168:	42a3      	cmp	r3, r4
 800516a:	6025      	str	r5, [r4, #0]
 800516c:	bf18      	it	ne
 800516e:	6059      	strne	r1, [r3, #4]
 8005170:	6863      	ldr	r3, [r4, #4]
 8005172:	bf08      	it	eq
 8005174:	f8c8 1000 	streq.w	r1, [r8]
 8005178:	5162      	str	r2, [r4, r5]
 800517a:	604b      	str	r3, [r1, #4]
 800517c:	4630      	mov	r0, r6
 800517e:	f000 f82f 	bl	80051e0 <__malloc_unlock>
 8005182:	f104 000b 	add.w	r0, r4, #11
 8005186:	1d23      	adds	r3, r4, #4
 8005188:	f020 0007 	bic.w	r0, r0, #7
 800518c:	1ac2      	subs	r2, r0, r3
 800518e:	bf1c      	itt	ne
 8005190:	1a1b      	subne	r3, r3, r0
 8005192:	50a3      	strne	r3, [r4, r2]
 8005194:	e7af      	b.n	80050f6 <_malloc_r+0x22>
 8005196:	6862      	ldr	r2, [r4, #4]
 8005198:	42a3      	cmp	r3, r4
 800519a:	bf0c      	ite	eq
 800519c:	f8c8 2000 	streq.w	r2, [r8]
 80051a0:	605a      	strne	r2, [r3, #4]
 80051a2:	e7eb      	b.n	800517c <_malloc_r+0xa8>
 80051a4:	4623      	mov	r3, r4
 80051a6:	6864      	ldr	r4, [r4, #4]
 80051a8:	e7ae      	b.n	8005108 <_malloc_r+0x34>
 80051aa:	463c      	mov	r4, r7
 80051ac:	687f      	ldr	r7, [r7, #4]
 80051ae:	e7b6      	b.n	800511e <_malloc_r+0x4a>
 80051b0:	461a      	mov	r2, r3
 80051b2:	685b      	ldr	r3, [r3, #4]
 80051b4:	42a3      	cmp	r3, r4
 80051b6:	d1fb      	bne.n	80051b0 <_malloc_r+0xdc>
 80051b8:	2300      	movs	r3, #0
 80051ba:	6053      	str	r3, [r2, #4]
 80051bc:	e7de      	b.n	800517c <_malloc_r+0xa8>
 80051be:	230c      	movs	r3, #12
 80051c0:	6033      	str	r3, [r6, #0]
 80051c2:	4630      	mov	r0, r6
 80051c4:	f000 f80c 	bl	80051e0 <__malloc_unlock>
 80051c8:	e794      	b.n	80050f4 <_malloc_r+0x20>
 80051ca:	6005      	str	r5, [r0, #0]
 80051cc:	e7d6      	b.n	800517c <_malloc_r+0xa8>
 80051ce:	bf00      	nop
 80051d0:	200005c8 	.word	0x200005c8

080051d4 <__malloc_lock>:
 80051d4:	4801      	ldr	r0, [pc, #4]	@ (80051dc <__malloc_lock+0x8>)
 80051d6:	f7ff bf0f 	b.w	8004ff8 <__retarget_lock_acquire_recursive>
 80051da:	bf00      	nop
 80051dc:	200005c0 	.word	0x200005c0

080051e0 <__malloc_unlock>:
 80051e0:	4801      	ldr	r0, [pc, #4]	@ (80051e8 <__malloc_unlock+0x8>)
 80051e2:	f7ff bf0a 	b.w	8004ffa <__retarget_lock_release_recursive>
 80051e6:	bf00      	nop
 80051e8:	200005c0 	.word	0x200005c0

080051ec <__ssputs_r>:
 80051ec:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80051f0:	688e      	ldr	r6, [r1, #8]
 80051f2:	461f      	mov	r7, r3
 80051f4:	42be      	cmp	r6, r7
 80051f6:	680b      	ldr	r3, [r1, #0]
 80051f8:	4682      	mov	sl, r0
 80051fa:	460c      	mov	r4, r1
 80051fc:	4690      	mov	r8, r2
 80051fe:	d82d      	bhi.n	800525c <__ssputs_r+0x70>
 8005200:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8005204:	f412 6f90 	tst.w	r2, #1152	@ 0x480
 8005208:	d026      	beq.n	8005258 <__ssputs_r+0x6c>
 800520a:	6965      	ldr	r5, [r4, #20]
 800520c:	6909      	ldr	r1, [r1, #16]
 800520e:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8005212:	eba3 0901 	sub.w	r9, r3, r1
 8005216:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 800521a:	1c7b      	adds	r3, r7, #1
 800521c:	444b      	add	r3, r9
 800521e:	106d      	asrs	r5, r5, #1
 8005220:	429d      	cmp	r5, r3
 8005222:	bf38      	it	cc
 8005224:	461d      	movcc	r5, r3
 8005226:	0553      	lsls	r3, r2, #21
 8005228:	d527      	bpl.n	800527a <__ssputs_r+0x8e>
 800522a:	4629      	mov	r1, r5
 800522c:	f7ff ff52 	bl	80050d4 <_malloc_r>
 8005230:	4606      	mov	r6, r0
 8005232:	b360      	cbz	r0, 800528e <__ssputs_r+0xa2>
 8005234:	6921      	ldr	r1, [r4, #16]
 8005236:	464a      	mov	r2, r9
 8005238:	f000 fae6 	bl	8005808 <memcpy>
 800523c:	89a3      	ldrh	r3, [r4, #12]
 800523e:	f423 6390 	bic.w	r3, r3, #1152	@ 0x480
 8005242:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8005246:	81a3      	strh	r3, [r4, #12]
 8005248:	6126      	str	r6, [r4, #16]
 800524a:	6165      	str	r5, [r4, #20]
 800524c:	444e      	add	r6, r9
 800524e:	eba5 0509 	sub.w	r5, r5, r9
 8005252:	6026      	str	r6, [r4, #0]
 8005254:	60a5      	str	r5, [r4, #8]
 8005256:	463e      	mov	r6, r7
 8005258:	42be      	cmp	r6, r7
 800525a:	d900      	bls.n	800525e <__ssputs_r+0x72>
 800525c:	463e      	mov	r6, r7
 800525e:	6820      	ldr	r0, [r4, #0]
 8005260:	4632      	mov	r2, r6
 8005262:	4641      	mov	r1, r8
 8005264:	f000 faa6 	bl	80057b4 <memmove>
 8005268:	68a3      	ldr	r3, [r4, #8]
 800526a:	1b9b      	subs	r3, r3, r6
 800526c:	60a3      	str	r3, [r4, #8]
 800526e:	6823      	ldr	r3, [r4, #0]
 8005270:	4433      	add	r3, r6
 8005272:	6023      	str	r3, [r4, #0]
 8005274:	2000      	movs	r0, #0
 8005276:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800527a:	462a      	mov	r2, r5
 800527c:	f000 fad2 	bl	8005824 <_realloc_r>
 8005280:	4606      	mov	r6, r0
 8005282:	2800      	cmp	r0, #0
 8005284:	d1e0      	bne.n	8005248 <__ssputs_r+0x5c>
 8005286:	6921      	ldr	r1, [r4, #16]
 8005288:	4650      	mov	r0, sl
 800528a:	f7ff feb7 	bl	8004ffc <_free_r>
 800528e:	230c      	movs	r3, #12
 8005290:	f8ca 3000 	str.w	r3, [sl]
 8005294:	89a3      	ldrh	r3, [r4, #12]
 8005296:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800529a:	81a3      	strh	r3, [r4, #12]
 800529c:	f04f 30ff 	mov.w	r0, #4294967295
 80052a0:	e7e9      	b.n	8005276 <__ssputs_r+0x8a>
	...

080052a4 <_svfiprintf_r>:
 80052a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80052a8:	4698      	mov	r8, r3
 80052aa:	898b      	ldrh	r3, [r1, #12]
 80052ac:	061b      	lsls	r3, r3, #24
 80052ae:	b09d      	sub	sp, #116	@ 0x74
 80052b0:	4607      	mov	r7, r0
 80052b2:	460d      	mov	r5, r1
 80052b4:	4614      	mov	r4, r2
 80052b6:	d510      	bpl.n	80052da <_svfiprintf_r+0x36>
 80052b8:	690b      	ldr	r3, [r1, #16]
 80052ba:	b973      	cbnz	r3, 80052da <_svfiprintf_r+0x36>
 80052bc:	2140      	movs	r1, #64	@ 0x40
 80052be:	f7ff ff09 	bl	80050d4 <_malloc_r>
 80052c2:	6028      	str	r0, [r5, #0]
 80052c4:	6128      	str	r0, [r5, #16]
 80052c6:	b930      	cbnz	r0, 80052d6 <_svfiprintf_r+0x32>
 80052c8:	230c      	movs	r3, #12
 80052ca:	603b      	str	r3, [r7, #0]
 80052cc:	f04f 30ff 	mov.w	r0, #4294967295
 80052d0:	b01d      	add	sp, #116	@ 0x74
 80052d2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80052d6:	2340      	movs	r3, #64	@ 0x40
 80052d8:	616b      	str	r3, [r5, #20]
 80052da:	2300      	movs	r3, #0
 80052dc:	9309      	str	r3, [sp, #36]	@ 0x24
 80052de:	2320      	movs	r3, #32
 80052e0:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 80052e4:	f8cd 800c 	str.w	r8, [sp, #12]
 80052e8:	2330      	movs	r3, #48	@ 0x30
 80052ea:	f8df 819c 	ldr.w	r8, [pc, #412]	@ 8005488 <_svfiprintf_r+0x1e4>
 80052ee:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 80052f2:	f04f 0901 	mov.w	r9, #1
 80052f6:	4623      	mov	r3, r4
 80052f8:	469a      	mov	sl, r3
 80052fa:	f813 2b01 	ldrb.w	r2, [r3], #1
 80052fe:	b10a      	cbz	r2, 8005304 <_svfiprintf_r+0x60>
 8005300:	2a25      	cmp	r2, #37	@ 0x25
 8005302:	d1f9      	bne.n	80052f8 <_svfiprintf_r+0x54>
 8005304:	ebba 0b04 	subs.w	fp, sl, r4
 8005308:	d00b      	beq.n	8005322 <_svfiprintf_r+0x7e>
 800530a:	465b      	mov	r3, fp
 800530c:	4622      	mov	r2, r4
 800530e:	4629      	mov	r1, r5
 8005310:	4638      	mov	r0, r7
 8005312:	f7ff ff6b 	bl	80051ec <__ssputs_r>
 8005316:	3001      	adds	r0, #1
 8005318:	f000 80a7 	beq.w	800546a <_svfiprintf_r+0x1c6>
 800531c:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800531e:	445a      	add	r2, fp
 8005320:	9209      	str	r2, [sp, #36]	@ 0x24
 8005322:	f89a 3000 	ldrb.w	r3, [sl]
 8005326:	2b00      	cmp	r3, #0
 8005328:	f000 809f 	beq.w	800546a <_svfiprintf_r+0x1c6>
 800532c:	2300      	movs	r3, #0
 800532e:	f04f 32ff 	mov.w	r2, #4294967295
 8005332:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8005336:	f10a 0a01 	add.w	sl, sl, #1
 800533a:	9304      	str	r3, [sp, #16]
 800533c:	9307      	str	r3, [sp, #28]
 800533e:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8005342:	931a      	str	r3, [sp, #104]	@ 0x68
 8005344:	4654      	mov	r4, sl
 8005346:	2205      	movs	r2, #5
 8005348:	f814 1b01 	ldrb.w	r1, [r4], #1
 800534c:	484e      	ldr	r0, [pc, #312]	@ (8005488 <_svfiprintf_r+0x1e4>)
 800534e:	f7fa ff47 	bl	80001e0 <memchr>
 8005352:	9a04      	ldr	r2, [sp, #16]
 8005354:	b9d8      	cbnz	r0, 800538e <_svfiprintf_r+0xea>
 8005356:	06d0      	lsls	r0, r2, #27
 8005358:	bf44      	itt	mi
 800535a:	2320      	movmi	r3, #32
 800535c:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8005360:	0711      	lsls	r1, r2, #28
 8005362:	bf44      	itt	mi
 8005364:	232b      	movmi	r3, #43	@ 0x2b
 8005366:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 800536a:	f89a 3000 	ldrb.w	r3, [sl]
 800536e:	2b2a      	cmp	r3, #42	@ 0x2a
 8005370:	d015      	beq.n	800539e <_svfiprintf_r+0xfa>
 8005372:	9a07      	ldr	r2, [sp, #28]
 8005374:	4654      	mov	r4, sl
 8005376:	2000      	movs	r0, #0
 8005378:	f04f 0c0a 	mov.w	ip, #10
 800537c:	4621      	mov	r1, r4
 800537e:	f811 3b01 	ldrb.w	r3, [r1], #1
 8005382:	3b30      	subs	r3, #48	@ 0x30
 8005384:	2b09      	cmp	r3, #9
 8005386:	d94b      	bls.n	8005420 <_svfiprintf_r+0x17c>
 8005388:	b1b0      	cbz	r0, 80053b8 <_svfiprintf_r+0x114>
 800538a:	9207      	str	r2, [sp, #28]
 800538c:	e014      	b.n	80053b8 <_svfiprintf_r+0x114>
 800538e:	eba0 0308 	sub.w	r3, r0, r8
 8005392:	fa09 f303 	lsl.w	r3, r9, r3
 8005396:	4313      	orrs	r3, r2
 8005398:	9304      	str	r3, [sp, #16]
 800539a:	46a2      	mov	sl, r4
 800539c:	e7d2      	b.n	8005344 <_svfiprintf_r+0xa0>
 800539e:	9b03      	ldr	r3, [sp, #12]
 80053a0:	1d19      	adds	r1, r3, #4
 80053a2:	681b      	ldr	r3, [r3, #0]
 80053a4:	9103      	str	r1, [sp, #12]
 80053a6:	2b00      	cmp	r3, #0
 80053a8:	bfbb      	ittet	lt
 80053aa:	425b      	neglt	r3, r3
 80053ac:	f042 0202 	orrlt.w	r2, r2, #2
 80053b0:	9307      	strge	r3, [sp, #28]
 80053b2:	9307      	strlt	r3, [sp, #28]
 80053b4:	bfb8      	it	lt
 80053b6:	9204      	strlt	r2, [sp, #16]
 80053b8:	7823      	ldrb	r3, [r4, #0]
 80053ba:	2b2e      	cmp	r3, #46	@ 0x2e
 80053bc:	d10a      	bne.n	80053d4 <_svfiprintf_r+0x130>
 80053be:	7863      	ldrb	r3, [r4, #1]
 80053c0:	2b2a      	cmp	r3, #42	@ 0x2a
 80053c2:	d132      	bne.n	800542a <_svfiprintf_r+0x186>
 80053c4:	9b03      	ldr	r3, [sp, #12]
 80053c6:	1d1a      	adds	r2, r3, #4
 80053c8:	681b      	ldr	r3, [r3, #0]
 80053ca:	9203      	str	r2, [sp, #12]
 80053cc:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 80053d0:	3402      	adds	r4, #2
 80053d2:	9305      	str	r3, [sp, #20]
 80053d4:	f8df a0c0 	ldr.w	sl, [pc, #192]	@ 8005498 <_svfiprintf_r+0x1f4>
 80053d8:	7821      	ldrb	r1, [r4, #0]
 80053da:	2203      	movs	r2, #3
 80053dc:	4650      	mov	r0, sl
 80053de:	f7fa feff 	bl	80001e0 <memchr>
 80053e2:	b138      	cbz	r0, 80053f4 <_svfiprintf_r+0x150>
 80053e4:	9b04      	ldr	r3, [sp, #16]
 80053e6:	eba0 000a 	sub.w	r0, r0, sl
 80053ea:	2240      	movs	r2, #64	@ 0x40
 80053ec:	4082      	lsls	r2, r0
 80053ee:	4313      	orrs	r3, r2
 80053f0:	3401      	adds	r4, #1
 80053f2:	9304      	str	r3, [sp, #16]
 80053f4:	f814 1b01 	ldrb.w	r1, [r4], #1
 80053f8:	4824      	ldr	r0, [pc, #144]	@ (800548c <_svfiprintf_r+0x1e8>)
 80053fa:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 80053fe:	2206      	movs	r2, #6
 8005400:	f7fa feee 	bl	80001e0 <memchr>
 8005404:	2800      	cmp	r0, #0
 8005406:	d036      	beq.n	8005476 <_svfiprintf_r+0x1d2>
 8005408:	4b21      	ldr	r3, [pc, #132]	@ (8005490 <_svfiprintf_r+0x1ec>)
 800540a:	bb1b      	cbnz	r3, 8005454 <_svfiprintf_r+0x1b0>
 800540c:	9b03      	ldr	r3, [sp, #12]
 800540e:	3307      	adds	r3, #7
 8005410:	f023 0307 	bic.w	r3, r3, #7
 8005414:	3308      	adds	r3, #8
 8005416:	9303      	str	r3, [sp, #12]
 8005418:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800541a:	4433      	add	r3, r6
 800541c:	9309      	str	r3, [sp, #36]	@ 0x24
 800541e:	e76a      	b.n	80052f6 <_svfiprintf_r+0x52>
 8005420:	fb0c 3202 	mla	r2, ip, r2, r3
 8005424:	460c      	mov	r4, r1
 8005426:	2001      	movs	r0, #1
 8005428:	e7a8      	b.n	800537c <_svfiprintf_r+0xd8>
 800542a:	2300      	movs	r3, #0
 800542c:	3401      	adds	r4, #1
 800542e:	9305      	str	r3, [sp, #20]
 8005430:	4619      	mov	r1, r3
 8005432:	f04f 0c0a 	mov.w	ip, #10
 8005436:	4620      	mov	r0, r4
 8005438:	f810 2b01 	ldrb.w	r2, [r0], #1
 800543c:	3a30      	subs	r2, #48	@ 0x30
 800543e:	2a09      	cmp	r2, #9
 8005440:	d903      	bls.n	800544a <_svfiprintf_r+0x1a6>
 8005442:	2b00      	cmp	r3, #0
 8005444:	d0c6      	beq.n	80053d4 <_svfiprintf_r+0x130>
 8005446:	9105      	str	r1, [sp, #20]
 8005448:	e7c4      	b.n	80053d4 <_svfiprintf_r+0x130>
 800544a:	fb0c 2101 	mla	r1, ip, r1, r2
 800544e:	4604      	mov	r4, r0
 8005450:	2301      	movs	r3, #1
 8005452:	e7f0      	b.n	8005436 <_svfiprintf_r+0x192>
 8005454:	ab03      	add	r3, sp, #12
 8005456:	9300      	str	r3, [sp, #0]
 8005458:	462a      	mov	r2, r5
 800545a:	4b0e      	ldr	r3, [pc, #56]	@ (8005494 <_svfiprintf_r+0x1f0>)
 800545c:	a904      	add	r1, sp, #16
 800545e:	4638      	mov	r0, r7
 8005460:	f3af 8000 	nop.w
 8005464:	1c42      	adds	r2, r0, #1
 8005466:	4606      	mov	r6, r0
 8005468:	d1d6      	bne.n	8005418 <_svfiprintf_r+0x174>
 800546a:	89ab      	ldrh	r3, [r5, #12]
 800546c:	065b      	lsls	r3, r3, #25
 800546e:	f53f af2d 	bmi.w	80052cc <_svfiprintf_r+0x28>
 8005472:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8005474:	e72c      	b.n	80052d0 <_svfiprintf_r+0x2c>
 8005476:	ab03      	add	r3, sp, #12
 8005478:	9300      	str	r3, [sp, #0]
 800547a:	462a      	mov	r2, r5
 800547c:	4b05      	ldr	r3, [pc, #20]	@ (8005494 <_svfiprintf_r+0x1f0>)
 800547e:	a904      	add	r1, sp, #16
 8005480:	4638      	mov	r0, r7
 8005482:	f000 f879 	bl	8005578 <_printf_i>
 8005486:	e7ed      	b.n	8005464 <_svfiprintf_r+0x1c0>
 8005488:	08005958 	.word	0x08005958
 800548c:	08005962 	.word	0x08005962
 8005490:	00000000 	.word	0x00000000
 8005494:	080051ed 	.word	0x080051ed
 8005498:	0800595e 	.word	0x0800595e

0800549c <_printf_common>:
 800549c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80054a0:	4616      	mov	r6, r2
 80054a2:	4698      	mov	r8, r3
 80054a4:	688a      	ldr	r2, [r1, #8]
 80054a6:	690b      	ldr	r3, [r1, #16]
 80054a8:	f8dd 9020 	ldr.w	r9, [sp, #32]
 80054ac:	4293      	cmp	r3, r2
 80054ae:	bfb8      	it	lt
 80054b0:	4613      	movlt	r3, r2
 80054b2:	6033      	str	r3, [r6, #0]
 80054b4:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 80054b8:	4607      	mov	r7, r0
 80054ba:	460c      	mov	r4, r1
 80054bc:	b10a      	cbz	r2, 80054c2 <_printf_common+0x26>
 80054be:	3301      	adds	r3, #1
 80054c0:	6033      	str	r3, [r6, #0]
 80054c2:	6823      	ldr	r3, [r4, #0]
 80054c4:	0699      	lsls	r1, r3, #26
 80054c6:	bf42      	ittt	mi
 80054c8:	6833      	ldrmi	r3, [r6, #0]
 80054ca:	3302      	addmi	r3, #2
 80054cc:	6033      	strmi	r3, [r6, #0]
 80054ce:	6825      	ldr	r5, [r4, #0]
 80054d0:	f015 0506 	ands.w	r5, r5, #6
 80054d4:	d106      	bne.n	80054e4 <_printf_common+0x48>
 80054d6:	f104 0a19 	add.w	sl, r4, #25
 80054da:	68e3      	ldr	r3, [r4, #12]
 80054dc:	6832      	ldr	r2, [r6, #0]
 80054de:	1a9b      	subs	r3, r3, r2
 80054e0:	42ab      	cmp	r3, r5
 80054e2:	dc26      	bgt.n	8005532 <_printf_common+0x96>
 80054e4:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 80054e8:	6822      	ldr	r2, [r4, #0]
 80054ea:	3b00      	subs	r3, #0
 80054ec:	bf18      	it	ne
 80054ee:	2301      	movne	r3, #1
 80054f0:	0692      	lsls	r2, r2, #26
 80054f2:	d42b      	bmi.n	800554c <_printf_common+0xb0>
 80054f4:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 80054f8:	4641      	mov	r1, r8
 80054fa:	4638      	mov	r0, r7
 80054fc:	47c8      	blx	r9
 80054fe:	3001      	adds	r0, #1
 8005500:	d01e      	beq.n	8005540 <_printf_common+0xa4>
 8005502:	6823      	ldr	r3, [r4, #0]
 8005504:	6922      	ldr	r2, [r4, #16]
 8005506:	f003 0306 	and.w	r3, r3, #6
 800550a:	2b04      	cmp	r3, #4
 800550c:	bf02      	ittt	eq
 800550e:	68e5      	ldreq	r5, [r4, #12]
 8005510:	6833      	ldreq	r3, [r6, #0]
 8005512:	1aed      	subeq	r5, r5, r3
 8005514:	68a3      	ldr	r3, [r4, #8]
 8005516:	bf0c      	ite	eq
 8005518:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 800551c:	2500      	movne	r5, #0
 800551e:	4293      	cmp	r3, r2
 8005520:	bfc4      	itt	gt
 8005522:	1a9b      	subgt	r3, r3, r2
 8005524:	18ed      	addgt	r5, r5, r3
 8005526:	2600      	movs	r6, #0
 8005528:	341a      	adds	r4, #26
 800552a:	42b5      	cmp	r5, r6
 800552c:	d11a      	bne.n	8005564 <_printf_common+0xc8>
 800552e:	2000      	movs	r0, #0
 8005530:	e008      	b.n	8005544 <_printf_common+0xa8>
 8005532:	2301      	movs	r3, #1
 8005534:	4652      	mov	r2, sl
 8005536:	4641      	mov	r1, r8
 8005538:	4638      	mov	r0, r7
 800553a:	47c8      	blx	r9
 800553c:	3001      	adds	r0, #1
 800553e:	d103      	bne.n	8005548 <_printf_common+0xac>
 8005540:	f04f 30ff 	mov.w	r0, #4294967295
 8005544:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8005548:	3501      	adds	r5, #1
 800554a:	e7c6      	b.n	80054da <_printf_common+0x3e>
 800554c:	18e1      	adds	r1, r4, r3
 800554e:	1c5a      	adds	r2, r3, #1
 8005550:	2030      	movs	r0, #48	@ 0x30
 8005552:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 8005556:	4422      	add	r2, r4
 8005558:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 800555c:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8005560:	3302      	adds	r3, #2
 8005562:	e7c7      	b.n	80054f4 <_printf_common+0x58>
 8005564:	2301      	movs	r3, #1
 8005566:	4622      	mov	r2, r4
 8005568:	4641      	mov	r1, r8
 800556a:	4638      	mov	r0, r7
 800556c:	47c8      	blx	r9
 800556e:	3001      	adds	r0, #1
 8005570:	d0e6      	beq.n	8005540 <_printf_common+0xa4>
 8005572:	3601      	adds	r6, #1
 8005574:	e7d9      	b.n	800552a <_printf_common+0x8e>
	...

08005578 <_printf_i>:
 8005578:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800557c:	7e0f      	ldrb	r7, [r1, #24]
 800557e:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8005580:	2f78      	cmp	r7, #120	@ 0x78
 8005582:	4691      	mov	r9, r2
 8005584:	4680      	mov	r8, r0
 8005586:	460c      	mov	r4, r1
 8005588:	469a      	mov	sl, r3
 800558a:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 800558e:	d807      	bhi.n	80055a0 <_printf_i+0x28>
 8005590:	2f62      	cmp	r7, #98	@ 0x62
 8005592:	d80a      	bhi.n	80055aa <_printf_i+0x32>
 8005594:	2f00      	cmp	r7, #0
 8005596:	f000 80d1 	beq.w	800573c <_printf_i+0x1c4>
 800559a:	2f58      	cmp	r7, #88	@ 0x58
 800559c:	f000 80b8 	beq.w	8005710 <_printf_i+0x198>
 80055a0:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 80055a4:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 80055a8:	e03a      	b.n	8005620 <_printf_i+0xa8>
 80055aa:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 80055ae:	2b15      	cmp	r3, #21
 80055b0:	d8f6      	bhi.n	80055a0 <_printf_i+0x28>
 80055b2:	a101      	add	r1, pc, #4	@ (adr r1, 80055b8 <_printf_i+0x40>)
 80055b4:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 80055b8:	08005611 	.word	0x08005611
 80055bc:	08005625 	.word	0x08005625
 80055c0:	080055a1 	.word	0x080055a1
 80055c4:	080055a1 	.word	0x080055a1
 80055c8:	080055a1 	.word	0x080055a1
 80055cc:	080055a1 	.word	0x080055a1
 80055d0:	08005625 	.word	0x08005625
 80055d4:	080055a1 	.word	0x080055a1
 80055d8:	080055a1 	.word	0x080055a1
 80055dc:	080055a1 	.word	0x080055a1
 80055e0:	080055a1 	.word	0x080055a1
 80055e4:	08005723 	.word	0x08005723
 80055e8:	0800564f 	.word	0x0800564f
 80055ec:	080056dd 	.word	0x080056dd
 80055f0:	080055a1 	.word	0x080055a1
 80055f4:	080055a1 	.word	0x080055a1
 80055f8:	08005745 	.word	0x08005745
 80055fc:	080055a1 	.word	0x080055a1
 8005600:	0800564f 	.word	0x0800564f
 8005604:	080055a1 	.word	0x080055a1
 8005608:	080055a1 	.word	0x080055a1
 800560c:	080056e5 	.word	0x080056e5
 8005610:	6833      	ldr	r3, [r6, #0]
 8005612:	1d1a      	adds	r2, r3, #4
 8005614:	681b      	ldr	r3, [r3, #0]
 8005616:	6032      	str	r2, [r6, #0]
 8005618:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 800561c:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8005620:	2301      	movs	r3, #1
 8005622:	e09c      	b.n	800575e <_printf_i+0x1e6>
 8005624:	6833      	ldr	r3, [r6, #0]
 8005626:	6820      	ldr	r0, [r4, #0]
 8005628:	1d19      	adds	r1, r3, #4
 800562a:	6031      	str	r1, [r6, #0]
 800562c:	0606      	lsls	r6, r0, #24
 800562e:	d501      	bpl.n	8005634 <_printf_i+0xbc>
 8005630:	681d      	ldr	r5, [r3, #0]
 8005632:	e003      	b.n	800563c <_printf_i+0xc4>
 8005634:	0645      	lsls	r5, r0, #25
 8005636:	d5fb      	bpl.n	8005630 <_printf_i+0xb8>
 8005638:	f9b3 5000 	ldrsh.w	r5, [r3]
 800563c:	2d00      	cmp	r5, #0
 800563e:	da03      	bge.n	8005648 <_printf_i+0xd0>
 8005640:	232d      	movs	r3, #45	@ 0x2d
 8005642:	426d      	negs	r5, r5
 8005644:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8005648:	4858      	ldr	r0, [pc, #352]	@ (80057ac <_printf_i+0x234>)
 800564a:	230a      	movs	r3, #10
 800564c:	e011      	b.n	8005672 <_printf_i+0xfa>
 800564e:	6821      	ldr	r1, [r4, #0]
 8005650:	6833      	ldr	r3, [r6, #0]
 8005652:	0608      	lsls	r0, r1, #24
 8005654:	f853 5b04 	ldr.w	r5, [r3], #4
 8005658:	d402      	bmi.n	8005660 <_printf_i+0xe8>
 800565a:	0649      	lsls	r1, r1, #25
 800565c:	bf48      	it	mi
 800565e:	b2ad      	uxthmi	r5, r5
 8005660:	2f6f      	cmp	r7, #111	@ 0x6f
 8005662:	4852      	ldr	r0, [pc, #328]	@ (80057ac <_printf_i+0x234>)
 8005664:	6033      	str	r3, [r6, #0]
 8005666:	bf14      	ite	ne
 8005668:	230a      	movne	r3, #10
 800566a:	2308      	moveq	r3, #8
 800566c:	2100      	movs	r1, #0
 800566e:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 8005672:	6866      	ldr	r6, [r4, #4]
 8005674:	60a6      	str	r6, [r4, #8]
 8005676:	2e00      	cmp	r6, #0
 8005678:	db05      	blt.n	8005686 <_printf_i+0x10e>
 800567a:	6821      	ldr	r1, [r4, #0]
 800567c:	432e      	orrs	r6, r5
 800567e:	f021 0104 	bic.w	r1, r1, #4
 8005682:	6021      	str	r1, [r4, #0]
 8005684:	d04b      	beq.n	800571e <_printf_i+0x1a6>
 8005686:	4616      	mov	r6, r2
 8005688:	fbb5 f1f3 	udiv	r1, r5, r3
 800568c:	fb03 5711 	mls	r7, r3, r1, r5
 8005690:	5dc7      	ldrb	r7, [r0, r7]
 8005692:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8005696:	462f      	mov	r7, r5
 8005698:	42bb      	cmp	r3, r7
 800569a:	460d      	mov	r5, r1
 800569c:	d9f4      	bls.n	8005688 <_printf_i+0x110>
 800569e:	2b08      	cmp	r3, #8
 80056a0:	d10b      	bne.n	80056ba <_printf_i+0x142>
 80056a2:	6823      	ldr	r3, [r4, #0]
 80056a4:	07df      	lsls	r7, r3, #31
 80056a6:	d508      	bpl.n	80056ba <_printf_i+0x142>
 80056a8:	6923      	ldr	r3, [r4, #16]
 80056aa:	6861      	ldr	r1, [r4, #4]
 80056ac:	4299      	cmp	r1, r3
 80056ae:	bfde      	ittt	le
 80056b0:	2330      	movle	r3, #48	@ 0x30
 80056b2:	f806 3c01 	strble.w	r3, [r6, #-1]
 80056b6:	f106 36ff 	addle.w	r6, r6, #4294967295
 80056ba:	1b92      	subs	r2, r2, r6
 80056bc:	6122      	str	r2, [r4, #16]
 80056be:	f8cd a000 	str.w	sl, [sp]
 80056c2:	464b      	mov	r3, r9
 80056c4:	aa03      	add	r2, sp, #12
 80056c6:	4621      	mov	r1, r4
 80056c8:	4640      	mov	r0, r8
 80056ca:	f7ff fee7 	bl	800549c <_printf_common>
 80056ce:	3001      	adds	r0, #1
 80056d0:	d14a      	bne.n	8005768 <_printf_i+0x1f0>
 80056d2:	f04f 30ff 	mov.w	r0, #4294967295
 80056d6:	b004      	add	sp, #16
 80056d8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80056dc:	6823      	ldr	r3, [r4, #0]
 80056de:	f043 0320 	orr.w	r3, r3, #32
 80056e2:	6023      	str	r3, [r4, #0]
 80056e4:	4832      	ldr	r0, [pc, #200]	@ (80057b0 <_printf_i+0x238>)
 80056e6:	2778      	movs	r7, #120	@ 0x78
 80056e8:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 80056ec:	6823      	ldr	r3, [r4, #0]
 80056ee:	6831      	ldr	r1, [r6, #0]
 80056f0:	061f      	lsls	r7, r3, #24
 80056f2:	f851 5b04 	ldr.w	r5, [r1], #4
 80056f6:	d402      	bmi.n	80056fe <_printf_i+0x186>
 80056f8:	065f      	lsls	r7, r3, #25
 80056fa:	bf48      	it	mi
 80056fc:	b2ad      	uxthmi	r5, r5
 80056fe:	6031      	str	r1, [r6, #0]
 8005700:	07d9      	lsls	r1, r3, #31
 8005702:	bf44      	itt	mi
 8005704:	f043 0320 	orrmi.w	r3, r3, #32
 8005708:	6023      	strmi	r3, [r4, #0]
 800570a:	b11d      	cbz	r5, 8005714 <_printf_i+0x19c>
 800570c:	2310      	movs	r3, #16
 800570e:	e7ad      	b.n	800566c <_printf_i+0xf4>
 8005710:	4826      	ldr	r0, [pc, #152]	@ (80057ac <_printf_i+0x234>)
 8005712:	e7e9      	b.n	80056e8 <_printf_i+0x170>
 8005714:	6823      	ldr	r3, [r4, #0]
 8005716:	f023 0320 	bic.w	r3, r3, #32
 800571a:	6023      	str	r3, [r4, #0]
 800571c:	e7f6      	b.n	800570c <_printf_i+0x194>
 800571e:	4616      	mov	r6, r2
 8005720:	e7bd      	b.n	800569e <_printf_i+0x126>
 8005722:	6833      	ldr	r3, [r6, #0]
 8005724:	6825      	ldr	r5, [r4, #0]
 8005726:	6961      	ldr	r1, [r4, #20]
 8005728:	1d18      	adds	r0, r3, #4
 800572a:	6030      	str	r0, [r6, #0]
 800572c:	062e      	lsls	r6, r5, #24
 800572e:	681b      	ldr	r3, [r3, #0]
 8005730:	d501      	bpl.n	8005736 <_printf_i+0x1be>
 8005732:	6019      	str	r1, [r3, #0]
 8005734:	e002      	b.n	800573c <_printf_i+0x1c4>
 8005736:	0668      	lsls	r0, r5, #25
 8005738:	d5fb      	bpl.n	8005732 <_printf_i+0x1ba>
 800573a:	8019      	strh	r1, [r3, #0]
 800573c:	2300      	movs	r3, #0
 800573e:	6123      	str	r3, [r4, #16]
 8005740:	4616      	mov	r6, r2
 8005742:	e7bc      	b.n	80056be <_printf_i+0x146>
 8005744:	6833      	ldr	r3, [r6, #0]
 8005746:	1d1a      	adds	r2, r3, #4
 8005748:	6032      	str	r2, [r6, #0]
 800574a:	681e      	ldr	r6, [r3, #0]
 800574c:	6862      	ldr	r2, [r4, #4]
 800574e:	2100      	movs	r1, #0
 8005750:	4630      	mov	r0, r6
 8005752:	f7fa fd45 	bl	80001e0 <memchr>
 8005756:	b108      	cbz	r0, 800575c <_printf_i+0x1e4>
 8005758:	1b80      	subs	r0, r0, r6
 800575a:	6060      	str	r0, [r4, #4]
 800575c:	6863      	ldr	r3, [r4, #4]
 800575e:	6123      	str	r3, [r4, #16]
 8005760:	2300      	movs	r3, #0
 8005762:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8005766:	e7aa      	b.n	80056be <_printf_i+0x146>
 8005768:	6923      	ldr	r3, [r4, #16]
 800576a:	4632      	mov	r2, r6
 800576c:	4649      	mov	r1, r9
 800576e:	4640      	mov	r0, r8
 8005770:	47d0      	blx	sl
 8005772:	3001      	adds	r0, #1
 8005774:	d0ad      	beq.n	80056d2 <_printf_i+0x15a>
 8005776:	6823      	ldr	r3, [r4, #0]
 8005778:	079b      	lsls	r3, r3, #30
 800577a:	d413      	bmi.n	80057a4 <_printf_i+0x22c>
 800577c:	68e0      	ldr	r0, [r4, #12]
 800577e:	9b03      	ldr	r3, [sp, #12]
 8005780:	4298      	cmp	r0, r3
 8005782:	bfb8      	it	lt
 8005784:	4618      	movlt	r0, r3
 8005786:	e7a6      	b.n	80056d6 <_printf_i+0x15e>
 8005788:	2301      	movs	r3, #1
 800578a:	4632      	mov	r2, r6
 800578c:	4649      	mov	r1, r9
 800578e:	4640      	mov	r0, r8
 8005790:	47d0      	blx	sl
 8005792:	3001      	adds	r0, #1
 8005794:	d09d      	beq.n	80056d2 <_printf_i+0x15a>
 8005796:	3501      	adds	r5, #1
 8005798:	68e3      	ldr	r3, [r4, #12]
 800579a:	9903      	ldr	r1, [sp, #12]
 800579c:	1a5b      	subs	r3, r3, r1
 800579e:	42ab      	cmp	r3, r5
 80057a0:	dcf2      	bgt.n	8005788 <_printf_i+0x210>
 80057a2:	e7eb      	b.n	800577c <_printf_i+0x204>
 80057a4:	2500      	movs	r5, #0
 80057a6:	f104 0619 	add.w	r6, r4, #25
 80057aa:	e7f5      	b.n	8005798 <_printf_i+0x220>
 80057ac:	08005969 	.word	0x08005969
 80057b0:	0800597a 	.word	0x0800597a

080057b4 <memmove>:
 80057b4:	4288      	cmp	r0, r1
 80057b6:	b510      	push	{r4, lr}
 80057b8:	eb01 0402 	add.w	r4, r1, r2
 80057bc:	d902      	bls.n	80057c4 <memmove+0x10>
 80057be:	4284      	cmp	r4, r0
 80057c0:	4623      	mov	r3, r4
 80057c2:	d807      	bhi.n	80057d4 <memmove+0x20>
 80057c4:	1e43      	subs	r3, r0, #1
 80057c6:	42a1      	cmp	r1, r4
 80057c8:	d008      	beq.n	80057dc <memmove+0x28>
 80057ca:	f811 2b01 	ldrb.w	r2, [r1], #1
 80057ce:	f803 2f01 	strb.w	r2, [r3, #1]!
 80057d2:	e7f8      	b.n	80057c6 <memmove+0x12>
 80057d4:	4402      	add	r2, r0
 80057d6:	4601      	mov	r1, r0
 80057d8:	428a      	cmp	r2, r1
 80057da:	d100      	bne.n	80057de <memmove+0x2a>
 80057dc:	bd10      	pop	{r4, pc}
 80057de:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 80057e2:	f802 4d01 	strb.w	r4, [r2, #-1]!
 80057e6:	e7f7      	b.n	80057d8 <memmove+0x24>

080057e8 <_sbrk_r>:
 80057e8:	b538      	push	{r3, r4, r5, lr}
 80057ea:	4d06      	ldr	r5, [pc, #24]	@ (8005804 <_sbrk_r+0x1c>)
 80057ec:	2300      	movs	r3, #0
 80057ee:	4604      	mov	r4, r0
 80057f0:	4608      	mov	r0, r1
 80057f2:	602b      	str	r3, [r5, #0]
 80057f4:	f7fc fc5a 	bl	80020ac <_sbrk>
 80057f8:	1c43      	adds	r3, r0, #1
 80057fa:	d102      	bne.n	8005802 <_sbrk_r+0x1a>
 80057fc:	682b      	ldr	r3, [r5, #0]
 80057fe:	b103      	cbz	r3, 8005802 <_sbrk_r+0x1a>
 8005800:	6023      	str	r3, [r4, #0]
 8005802:	bd38      	pop	{r3, r4, r5, pc}
 8005804:	200005bc 	.word	0x200005bc

08005808 <memcpy>:
 8005808:	440a      	add	r2, r1
 800580a:	4291      	cmp	r1, r2
 800580c:	f100 33ff 	add.w	r3, r0, #4294967295
 8005810:	d100      	bne.n	8005814 <memcpy+0xc>
 8005812:	4770      	bx	lr
 8005814:	b510      	push	{r4, lr}
 8005816:	f811 4b01 	ldrb.w	r4, [r1], #1
 800581a:	f803 4f01 	strb.w	r4, [r3, #1]!
 800581e:	4291      	cmp	r1, r2
 8005820:	d1f9      	bne.n	8005816 <memcpy+0xe>
 8005822:	bd10      	pop	{r4, pc}

08005824 <_realloc_r>:
 8005824:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005828:	4607      	mov	r7, r0
 800582a:	4614      	mov	r4, r2
 800582c:	460d      	mov	r5, r1
 800582e:	b921      	cbnz	r1, 800583a <_realloc_r+0x16>
 8005830:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8005834:	4611      	mov	r1, r2
 8005836:	f7ff bc4d 	b.w	80050d4 <_malloc_r>
 800583a:	b92a      	cbnz	r2, 8005848 <_realloc_r+0x24>
 800583c:	f7ff fbde 	bl	8004ffc <_free_r>
 8005840:	4625      	mov	r5, r4
 8005842:	4628      	mov	r0, r5
 8005844:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8005848:	f000 f81a 	bl	8005880 <_malloc_usable_size_r>
 800584c:	4284      	cmp	r4, r0
 800584e:	4606      	mov	r6, r0
 8005850:	d802      	bhi.n	8005858 <_realloc_r+0x34>
 8005852:	ebb4 0f50 	cmp.w	r4, r0, lsr #1
 8005856:	d8f4      	bhi.n	8005842 <_realloc_r+0x1e>
 8005858:	4621      	mov	r1, r4
 800585a:	4638      	mov	r0, r7
 800585c:	f7ff fc3a 	bl	80050d4 <_malloc_r>
 8005860:	4680      	mov	r8, r0
 8005862:	b908      	cbnz	r0, 8005868 <_realloc_r+0x44>
 8005864:	4645      	mov	r5, r8
 8005866:	e7ec      	b.n	8005842 <_realloc_r+0x1e>
 8005868:	42b4      	cmp	r4, r6
 800586a:	4622      	mov	r2, r4
 800586c:	4629      	mov	r1, r5
 800586e:	bf28      	it	cs
 8005870:	4632      	movcs	r2, r6
 8005872:	f7ff ffc9 	bl	8005808 <memcpy>
 8005876:	4629      	mov	r1, r5
 8005878:	4638      	mov	r0, r7
 800587a:	f7ff fbbf 	bl	8004ffc <_free_r>
 800587e:	e7f1      	b.n	8005864 <_realloc_r+0x40>

08005880 <_malloc_usable_size_r>:
 8005880:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8005884:	1f18      	subs	r0, r3, #4
 8005886:	2b00      	cmp	r3, #0
 8005888:	bfbc      	itt	lt
 800588a:	580b      	ldrlt	r3, [r1, r0]
 800588c:	18c0      	addlt	r0, r0, r3
 800588e:	4770      	bx	lr

08005890 <_init>:
 8005890:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005892:	bf00      	nop
 8005894:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8005896:	bc08      	pop	{r3}
 8005898:	469e      	mov	lr, r3
 800589a:	4770      	bx	lr

0800589c <_fini>:
 800589c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800589e:	bf00      	nop
 80058a0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80058a2:	bc08      	pop	{r3}
 80058a4:	469e      	mov	lr, r3
 80058a6:	4770      	bx	lr
