/**
 * @mainpage Zap'Em Blast'Em Robots
 *
 * @section Creators
 * - [Kai De La Cruz](https://sites.google.com/view/kaicustoms/home?authuser=0)
 * - [Andrew Carr](https://andrewpatcarr.github.io/projects/)
 *
 * @section Introduction
 * Zap'Em Blast'Em Robots is an interactive game inspired by Rock'Em Sock'Em 
 * Robots, developed as part of the Mechanical Control System Design course at 
 * Cal Poly, San Luis Obispo. Designed by graduate students in the Mechanical 
 * Engineering program, the project showcases a fully integrated system 
 * combining mechanical, electrical, and software components.
 *
 * Over the course of a 10-week quarter, our team engineered custom actuators, 
 * fine-tuned sensors, and iterated on game mechanics through structured testing 
 * and evaluation. The result is a dynamic, laser-tag-inspired robot duel 
 * platform with responsive control and real-time scoring.
 *
 * \htmlonly
 * <div style="display: flex; justify-content: left; gap: 20px;">
 *   <iframe width="560" height="315" 
 *		src="https://www.youtube.com/embed/SelIsVGXWzg" 
 *   	title="Gameplay video" allowfullscreen></iframe>
 *   <iframe width="560" height="315" 
 *		src="https://www.youtube.com/embed/AnsMpqMrh2k" title="Gameplay video" 
 * 		allowfullscreen></iframe>
 * </div>
 * \endhtmlonly
 *
 * \htmlonly
 * <div style="margin-left: 10%;">
 * \endhtmlonly
 * @section toc_section Table of Contents
 * - @ref gameplay_page
 * - @ref mechanical_page
 * - @ref electrical_page
 * - @ref software_page
 * \htmlonly
 * </div>
 * \endhtmlonly
 *
 * <img src="media/photos/me507_S25_ClassPhoto.jpeg" alt="Class Photo"
 *     	style="display: block; margin-left: 10%; width: 600px;" />
 */

/**
 * @page gameplay_page Game Premise & Features
 *
 * @section Game Premise
 * Two robots face off in a laser-tag match. Instead of punching, they "zap"
 * each other using laser beams. Each robot has light sensors embedded into 
 * their chests to detect hits.
 * The first to land 5 successful shots wins the match.
 *
 * After an initial calibration sequence, players must press and hold 'shoot' 
 * for 2 seconds to start the game. User inputs are now enabled and if a fighter 
 * lands a shot, another shot will not register for an additional 2 second 
 * period. After the game is over users inputs are turned off until a new game 
 * is started. 
 *
 * @section Features
 * * Robot position control via throttle inputs
 * * LCD scoreboard and game state display
 * * Sound feedback for "zap", "hit", "game start", and "game end"
 * * "Shoot" button to raise shield or fire laser
 * * Track sliders to strafe robot positions
 *
 * \htmlonly
 * <div style="display: flex; justify-content: left; align-items: flex-start; gap: 20px;">
 *    <img src="media/photos/LaserCaution.jpg" alt="Laser Caution"
 *     		style="display: block; margin-left: 15%; height: 500px;" />
 *     <img src="media/photos/mountedPCB.jpg" alt="Mounted PCB" 
 *      style="height: 500px;"/>
 * </div>
 * \endhtmlonly
 */

/**
 * @page hardware_page Hardware
 * @section Mechanical
 *
| QTY | PART                | DESCRIPTION                             | LINK                            |
|-----|---------------------|-----------------------------------------|---------------------------------|
|  1  | LCD screen w/ backpack | For scoreboard and user interface    | [LCD](https://www.digikey.com/en/products/detail/sunfounder/CN0296D/18668625?gclsrc=aw.ds&&utm_adgroup=&utm_source=google&utm_medium=cpc&utm_campaign=PMax%20Shopping_Product_Medium%20ROAS%20Categories&utm_term=&utm_content=&utm_id=go_cmp-20223376311_adg-_ad-__dev-c_ext-_prd-18668625_sig-CjwKCAjwn6LABhBSEiwAsNJrjnKjY_diidke7wgz2XhMoGNyCHbKcRHyNVhZmeeQPOnZnX1fyazF0RoCxRgQAvD_BwE&gad_source=1&gbraid=0AAAAADrbLlgeRZV_NhoUv30r-iRF0RTrv&gclid=CjwKCAjwn6LABhBSEiwAsNJrjnKjY_diidke7wgz2XhMoGNyCHbKcRHyNVhZmeeQPOnZnX1fyazF0RoCxRgQAvD_BwE&gclsrc=aw.ds) |
|  2  | Potentiometer       | User inputs for fighter rotation        | [Potentiometer](https://www.amazon.com/gp/product/B08B3SGL2L/ref=sw_img_1?smid=A1CLMBP6H6OH8Q&psc=1) |
|  2  | Geared DC motor w/ encoder | Fighter rotation, GR = 60:1, 6V  | [DC Motor](https://www.digikey.com/en/products/detail/dfrobot/FIT0483/7087160?gclsrc=aw.ds&&utm_adgroup=&utm_source=google&utm_medium=cpc&utm_campaign=PMax%20Shopping_Product_Low%20ROAS%20Categories&utm_term=&utm_content=&utm_id=go_cmp-20243063506_adg-_ad-__dev-c_ext-_prd-7087160_sig-CjwKCAjwn6LABhBSEiwAsNJrjqj0t2M5dm91PS4w_QAQ5e77tbg0P8T0pFQD0vhHEAIXZ6_Goph4ehoCUGsQAvD_BwE&gad_source=1&gbraid=0AAAAADrbLlhbS8xtJZAHvTT2x9pSJri1O&gclid=CjwKCAjwn6LABhBSEiwAsNJrjqj0t2M5dm91PS4w_QAQ5e77tbg0P8T0pFQD0vhHEAIXZ6_Goph4ehoCUGsQAvD_BwE&gclsrc=aw.ds) |
|  2  | Mini Servo Motors   | Shield actuation                        | [Servo](https://www.amazon.com/Miuzei-Geared-Helicopter-Arduino-Project/dp/B0BWJ4RKGV/ref=sr_1_2_sspa?dib=eyJ2IjoiMSJ9.zKdFX4LDfJj3RzL495S_2cI-8GNs_0ardkHEw4njxgYBfadK8T8rC2sFHUY_Hb4p-qGZ8tWdusV1Ilfg1L-lvQzn9-E4_lE-zJxlPlnujbUtV_QJJx4BcgeItagyeZH1fCGKXx-f4Fc2rbFp1p6ELkK0lgmPlwMKOhY4_l8lRxqavXs2x90gJk75cjQDiMvLrj7F9_-uCpzyfND23yOqS8UUZooDyeSgtIOtGcxu1lWR6-6rA5ZQS6bHHIKcWd2sVuxLzhXc3Hw-ILBZU2GTTILRLJyhp1n3CQku64iPuOk.1rgGUOqkUb1NwRlZtY9OCDg-Y4wscwnBpDU9qeHMxE4&dib_tag=se&keywords=mini%2Bservo%2Bmotor&qid=1743793456&sr=8-2-spons&sp_csd=d2lkZ2V0TmFtZT1zcF9hdGY&th=1) |
|  2  | Laser pointers      | Fighter shooting mechanisms             | [Laser](https://www.amazon.com/module-Industrial-Module-adjustable-length/dp/B0CN6ZNN61/ref=sr_1_12_sspa?crid=WD1TOPCSKMJB&dib=eyJ2IjoiMSJ9.ueABioB9mz_YYXcY9gC5wXj95OzQTKtZnuwEVJpBMnZilk80mXawHAleTq6e-HdMixb7y3x_faRPFvacAeGPNeu_Ge1HqOjczblAVS51SIfEkPQ4a0aX8VZf9voQ4ojUheTWLwZkt6BARsXuLqixh7HujCAvnw9mLkfWLKDZa7OkCb8RTCwdoe6iwCkaSwm_vRo9FNumcf73yuIZhiElNRC_j_HYuQlIw0JYSP-4dZ6HMYedUsT4MAv_Q4acySOqmLo6zJ3aIklpFOsQhrv5keXIwkoxiKQhMa2355sMf08.WgHPMjP08ZWIOWClfVPHR0A5g8BFmhFxlQJyZYuQTqE&dib_tag=se&keywords=mini%2Blaser%2Bpoints&qid=1743793584&sprefix=mini%2Blaser%2Bpoint%2Caps%2C175&sr=8-12-spons&sp_csd=d2lkZ2V0TmFtZT1zcF9tdGY&th=1) |
|  2  | Arcade push buttons | Fighter shield & firing inputs          | [Buttons](https://www.adafruit.com/product/3490) |
|  1  | 6V, 5A Power Supply | Barrel jack interface power supply      | [Power Supply](https://www.amazon.com/6V-5A-Power-Supply-Transformer/dp/B07R1K5H56/ref=asc_df_B07R1K5H56?mcid=3df491cd0b9b3873b303a0d7c75c0171&hvocijid=3478865598265135985-B07R1K5H56-&hvexpln=73&tag=hyprod-20&linkCode=df0&hvadid=721245378154&hvpos=&hvnetw=g&hvrand=3478865598265135985&hvpone=&hvptwo=&hvqmt=&hvdev=c&hvdvcmdl=&hvlocint=&hvlocphy=9007527&hvtargid=pla-2281435177898&psc=1) |
|  2  | Photoresistor       | Target on fighters chest to sense hit   | [Photoresistor](https://www.elexp.com/products/08gl2053920-mm-photoresistor-50-to-100k-ohm?variant=42038615572708) |
|  1  | Speaker             | Fighter and game sound effects          | [Speaker](https://www.adafruit.com/product/3885) |
|  2  | Linear tracks       | Fighter translation                     | [Tracks](https://www.amazon.com/KGTCN-Miniature-Sliding-Guideway-Machine/dp/B0DY4LGPS5?crid=1KNNL2R120LHU&dib=eyJ2IjoiMSJ9.pQhMeqkqSsk4FvEpuMRc10wGuMBBCR6OXF7yaOsUA-E1mvCuxoNECw632wuAwfJ--I06zHnx4p2EZtQWPbtFeHhioi3Lm2sFQ98bckiqY6_WlI0zxxqm8B3znZhSaZTt6AHLyjbVe4eN1ZBVem7RKOvUe6UI5Stwo7C5ulBrL40cd2eOcZr7mHzTSm9ZoRzIiuNWBJMAF_rtugCeRNmN13utsEC8nHiR_aFlYwNbGWY.e1xFeI0YO_vKVjkdhgQNsTKdhMS9zKK4OmPSaP7BFjU&dib_tag=se&keywords=linear%2Btrack&qid=1745006530&sprefix=linear%2Btrack%2Caps%2C198&sr=8-14&th=1) |
 *
 * @section Electrical
 * 
| QTY | PART              | DESCRIPTION                               | LINK                                                                 |
|-----|-------------------|-------------------------------------------|----------------------------------------------------------------------|
| 1   | Fuse              | Circuit protection                        | [Fuse](https://www.digikey.com/en/products/detail/littelfuse-inc/2016L500DR/6234821) |
| 1   | DC power jack     | Power supply connection                   | [DC Jack](https://www.digikey.com/en/products/detail/w%C3%BCrth-elektronik/694108106102/5047824?msockid=073d36e0a1806daa32562467a0046cfb) |
| 1   | High-speed clock  | ABM3-25.000MHZ-D2Y-T                      | [HSE](https://www.digikey.com/en/products/detail/abracon-llc/ABM3-25-000MHZ-D2Y-T/2344585) |
| 1   | Tactile switch    | For board reset button                    | [Tactile Switch](https://www.mouser.com/ProductDetail/Omron-Electronics/B3U-1000PM?qs=hnUcNC2tU0oiJUWqjOlHqA%3D%3D) |
| 2   | B7B-XH-A          | 7-pin connector header                    | [B7B-XH-A](https://www.digikey.com/en/products/detail/jst-sales-america-inc/B7B-XH-A-LF-SN/99130) |
| 2   | B15B-XH-A         | 15-pin connector header                   | [B15B-XH-A](https://www.digikey.com/en/products/detail/jst-sales-america-inc/B15B-XH-A/1651052) |
| 1   | Green LED         | ST-Link connection indicator              | [Green LED](https://www.mouser.com/ProductDetail/Omron-Electronics/B3U-1000PM?qs=hnUcNC2tU0oiJUWqjOlHqA%3D%3D) |
| 1   | DRV8833CPWPR      | IC motor driver                           | [Motor driver](https://www.digikey.com/en/products/detail/texas-instruments/DRV8833CPWPR/4972147?msockid=073d36e0a1806daa32562467a0046cfb) |
| 1   | LM2576SX-5.0/NOPB | Step-down switching regulator             | [Switching Regulator](https://www.digikey.com/en/products/detail/texas-instruments/LM2576SX-5-0-NOPB/366793) |
| 1   | 1x4 pin header    | Connectors for I2C LCD screen             | [1x4 Header](https://www.digikey.com/en/products/detail/sullins-connector-solutions/GRPB041VWVN-RC/1786440) |
| 1   | 1x6 pin header    | Connectors for UART ST-Link debugger      | [1x6 Header](https://www.digikey.com/en/products/detail/adam-tech/ADT-AMP1251106S4BS165A1/9832042) |
| 2   | RZM002P02T2L      | P-mosfets for laser interface with button | [P-mosfet](https://www.digikey.com/en/products/detail/rohm-semiconductor/RZM002P02T2L/2336819) |
| 1   | MBR0520LT1G       | Schottky diode from LDO circuit           | [Diode](https://www.digikey.com/en/products/detail/onsemi/MBR0520LT1G/918574?s=N4IgTCBcDaILICEBKAGArGFAZAKgRgHEQBdAXyA) |
| 1   | STM32F411CEU6     | Microcontroller unit                      | [STM32F411CEU6](https://www.digikey.com/en/products/detail/stmicroelectronics/STM32F411CEU6/4935720) |
| 1   | TLV73333PDBVR     | IC Linear regulator (LDO)                 | [LDO](https://www.digikey.com/en/products/detail/texas-instruments/TLV73333PDBVR/5022378) |
 * *Resistor, capacitor, inductor parts not included*
 *
 */

/**
 * @page mechanical_page Mechanical Design
 * @section Design
 * The mechanical design consists of three primary components: game housing, 
 * sliders, and fighter controls. The housing enclosure serves as the mounting 
 * structure for key components such as the sliders and electronics. Designed 
 * to be approximately one square foot, the enclosure balances portability with 
 * ease of user interaction. 
 * 
 * Each fighter will be mounted on a two-track slider 
 * system, enabling movement both forward and sideways across the game arena. 
 * A DC motor mounted directly beneath each fighter provides limited rotational 
 * control for aiming the laser. The control system includes user-operated 
 * throttles, allowing players to manipulate their fighters. Each throttle is 
 * attached to an encoder, enabling rotational input to control the DC motors. 
 * A button on top of each handle allows users to raise the shield and fire the 
 * laser.
 *
 * \htmlonly
 * <div style="display: flex; justify-content: left; align-items: flex-start; gap: 20px;">
 * <img src="media/photos/assemblyCAD.png" alt="Assembly CAD" 
 * 		style="display: block; height: 450px;"/>
 * <img src="media/photos/BallonAssembly.png" alt="Assembly Drawing" 
 *      style="height: 450px;"/>
 * </div>
 * \endhtmlonly 
 *
 * @section Manufacturing
 * The primary manufacturing method for this project is 3D printing, chosen for 
 * its simplicity, cost-effectiveness, and ability to produce complex geometries 
 * needed to integrate sensors and actuators. Most components, including the 
 * fighters and part of the housing, are printed using PLA filament. 
 * 
 * The housing box itself is laser cut from 1/4 inch wood with finger joints for 
 * mechanical strength. Track sliders, mounts, and adapters are either 
 * through-hole bolted connections or adhered to the housing. 
 * 
 * Of the more complicated assemblies, the controller throttle is made up of 3 
 * parts: the throttle, potentiometer mount, and cover plate. The potentiometer 
 * mounts to the track slider assembly and houses the potentiometer. The 
 * throttle is custom fitted to the potentiometer spline and two linear springs 
 * restore the throttle back to neural upon release. The cover hides this 
 * assembly and ensures that wires will not snag during use. 
 * 
 * \htmlonly
 * <div style="display: flex; justify-content: left; gap: 20px;">
 *   <img src="media/photos/throttleassembly.jpg" alt="Controller Assembly" 
 *        style="width: 400px;"/>
 *   <img src="media/photos/Earlydev.jpg" alt="Housing Assembly" 
 *        style="width: 400px;"/>
 *	 <iframe width="400" src="https://www.youtube.com/embed/qQSY5Dzg7l8" 
 		  title="Shield mechanism" allowfullscreen></iframe>
 * </div>
 * \endhtmlonly
 */

/**
 * @page electrical_page Electrical Design
 * @section Design
 * <div style="margin-left: 0%;">
 * <h2><a href="https://a360.co/3HyZWpD" target="_blank" 
 *		rel="noopener noreferrer"> 🗺️ Schematic Drawings</a></h2>
 * </div>
 *
 * The circuit design was developed using Fusion 360, and the custom PCB manages 
 * all core aspects of game control. Debugging and firmware development were 
 * facilitated using an ST-Link programmer, with UART communication enabling 
 * real-time testing and output monitoring.
 * 
 * The PCB includes integrated circuitry for multi-voltage power regulation 
 * (6V, 5V, and 3.3V rails), dual H-bridge motor driver support, and a wide 
 * array of GPIO and analog interfaces connected to an STM32F411CEU
 * microcontroller.
 * 
 * In total, 39 wire-to-board crimp connections were required to interface all 
 * peripheral components, utilizing nearly every available pin on the 
 * microcontroller. 
 * 
 * 
 * \htmlonly
 * <div style="display: flex; justify-content: left; align-items: flex-start; gap: 20px;">
 *   <img src="media/photos/AndrewSolder.jpg" alt="Soldering" 
 *        style="height: 500px;"/>
 *	 <img src="media/photos/MCU_Design_v32.png" alt="PCB CAD" 
 *        style="height: 500px;"/>
 *   <img src="media/photos/Schematic.png" alt="Schematic" 
 *        style="height: 500px;"/>
 * </div>
 * \endhtmlonly
 *
 * **Laser control**
 * 
 * To control our lasers, we use a PFET along with an open-drain GPIO. This allows us to 
 * use a single MOSFET and a single pin to drive our laser. The selection of our MOSFET for this
 * purpose was critical. It needed to have a source voltage that was also compatible as the 
 * gate voltage. We connect source and gate through a 10 kOHm resistor. 
 * When our pin is in open mode, our source voltage goes to our gate which closes
 * the switch. When our pin is drain mode, our gate voltage is pulled to ground within our microcontroller
 * which opens the MOSFET switch, turning our laser on. When our board was delivered, our lasers did 
 * not work as planned. This ended being due to an incorrect schematic symbol and pcb footprint.
 * The ones provided on digikey were for a NFET which meant that our pins were all rotated by one.
 * Luckily, this meant, with some careful heatgun work, that we could rotate our MOSFET by 120 degrees
 * to get it working again.
 *
 * \htmlonly
 * <img src="media\photos\mosfet_swap.jpg" alt="mosfet_swap" 
 *        style="height: 500px;"/>
 * \endhtmlonly

 * Future iterations of the PCB may involve more deliberate pin assignments, 
 * particularly for the audio interface to improve performance and simplify 
 * routing. 
 * Additionally, a larger microcontroller may be necessary to accommodate 
 * expanded functionality, as the current implementation pushed the limits of 
 * both available I/O pins and onboard memory.
 * The inclusion of audio files—stored in flash or handled through runtime 
 * buffers—nearly exhausted the system’s RAM, highlighting the need for 
 * increased memory capacity in subsequent designs.
 *
* @section high_level High-Level Wiring Diagram
 * <div style="margin-left: 0%;">
 * 	 <img src="media/photos/wiringdiagram.png" alt="Wiring Diagram" 
 *        style="height: 500px;"/>
 * </div>
 */

/**
 * @page software_page Software Design
 * @section Design
 * Our project utilizes a task-based architecture with finite state machines (FSM). 
 * It is written completely in C within the STM Cube IDE which enables us to design 
 * setup pins, timers, interrupts and DMA all within the ioc file. 
 *
 * Our FSMs were implemented using function pointers with "psuedo-object-oriented" methods.
 * This was crucial in making our C code scalable, cooperative, organized, and easy to debug. In main.c,
 * we run each task, with some conditions, in a round robin fashion. The laser, shield, and rotational
 * controls are enabled or disabled depending on the state of the game. Calibration of the game, which includes
 * photoresistors and dc motors, occurs at start up.
 *
 * Our game was split into 6 tasks; however, the controller, photoresistor, and shoot tasks were duplicated 
 * for the blue and red fighters. Each task and its FSM are provided below.
 *
 * @section feature_section Key Features
 * **Audio**
 * 
 * After our PCB was ordered, we realized that adding audio to our game would enhance game mechanics
 * and make it feel more like a real product. Luckily, we had one timer pin left that we had set aside
 * as a spare attached to our 15-pin jsts. This allowed us to use intersective PWM mapping for audio signals
 * which utilizes the low-pass filtering nature of a speaker along with the high frequency PWM abilities of
 * our microcontroller. We take a mp3 audio file and convert it to a c array filled with audio signal voltage points.
 * Then, we takes those points and adjust our duty cycle to represent them. Our PWM frequency runs twice as fast as the
 * audio signal we are trying to represent which increases sound quality greatly. The sounds that we were trying to play were 
 * not particularly advanced which led to our system doing a great job at playing them. One interesting result of this method
 * was how space inefficient it is. A 1 sec mp3 file turned into a c-array for our uses would almost 10x in size.
 * 
 * <div style="margin-left: 0%;">
 * 	 <img src="media/photos/stemma_speaker.jpg" alt="speaker" 
 *        style="height: 500px;"/>
 * </div>
 * courtesy of <a href="https://www.adafruit.com/product/3885" target="_blank" rel="noopener noreferrer">  Adafruit </a>
 * </div>

 * **Laser sensing**
 * 
 * To sense the lasers, we use photoresistors attached to our onboard ADC. We use a voltage divider to split our output to
 * a readable amount. Calibration is done on startup to take a reading of the current light in the room and to adjust
 * our threshold value accordingly. When developing these, we spent over 3 hours thinking that our button was shorting into the 
 * photoresistor line because each time we would hit the button, the ADC value would maximize. This ended up being due to the shield
 * raising at the same moment which allowed more sunlight to hit our photoresistor. To counter this, we created a 3D printed cover that 
 * was less sensitive to sunlight but was still sensitive to our laser.
 * 
 * **Control**
 *
 * To control each players fighter, they utilize a joystick. As mentioned in mechanical design, this joystick is spring-loaded and can rotate on a 
 * potentiometer. Also, it has a button integrated on the top of it. The potentiometer controls the robot through a positional, proportional controller.
 * In the development of the controller, we realized that having only proportional control gives the game a more springy feel
 * which corresponds to the springy feel of the joystick. We implemented integral control for a moment but ended up removing to keep this
 * game mechanic. The button is attached to an interrupt and is called on either edge change. This is because the laser and shield go up
 * while the button is pressed and held. When the button is released, the shield comes down and laser turns off immediately. 
 * 
 * @section FSM_section Task Finite State Machines
 * <div style="margin-left: 0%;">
 * 	 <img src="media/photos/FSMS.jpg" alt="FSM's" 
 *        style="height: 1200px;"/>
 * </div>
 */
